window.SIDEBAR_ITEMS = {"fn":[["binary_search","binary search for monotone segment"],["floor_kernel","$y = \\left\\lfloor\\frac{n}{x}\\right\\rfloor$"],["parallel_binary_search",""],["run_length_encoding","return: [(elem, length)]"],["slide_minimum",""],["ternary_search","like `(left..=right).min_by_key(f)`"]],"struct":[["BabyStepGiantStep","$\\min{1\\le i \\le n | x^i=a}$"],["BitDp",""],["Combinations",""],["ConvexHullTrick",""],["DivisorTransform",""],["EsperEstimator",""],["EsperSolver",""],["ImpartialGameAnalyzer",""],["ImpartialGamer",""],["IndependentSubSet",""],["MultipleTransform",""],["PartisanGameAnalyzer",""],["PartisanGamer",""],["RhoPath","$P_0 =$ `init`, $P_{i+1} = next(P_i)$"],["SlideMinimum",""],["SqrtDecompositionBuckets",""],["SubsetTransform",""],["Subsets",""],["SupersetTransform",""],["XorBasis","Basis of xor operation."],["ZeroSumGameAnalyzer",""],["ZeroSumGamer",""]],"trait":[["Bisect","binary search helper"],["ImpartialGame",""],["MoSolver",""],["PartisanGame",""],["SliceBisectExt","binary search for slice"],["SliceCombinationsExt",""],["SliceSortExt",""],["SqrtDecomposition",""],["Trisect","ternary search helper"],["ZeroSumGame",""]]};