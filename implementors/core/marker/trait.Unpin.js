(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.MaxOperation.html\" title=\"struct competitive::algebra::MaxOperation\">MaxOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::MaxOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.MinOperation.html\" title=\"struct competitive::algebra::MinOperation\">MinOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::MinOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.FirstOperation.html\" title=\"struct competitive::algebra::FirstOperation\">FirstOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::FirstOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.LastOperation.html\" title=\"struct competitive::algebra::LastOperation\">LastOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::LastOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.AdditiveOperation.html\" title=\"struct competitive::algebra::AdditiveOperation\">AdditiveOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::AdditiveOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.MultiplicativeOperation.html\" title=\"struct competitive::algebra::MultiplicativeOperation\">MultiplicativeOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::MultiplicativeOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.LinearOperation.html\" title=\"struct competitive::algebra::LinearOperation\">LinearOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::LinearOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.BitAndOperation.html\" title=\"struct competitive::algebra::BitAndOperation\">BitAndOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::BitAndOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.BitOrOperation.html\" title=\"struct competitive::algebra::BitOrOperation\">BitOrOperation</a>&lt;T&gt;","synthetic":true,"types":["competitive::algebra::operations::BitOrOperation"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.MonoidalOperation.html\" title=\"struct competitive::algebra::MonoidalOperation\">MonoidalOperation</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::MonoidalOperation"]},{"text":"impl&lt;T, F, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.GroupOperation.html\" title=\"struct competitive::algebra::GroupOperation\">GroupOperation</a>&lt;T, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::GroupOperation"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.AssocoativeOperator.html\" title=\"struct competitive::algebra::AssocoativeOperator\">AssocoativeOperator</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::AssocoativeOperator"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.AbsorbedAssocoativeOperator.html\" title=\"struct competitive::algebra::AbsorbedAssocoativeOperator\">AbsorbedAssocoativeOperator</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::AbsorbedAssocoativeOperator"]},{"text":"impl&lt;M1, M2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.CartesianOperation.html\" title=\"struct competitive::algebra::CartesianOperation\">CartesianOperation</a>&lt;M1, M2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::CartesianOperation"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.CountingOperation.html\" title=\"struct competitive::algebra::CountingOperation\">CountingOperation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::CountingOperation"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algebra/struct.ReverseOperation.html\" title=\"struct competitive::algebra::ReverseOperation\">ReverseOperation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algebra::operations::ReverseOperation"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algorithm/struct.Compress.html\" title=\"struct competitive::algorithm::Compress\">Compress</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::algorithm::compress::Compress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algorithm/struct.CHTLine.html\" title=\"struct competitive::algorithm::CHTLine\">CHTLine</a>","synthetic":true,"types":["competitive::algorithm::convex_hull_trick::CHTLine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/algorithm/struct.ConvexHullTrick.html\" title=\"struct competitive::algorithm::ConvexHullTrick\">ConvexHullTrick</a>","synthetic":true,"types":["competitive::algorithm::convex_hull_trick::ConvexHullTrick"]},{"text":"impl&lt;X, Y&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.IntersectionAutomaton.html\" title=\"struct competitive::data_structure::IntersectionAutomaton\">IntersectionAutomaton</a>&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::automaton::IntersectionAutomaton"]},{"text":"impl&lt;X, Y&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.UnionAutomaton.html\" title=\"struct competitive::data_structure::UnionAutomaton\">UnionAutomaton</a>&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::automaton::UnionAutomaton"]},{"text":"impl&lt;X, Y&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.ProductAutomaton.html\" title=\"struct competitive::data_structure::ProductAutomaton\">ProductAutomaton</a>&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::automaton::ProductAutomaton"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.LessThanAutomaton.html\" title=\"struct competitive::data_structure::LessThanAutomaton\">LessThanAutomaton</a>&lt;'a, T&gt;","synthetic":true,"types":["competitive::data_structure::automaton::LessThanAutomaton"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.GreaterThanAutomaton.html\" title=\"struct competitive::data_structure::GreaterThanAutomaton\">GreaterThanAutomaton</a>&lt;'a, T&gt;","synthetic":true,"types":["competitive::data_structure::automaton::GreaterThanAutomaton"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.ContainAutomaton.html\" title=\"struct competitive::data_structure::ContainAutomaton\">ContainAutomaton</a>&lt;'a, T&gt;","synthetic":true,"types":["competitive::data_structure::automaton::ContainAutomaton"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.ContainCounterAutomaton.html\" title=\"struct competitive::data_structure::ContainCounterAutomaton\">ContainCounterAutomaton</a>&lt;'a, T&gt;","synthetic":true,"types":["competitive::data_structure::automaton::ContainCounterAutomaton"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.AlwaysAcceptingAutomaton.html\" title=\"struct competitive::data_structure::AlwaysAcceptingAutomaton\">AlwaysAcceptingAutomaton</a>&lt;A&gt;","synthetic":true,"types":["competitive::data_structure::automaton::AlwaysAcceptingAutomaton"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.BinaryIndexedTree.html\" title=\"struct competitive::data_structure::BinaryIndexedTree\">BinaryIndexedTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::binary_indexed_tree::BinaryIndexedTree"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.BinaryIndexedTree2D.html\" title=\"struct competitive::data_structure::BinaryIndexedTree2D\">BinaryIndexedTree2D</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::binary_indexed_tree::BinaryIndexedTree2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.BitSet.html\" title=\"struct competitive::data_structure::BitSet\">BitSet</a>","synthetic":true,"types":["competitive::data_structure::bitset::BitSet"]},{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.DisjointSparseTable.html\" title=\"struct competitive::data_structure::DisjointSparseTable\">DisjointSparseTable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::disjoint_sparse_table::DisjointSparseTable"]},{"text":"impl&lt;M, E, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.LazySegmentTree.html\" title=\"struct competitive::data_structure::LazySegmentTree\">LazySegmentTree</a>&lt;M, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;E as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::lazy_segment_tree::LazySegmentTree"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.SegmentTree.html\" title=\"struct competitive::data_structure::SegmentTree\">SegmentTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::segment_tree::SegmentTree"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.DequeAggregation.html\" title=\"struct competitive::data_structure::DequeAggregation\">DequeAggregation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::sliding_winsow_aggregation::DequeAggregation"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.QueueAggregation.html\" title=\"struct competitive::data_structure::QueueAggregation\">QueueAggregation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::sliding_winsow_aggregation::QueueAggregation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.UnionFind.html\" title=\"struct competitive::data_structure::UnionFind\">UnionFind</a>","synthetic":true,"types":["competitive::data_structure::union_find::UnionFind"]},{"text":"impl&lt;G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.WeightedUnionFind.html\" title=\"struct competitive::data_structure::WeightedUnionFind\">WeightedUnionFind</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::data_structure::union_find::WeightedUnionFind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/geometry/struct.Circle.html\" title=\"struct competitive::geometry::Circle\">Circle</a>","synthetic":true,"types":["competitive::geometry::circle::Circle"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/geometry/struct.Line.html\" title=\"struct competitive::geometry::Line\">Line</a>","synthetic":true,"types":["competitive::geometry::line::Line"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/geometry/struct.LineSegment.html\" title=\"struct competitive::geometry::LineSegment\">LineSegment</a>","synthetic":true,"types":["competitive::geometry::line::LineSegment"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/geometry/struct.Real.html\" title=\"struct competitive::geometry::Real\">Real</a>","synthetic":true,"types":["competitive::geometry::Real"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"competitive/geometry/enum.CCW.html\" title=\"enum competitive::geometry::CCW\">CCW</a>","synthetic":true,"types":["competitive::geometry::CCW"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.Adjacent.html\" title=\"struct competitive::graph::Adjacent\">Adjacent</a>","synthetic":true,"types":["competitive::graph::graph::Adjacent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.Graph.html\" title=\"struct competitive::graph::Graph\">Graph</a>","synthetic":true,"types":["competitive::graph::graph::Graph"]},{"text":"impl&lt;U, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.GraphScanner.html\" title=\"struct competitive::graph::GraphScanner\">GraphScanner</a>&lt;U, T&gt;","synthetic":true,"types":["competitive::graph::graph::GraphScanner"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.GraphRec.html\" title=\"struct competitive::graph::GraphRec\">GraphRec</a>","synthetic":true,"types":["competitive::graph::graph::GraphRec"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.GraphEidCache.html\" title=\"struct competitive::graph::GraphEidCache\">GraphEidCache</a>&lt;'a&gt;","synthetic":true,"types":["competitive::graph::graph::GraphEidCache"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.GridGraph.html\" title=\"struct competitive::graph::GridGraph\">GridGraph</a>","synthetic":true,"types":["competitive::graph::graph::GridGraph"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.Adjacent4.html\" title=\"struct competitive::graph::Adjacent4\">Adjacent4</a>&lt;'a&gt;","synthetic":true,"types":["competitive::graph::graph::Adjacent4"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.Adjacent8.html\" title=\"struct competitive::graph::Adjacent8\">Adjacent8</a>&lt;'a&gt;","synthetic":true,"types":["competitive::graph::graph::Adjacent8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.RevGraph.html\" title=\"struct competitive::graph::RevGraph\">RevGraph</a>","synthetic":true,"types":["competitive::graph::graph::RevGraph"]},{"text":"impl&lt;U, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.RevGraphScanner.html\" title=\"struct competitive::graph::RevGraphScanner\">RevGraphScanner</a>&lt;U, T&gt;","synthetic":true,"types":["competitive::graph::graph::RevGraphScanner"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.LowLink.html\" title=\"struct competitive::graph::LowLink\">LowLink</a>","synthetic":true,"types":["competitive::graph::low_link::LowLink"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.RevEdge.html\" title=\"struct competitive::graph::RevEdge\">RevEdge</a>","synthetic":true,"types":["competitive::graph::maximum_flow::RevEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.FordFulkerson.html\" title=\"struct competitive::graph::FordFulkerson\">FordFulkerson</a>","synthetic":true,"types":["competitive::graph::maximum_flow::FordFulkerson"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.Dinic.html\" title=\"struct competitive::graph::Dinic\">Dinic</a>","synthetic":true,"types":["competitive::graph::maximum_flow::Dinic"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.RevCEdge.html\" title=\"struct competitive::graph::RevCEdge\">RevCEdge</a>","synthetic":true,"types":["competitive::graph::minimum_cost_flow::RevCEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.PrimalDual.html\" title=\"struct competitive::graph::PrimalDual\">PrimalDual</a>","synthetic":true,"types":["competitive::graph::minimum_cost_flow::PrimalDual"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.StronglyConnectedComponent.html\" title=\"struct competitive::graph::StronglyConnectedComponent\">StronglyConnectedComponent</a>","synthetic":true,"types":["competitive::graph::strongly_connected_component::StronglyConnectedComponent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/graph/struct.TwoSatisfiability.html\" title=\"struct competitive::graph::TwoSatisfiability\">TwoSatisfiability</a>","synthetic":true,"types":["competitive::graph::strongly_connected_component::TwoSatisfiability"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.MemorizedFactorial.html\" title=\"struct competitive::math::MemorizedFactorial\">MemorizedFactorial</a>&lt;M&gt;","synthetic":true,"types":["competitive::math::factorial::MemorizedFactorial"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.SmallModMemorizedFactorial.html\" title=\"struct competitive::math::SmallModMemorizedFactorial\">SmallModMemorizedFactorial</a>&lt;M&gt;","synthetic":true,"types":["competitive::math::factorial::SmallModMemorizedFactorial"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.Matrix.html\" title=\"struct competitive::math::Matrix\">Matrix</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::math::matrix::Matrix"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.BabyStepGiantStep.html\" title=\"struct competitive::math::BabyStepGiantStep\">BabyStepGiantStep</a>","synthetic":true,"types":["competitive::math::nums::BabyStepGiantStep"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.Polynomial.html\" title=\"struct competitive::math::Polynomial\">Polynomial</a>","synthetic":true,"types":["competitive::math::polynomial::Polynomial"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.PrimeTable.html\" title=\"struct competitive::math::PrimeTable\">PrimeTable</a>","synthetic":true,"types":["competitive::math::prime::PrimeTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/math/struct.EulerPhiTable.html\" title=\"struct competitive::math::EulerPhiTable\">EulerPhiTable</a>","synthetic":true,"types":["competitive::math::prime::EulerPhiTable"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/struct.Complex.html\" title=\"struct competitive::num::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::num::complex::Complex"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;","synthetic":true,"types":["competitive::num::mint::MInt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/struct.QuadDouble.html\" title=\"struct competitive::num::QuadDouble\">QuadDouble</a>","synthetic":true,"types":["competitive::num::quad_double::QuadDouble"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/modulus/struct.Modulo1000000007.html\" title=\"struct competitive::num::modulus::Modulo1000000007\">Modulo1000000007</a>","synthetic":true,"types":["competitive::num::mint::modulus::Modulo1000000007"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/modulus/struct.Modulo1000000009.html\" title=\"struct competitive::num::modulus::Modulo1000000009\">Modulo1000000009</a>","synthetic":true,"types":["competitive::num::mint::modulus::Modulo1000000009"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/modulus/struct.Modulo998244353.html\" title=\"struct competitive::num::modulus::Modulo998244353\">Modulo998244353</a>","synthetic":true,"types":["competitive::num::mint::modulus::Modulo998244353"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/num/modulus/struct.DynModulo.html\" title=\"struct competitive::num::modulus::DynModulo\">DynModulo</a>","synthetic":true,"types":["competitive::num::mint::modulus::DynModulo"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/string/struct.KnuthMorrisPratt.html\" title=\"struct competitive::string::KnuthMorrisPratt\">KnuthMorrisPratt</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::string::knuth_morris_pratt::KnuthMorrisPratt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/string/struct.MultipleRollingHash.html\" title=\"struct competitive::string::MultipleRollingHash\">MultipleRollingHash</a>","synthetic":true,"types":["competitive::string::rolling_hash::MultipleRollingHash"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/string/struct.RollingHash.html\" title=\"struct competitive::string::RollingHash\">RollingHash</a>","synthetic":true,"types":["competitive::string::rolling_hash::RollingHash"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/string/struct.SuffixArray.html\" title=\"struct competitive::string::SuffixArray\">SuffixArray</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::string::suffix_array::SuffixArray"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/string/struct.Zarray.html\" title=\"struct competitive::string::Zarray\">Zarray</a>","synthetic":true,"types":["competitive::string::z_algorithm::Zarray"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tools/struct.Counter.html\" title=\"struct competitive::tools::Counter\">Counter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::tools::counter::Counter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tools/struct.SimuratedAnnealing.html\" title=\"struct competitive::tools::SimuratedAnnealing\">SimuratedAnnealing</a>","synthetic":true,"types":["competitive::tools::heuristics::SimuratedAnnealing"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tools/struct.Xorshift.html\" title=\"struct competitive::tools::Xorshift\">Xorshift</a>","synthetic":true,"types":["competitive::tools::random::Xorshift"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tools/struct.Scanner.html\" title=\"struct competitive::tools::Scanner\">Scanner</a>&lt;'a&gt;","synthetic":true,"types":["competitive::tools::scanner::Scanner"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tools/struct.TotalOrd.html\" title=\"struct competitive::tools::TotalOrd\">TotalOrd</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::tools::totalord::TotalOrd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.EulerTourForEdge.html\" title=\"struct competitive::tree::EulerTourForEdge\">EulerTourForEdge</a>","synthetic":true,"types":["competitive::tree::euler_tour::EulerTourForEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.EulerTourForVertex.html\" title=\"struct competitive::tree::EulerTourForVertex\">EulerTourForVertex</a>","synthetic":true,"types":["competitive::tree::euler_tour::EulerTourForVertex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.EulerTourForRichVertex.html\" title=\"struct competitive::tree::EulerTourForRichVertex\">EulerTourForRichVertex</a>","synthetic":true,"types":["competitive::tree::euler_tour::EulerTourForRichVertex"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.LowestCommonAncestor.html\" title=\"struct competitive::tree::LowestCommonAncestor\">LowestCommonAncestor</a>&lt;'a&gt;","synthetic":true,"types":["competitive::tree::euler_tour::LowestCommonAncestor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.LCAMonoid.html\" title=\"struct competitive::tree::LCAMonoid\">LCAMonoid</a>","synthetic":true,"types":["competitive::tree::euler_tour::LCAMonoid"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.HeavyLightDecomposition.html\" title=\"struct competitive::tree::HeavyLightDecomposition\">HeavyLightDecomposition</a>","synthetic":true,"types":["competitive::tree::heavy_light_decomposition::HeavyLightDecomposition"]},{"text":"impl&lt;M, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.ReRooting.html\" title=\"struct competitive::tree::ReRooting\">ReRooting</a>&lt;M, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as <a class=\"trait\" href=\"competitive/algebra/trait.Magma.html\" title=\"trait competitive::algebra::Magma\">Magma</a>&gt;::<a class=\"type\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":true,"types":["competitive::tree::rerooting::ReRooting"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"competitive/tree/struct.TreeRec.html\" title=\"struct competitive::tree::TreeRec\">TreeRec</a>","synthetic":true,"types":["competitive::tree::tree::TreeRec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()