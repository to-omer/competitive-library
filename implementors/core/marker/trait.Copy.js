(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl&lt;T:&nbsp;Copy + Clone + Ord + MinimumBounded&gt; Copy for MaxOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + Clone + Ord + MaximumBounded&gt; Copy for MinOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + Clone + PartialEq&gt; Copy for FirstOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + Clone + PartialEq&gt; Copy for LastOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + PartialEq + AdditiveIdentity&gt; Copy for AdditiveOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + PartialEq + MultiplicativeIdentity&gt; Copy for MultiplicativeOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + PartialEq + AdditiveIdentity + MultiplicativeIdentity&gt; Copy for LinearOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + PartialEq + BitAndIdentity&gt; Copy for BitAndOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + PartialEq + BitOrIdentity&gt; Copy for BitOrOperation&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for CCW","synthetic":false,"types":[]},{"text":"impl Copy for Adjacent","synthetic":false,"types":[]},{"text":"impl Copy for GridGraph","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Complex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;M:&nbsp;Modulus&gt; Copy for MInt&lt;M&gt;","synthetic":false,"types":[]},{"text":"impl Copy for QuadDouble","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()