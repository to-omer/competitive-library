(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.MinimumBounded.html\" title=\"trait competitive::algebra::operations::MinimumBounded\">MinimumBounded</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.MaxOperation.html\" title=\"struct competitive::algebra::operations::MaxOperation\">MaxOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::MaxOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.MaximumBounded.html\" title=\"trait competitive::algebra::operations::MaximumBounded\">MaximumBounded</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.MinOperation.html\" title=\"struct competitive::algebra::operations::MinOperation\">MinOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::MinOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.FirstOperation.html\" title=\"struct competitive::algebra::operations::FirstOperation\">FirstOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::FirstOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.LastOperation.html\" title=\"struct competitive::algebra::operations::LastOperation\">LastOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::LastOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.AdditiveIdentity.html\" title=\"trait competitive::algebra::operations::AdditiveIdentity\">AdditiveIdentity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.AdditiveOperation.html\" title=\"struct competitive::algebra::operations::AdditiveOperation\">AdditiveOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::AdditiveOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.MultiplicativeIdentity.html\" title=\"trait competitive::algebra::operations::MultiplicativeIdentity\">MultiplicativeIdentity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.MultiplicativeOperation.html\" title=\"struct competitive::algebra::operations::MultiplicativeOperation\">MultiplicativeOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::MultiplicativeOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.AdditiveIdentity.html\" title=\"trait competitive::algebra::operations::AdditiveIdentity\">AdditiveIdentity</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.MultiplicativeIdentity.html\" title=\"trait competitive::algebra::operations::MultiplicativeIdentity\">MultiplicativeIdentity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.LinearOperation.html\" title=\"struct competitive::algebra::operations::LinearOperation\">LinearOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::LinearOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.BitAndIdentity.html\" title=\"trait competitive::algebra::operations::BitAndIdentity\">BitAndIdentity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.BitAndOperation.html\" title=\"struct competitive::algebra::operations::BitAndOperation\">BitAndOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::BitAndOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"competitive/algebra/operations/trait.BitOrIdentity.html\" title=\"trait competitive::algebra::operations::BitOrIdentity\">BitOrIdentity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.BitOrOperation.html\" title=\"struct competitive::algebra::operations::BitOrOperation\">BitOrOperation</a>&lt;T&gt;","synthetic":false,"types":["competitive::algebra::operations::BitOrOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T) -&gt; T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.MonoidalOperation.html\" title=\"struct competitive::algebra::operations::MonoidalOperation\">MonoidalOperation</a>&lt;T, F&gt;","synthetic":false,"types":["competitive::algebra::operations::MonoidalOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T) -&gt; T, G:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T) -&gt; T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.GroupOperation.html\" title=\"struct competitive::algebra::operations::GroupOperation\">GroupOperation</a>&lt;T, F, G&gt;","synthetic":false,"types":["competitive::algebra::operations::GroupOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T) -&gt; T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.AssocoativeOperator.html\" title=\"struct competitive::algebra::operations::AssocoativeOperator\">AssocoativeOperator</a>&lt;T, F&gt;","synthetic":false,"types":["competitive::algebra::operations::AssocoativeOperator"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>T) -&gt; T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.AbsorbedAssocoativeOperator.html\" title=\"struct competitive::algebra::operations::AbsorbedAssocoativeOperator\">AbsorbedAssocoativeOperator</a>&lt;T, F&gt;","synthetic":false,"types":["competitive::algebra::operations::AbsorbedAssocoativeOperator"]},{"text":"impl&lt;M1:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, M2:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.CartesianOperation.html\" title=\"struct competitive::algebra::operations::CartesianOperation\">CartesianOperation</a>&lt;M1, M2&gt;","synthetic":false,"types":["competitive::algebra::operations::CartesianOperation"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algebra/operations/struct.CountingOperation.html\" title=\"struct competitive::algebra::operations::CountingOperation\">CountingOperation</a>&lt;M&gt;","synthetic":false,"types":["competitive::algebra::operations::CountingOperation"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algorithm/compress/struct.Compress.html\" title=\"struct competitive::algorithm::compress::Compress\">Compress</a>&lt;T&gt;","synthetic":false,"types":["competitive::algorithm::compress::Compress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algorithm/convex_hull_trick/struct.CHTLine.html\" title=\"struct competitive::algorithm::convex_hull_trick::CHTLine\">CHTLine</a>","synthetic":false,"types":["competitive::algorithm::convex_hull_trick::CHTLine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/algorithm/convex_hull_trick/struct.ConvexHullTrick.html\" title=\"struct competitive::algorithm::convex_hull_trick::ConvexHullTrick\">ConvexHullTrick</a>","synthetic":false,"types":["competitive::algorithm::convex_hull_trick::ConvexHullTrick"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/binary_indexed_tree/struct.BinaryIndexedTree.html\" title=\"struct competitive::data_structure::binary_indexed_tree::BinaryIndexedTree\">BinaryIndexedTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::binary_indexed_tree::BinaryIndexedTree"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/binary_indexed_tree/struct.BinaryIndexedTree2D.html\" title=\"struct competitive::data_structure::binary_indexed_tree::BinaryIndexedTree2D\">BinaryIndexedTree2D</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::binary_indexed_tree::BinaryIndexedTree2D"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/bitset/struct.BitSet.html\" title=\"struct competitive::data_structure::bitset::BitSet\">BitSet</a>","synthetic":false,"types":["competitive::data_structure::bitset::BitSet"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.SemiGroup.html\" title=\"trait competitive::algebra::magma::SemiGroup\">SemiGroup</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/disjoint_sparse_table/struct.DisjointSparseTable.html\" title=\"struct competitive::data_structure::disjoint_sparse_table::DisjointSparseTable\">DisjointSparseTable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::disjoint_sparse_table::DisjointSparseTable"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>, E:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>, &amp;E::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>) -&gt; M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/lazy_segment_tree/struct.LazySegmentTree.html\" title=\"struct competitive::data_structure::lazy_segment_tree::LazySegmentTree\">LazySegmentTree</a>&lt;M, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;E::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::lazy_segment_tree::LazySegmentTree"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/segment_tree/struct.SegmentTree.html\" title=\"struct competitive::data_structure::segment_tree::SegmentTree\">SegmentTree</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::segment_tree::SegmentTree"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/sliding_winsow_aggregation/struct.QueueAggregation.html\" title=\"struct competitive::data_structure::sliding_winsow_aggregation::QueueAggregation\">QueueAggregation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::sliding_winsow_aggregation::QueueAggregation"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/sliding_winsow_aggregation/struct.DequeAggregation.html\" title=\"struct competitive::data_structure::sliding_winsow_aggregation::DequeAggregation\">DequeAggregation</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::sliding_winsow_aggregation::DequeAggregation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFind.html\" title=\"struct competitive::data_structure::union_find::UnionFind\">UnionFind</a>","synthetic":false,"types":["competitive::data_structure::union_find::UnionFind"]},{"text":"impl&lt;G:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Group.html\" title=\"trait competitive::algebra::magma::Group\">Group</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.WeightedUnionFind.html\" title=\"struct competitive::data_structure::union_find::WeightedUnionFind\">WeightedUnionFind</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::data_structure::union_find::WeightedUnionFind"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/struct.Rev.html\" title=\"struct competitive::data_structure::Rev\">Rev</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structure::Rev"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/geometry/circle/struct.Circle.html\" title=\"struct competitive::geometry::circle::Circle\">Circle</a>","synthetic":false,"types":["competitive::geometry::circle::Circle"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/geometry/line/struct.Line.html\" title=\"struct competitive::geometry::line::Line\">Line</a>","synthetic":false,"types":["competitive::geometry::line::Line"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/geometry/line/struct.LineSegment.html\" title=\"struct competitive::geometry::line::LineSegment\">LineSegment</a>","synthetic":false,"types":["competitive::geometry::line::LineSegment"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/geometry/struct.Real.html\" title=\"struct competitive::geometry::Real\">Real</a>","synthetic":false,"types":["competitive::geometry::Real"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"competitive/geometry/enum.CCW.html\" title=\"enum competitive::geometry::CCW\">CCW</a>","synthetic":false,"types":["competitive::geometry::CCW"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.Adjacent.html\" title=\"struct competitive::graph::graph::Adjacent\">Adjacent</a>","synthetic":false,"types":["competitive::graph::graph::Adjacent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.Graph.html\" title=\"struct competitive::graph::graph::Graph\">Graph</a>","synthetic":false,"types":["competitive::graph::graph::Graph"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.GraphRec.html\" title=\"struct competitive::graph::graph::GraphRec\">GraphRec</a>","synthetic":false,"types":["competitive::graph::graph::GraphRec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.GridGraph.html\" title=\"struct competitive::graph::graph::GridGraph\">GridGraph</a>","synthetic":false,"types":["competitive::graph::graph::GridGraph"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.Adjacent4.html\" title=\"struct competitive::graph::graph::Adjacent4\">Adjacent4</a>&lt;'a&gt;","synthetic":false,"types":["competitive::graph::graph::Adjacent4"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/graph/struct.Adjacent8.html\" title=\"struct competitive::graph::graph::Adjacent8\">Adjacent8</a>&lt;'a&gt;","synthetic":false,"types":["competitive::graph::graph::Adjacent8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/maximum_flow/struct.RevEdge.html\" title=\"struct competitive::graph::maximum_flow::RevEdge\">RevEdge</a>","synthetic":false,"types":["competitive::graph::maximum_flow::RevEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/maximum_flow/struct.FordFulkerson.html\" title=\"struct competitive::graph::maximum_flow::FordFulkerson\">FordFulkerson</a>","synthetic":false,"types":["competitive::graph::maximum_flow::FordFulkerson"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/maximum_flow/struct.Dinic.html\" title=\"struct competitive::graph::maximum_flow::Dinic\">Dinic</a>","synthetic":false,"types":["competitive::graph::maximum_flow::Dinic"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/minimum_cost_flow/struct.RevEdge.html\" title=\"struct competitive::graph::minimum_cost_flow::RevEdge\">RevEdge</a>","synthetic":false,"types":["competitive::graph::minimum_cost_flow::RevEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/minimum_cost_flow/struct.PrimalDual.html\" title=\"struct competitive::graph::minimum_cost_flow::PrimalDual\">PrimalDual</a>","synthetic":false,"types":["competitive::graph::minimum_cost_flow::PrimalDual"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/strongly_connected_component/struct.StronglyConnectedComponent.html\" title=\"struct competitive::graph::strongly_connected_component::StronglyConnectedComponent\">StronglyConnectedComponent</a>","synthetic":false,"types":["competitive::graph::strongly_connected_component::StronglyConnectedComponent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/strongly_connected_component/struct.TwoSatisfiability.html\" title=\"struct competitive::graph::strongly_connected_component::TwoSatisfiability\">TwoSatisfiability</a>","synthetic":false,"types":["competitive::graph::strongly_connected_component::TwoSatisfiability"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/num/mint/trait.Modulus.html\" title=\"trait competitive::num::mint::Modulus\">Modulus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/factorial/struct.MemorizedFactorial.html\" title=\"struct competitive::math::factorial::MemorizedFactorial\">MemorizedFactorial</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::factorial::MemorizedFactorial"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/num/mint/trait.Modulus.html\" title=\"trait competitive::num::mint::Modulus\">Modulus</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/factorial/struct.SmallModMemorizedFactorial.html\" title=\"struct competitive::math::factorial::SmallModMemorizedFactorial\">SmallModMemorizedFactorial</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::factorial::SmallModMemorizedFactorial"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/matrix/struct.Matrix.html\" title=\"struct competitive::math::matrix::Matrix\">Matrix</a>&lt;T&gt;","synthetic":false,"types":["competitive::math::matrix::Matrix"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/nums/struct.BabyStepGiantStep.html\" title=\"struct competitive::math::nums::BabyStepGiantStep\">BabyStepGiantStep</a>","synthetic":false,"types":["competitive::math::nums::BabyStepGiantStep"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/polynomial/struct.Polynomial.html\" title=\"struct competitive::math::polynomial::Polynomial\">Polynomial</a>","synthetic":false,"types":["competitive::math::polynomial::Polynomial"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/prime/struct.PrimeTable.html\" title=\"struct competitive::math::prime::PrimeTable\">PrimeTable</a>","synthetic":false,"types":["competitive::math::prime::PrimeTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/math/prime/struct.EulerPhiTable.html\" title=\"struct competitive::math::prime::EulerPhiTable\">EulerPhiTable</a>","synthetic":false,"types":["competitive::math::prime::EulerPhiTable"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/complex/struct.Complex.html\" title=\"struct competitive::num::complex::Complex\">Complex</a>&lt;T&gt;","synthetic":false,"types":["competitive::num::complex::Complex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/mint/modulus/struct.Modulo1000000007.html\" title=\"struct competitive::num::mint::modulus::Modulo1000000007\">Modulo1000000007</a>","synthetic":false,"types":["competitive::num::mint::modulus::Modulo1000000007"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/mint/modulus/struct.Modulo1000000009.html\" title=\"struct competitive::num::mint::modulus::Modulo1000000009\">Modulo1000000009</a>","synthetic":false,"types":["competitive::num::mint::modulus::Modulo1000000009"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/mint/modulus/struct.Modulo998244353.html\" title=\"struct competitive::num::mint::modulus::Modulo998244353\">Modulo998244353</a>","synthetic":false,"types":["competitive::num::mint::modulus::Modulo998244353"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/mint/modulus/struct.DynModulo.html\" title=\"struct competitive::num::mint::modulus::DynModulo\">DynModulo</a>","synthetic":false,"types":["competitive::num::mint::modulus::DynModulo"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/mint/struct.MInt.html\" title=\"struct competitive::num::mint::MInt\">MInt</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"competitive/num/mint/trait.Modulus.html\" title=\"trait competitive::num::mint::Modulus\">Modulus</a>,&nbsp;</span>","synthetic":false,"types":["competitive::num::mint::MInt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/quad_double/struct.QuadDouble.html\" title=\"struct competitive::num::quad_double::QuadDouble\">QuadDouble</a>","synthetic":false,"types":["competitive::num::quad_double::QuadDouble"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/string/knuth_morris_pratt/struct.KnuthMorrisPratt.html\" title=\"struct competitive::string::knuth_morris_pratt::KnuthMorrisPratt\">KnuthMorrisPratt</a>&lt;T&gt;","synthetic":false,"types":["competitive::string::knuth_morris_pratt::KnuthMorrisPratt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/string/rolling_hash/struct.RollingHash.html\" title=\"struct competitive::string::rolling_hash::RollingHash\">RollingHash</a>","synthetic":false,"types":["competitive::string::rolling_hash::RollingHash"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/string/rolling_hash/struct.MultipleRollingHash.html\" title=\"struct competitive::string::rolling_hash::MultipleRollingHash\">MultipleRollingHash</a>","synthetic":false,"types":["competitive::string::rolling_hash::MultipleRollingHash"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/string/suffix_array/struct.SuffixArray.html\" title=\"struct competitive::string::suffix_array::SuffixArray\">SuffixArray</a>&lt;T&gt;","synthetic":false,"types":["competitive::string::suffix_array::SuffixArray"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/string/z_algorithm/struct.Zarray.html\" title=\"struct competitive::string::z_algorithm::Zarray\">Zarray</a>","synthetic":false,"types":["competitive::string::z_algorithm::Zarray"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tools/random/struct.Xorshift.html\" title=\"struct competitive::tools::random::Xorshift\">Xorshift</a>","synthetic":false,"types":["competitive::tools::random::Xorshift"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tools/scanner/struct.Scanner.html\" title=\"struct competitive::tools::scanner::Scanner\">Scanner</a>&lt;'a&gt;","synthetic":false,"types":["competitive::tools::scanner::Scanner"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tools/counter/struct.Counter.html\" title=\"struct competitive::tools::counter::Counter\">Counter</a>&lt;T&gt;","synthetic":false,"types":["competitive::tools::counter::Counter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/euler_tour/struct.EulerTourForEdge.html\" title=\"struct competitive::tree::euler_tour::EulerTourForEdge\">EulerTourForEdge</a>","synthetic":false,"types":["competitive::tree::euler_tour::EulerTourForEdge"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/euler_tour/struct.EulerTourForVertex.html\" title=\"struct competitive::tree::euler_tour::EulerTourForVertex\">EulerTourForVertex</a>","synthetic":false,"types":["competitive::tree::euler_tour::EulerTourForVertex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/euler_tour/struct.EulerTourForRichVertex.html\" title=\"struct competitive::tree::euler_tour::EulerTourForRichVertex\">EulerTourForRichVertex</a>","synthetic":false,"types":["competitive::tree::euler_tour::EulerTourForRichVertex"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/euler_tour/struct.LowestCommonAncestor.html\" title=\"struct competitive::tree::euler_tour::LowestCommonAncestor\">LowestCommonAncestor</a>&lt;'a&gt;","synthetic":false,"types":["competitive::tree::euler_tour::LowestCommonAncestor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/euler_tour/struct.LCAMonoid.html\" title=\"struct competitive::tree::euler_tour::LCAMonoid\">LCAMonoid</a>","synthetic":false,"types":["competitive::tree::euler_tour::LCAMonoid"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"competitive/algebra/magma/trait.Monoid.html\" title=\"trait competitive::algebra::magma::Monoid\">Monoid</a>, F:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/rerooting/struct.ReRooting.html\" title=\"struct competitive::tree::rerooting::ReRooting\">ReRooting</a>&lt;M, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M::<a class=\"type\" href=\"competitive/algebra/magma/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::magma::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["competitive::tree::rerooting::ReRooting"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/tree/tree/struct.TreeRec.html\" title=\"struct competitive::tree::tree::TreeRec\">TreeRec</a>","synthetic":false,"types":["competitive::tree::tree::TreeRec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()