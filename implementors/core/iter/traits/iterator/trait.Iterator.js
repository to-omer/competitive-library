(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"competitive/algorithm/struct.Subsets.html\" title=\"struct competitive::algorithm::Subsets\">Subsets</a>","synthetic":false,"types":["competitive::algorithm::bitdp::Subsets"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"competitive/algorithm/struct.Combinations.html\" title=\"struct competitive::algorithm::Combinations\">Combinations</a>","synthetic":false,"types":["competitive::algorithm::bitdp::Combinations"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"competitive/math/prime_list/struct.PrimeListTrialDivision.html\" title=\"struct competitive::math::prime_list::PrimeListTrialDivision\">PrimeListTrialDivision</a>&lt;'_&gt;","synthetic":false,"types":["competitive::math::prime::prime_list::PrimeListTrialDivision"]},{"text":"impl&lt;T, R:&nbsp;<a class=\"trait\" href=\"competitive/tools/trait.RandomSpec.html\" title=\"trait competitive::tools::RandomSpec\">RandomSpec</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"competitive/tools/struct.RandIter.html\" title=\"struct competitive::tools::RandIter\">RandIter</a>&lt;'_, T, R&gt;","synthetic":false,"types":["competitive::tools::random::random_generator::RandIter"]},{"text":"impl&lt;'a, 'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"competitive/tools/struct.ScannerIter.html\" title=\"struct competitive::tools::ScannerIter\">ScannerIter</a>&lt;'a, 'b, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"competitive/tools/trait.IterScan.html\" title=\"trait competitive::tools::IterScan\">IterScan</a>,&nbsp;</span>","synthetic":false,"types":["competitive::tools::scanner::ScannerIter"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()