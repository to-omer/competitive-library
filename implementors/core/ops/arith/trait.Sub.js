(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>&gt; for <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>","synthetic":false,"types":["competitive::math::anymod::AnyMod"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>","synthetic":false,"types":["competitive::math::anymod::AnyMod"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>&gt; for <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>","synthetic":false,"types":["competitive::math::anymod::AnyMod"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/anymod/struct.AnyMod.html\" title=\"struct competitive::math::anymod::AnyMod\">AnyMod</a>","synthetic":false,"types":["competitive::math::anymod::AnyMod"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>&gt; for <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>","synthetic":false,"types":["competitive::math::anymodu32::AnyModu32"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>","synthetic":false,"types":["competitive::math::anymodu32::AnyModu32"]},{"text":"impl&lt;'_&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'_ <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>&gt; for <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>","synthetic":false,"types":["competitive::math::anymodu32::AnyModu32"]},{"text":"impl&lt;'_, '_&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'_ <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>&gt; for &amp;'_ <a class=\"struct\" href=\"competitive/math/anymodu32/struct.AnyModu32.html\" title=\"struct competitive::math::anymodu32::AnyModu32\">AnyModu32</a>","synthetic":false,"types":["competitive::math::anymodu32::AnyModu32"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/math/matrix/struct.Matrix.html\" title=\"struct competitive::math::matrix::Matrix\">Matrix</a>&lt;T&gt;&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/matrix/struct.Matrix.html\" title=\"struct competitive::math::matrix::Matrix\">Matrix</a>&lt;T&gt;","synthetic":false,"types":["competitive::math::matrix::Matrix"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>&gt; for <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>","synthetic":false,"types":["competitive::math::modi64::Modi64"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>","synthetic":false,"types":["competitive::math::modi64::Modi64"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>&gt; for <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>","synthetic":false,"types":["competitive::math::modi64::Modi64"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>&gt; for &amp;'a <a class=\"struct\" href=\"competitive/math/modi64/struct.Modi64.html\" title=\"struct competitive::math::modi64::Modi64\">Modi64</a>","synthetic":false,"types":["competitive::math::modi64::Modi64"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"competitive/math/modu32/trait.Modulo.html\" title=\"trait competitive::math::modu32::Modulo\">Modulo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::modu32::Modu32"]},{"text":"impl&lt;'_, M:&nbsp;<a class=\"trait\" href=\"competitive/math/modu32/trait.Modulo.html\" title=\"trait competitive::math::modu32::Modulo\">Modulo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;&gt; for &amp;'_ <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::modu32::Modu32"]},{"text":"impl&lt;'_, M:&nbsp;<a class=\"trait\" href=\"competitive/math/modu32/trait.Modulo.html\" title=\"trait competitive::math::modu32::Modulo\">Modulo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'_ <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::modu32::Modu32"]},{"text":"impl&lt;'_, '_, M:&nbsp;<a class=\"trait\" href=\"competitive/math/modu32/trait.Modulo.html\" title=\"trait competitive::math::modu32::Modulo\">Modulo</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'_ <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;&gt; for &amp;'_ <a class=\"struct\" href=\"competitive/math/modu32/struct.Modu32.html\" title=\"struct competitive::math::modu32::Modu32\">Modu32</a>&lt;M&gt;","synthetic":false,"types":["competitive::math::modu32::Modu32"]},{"text":"impl&lt;'_, '_&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'_ <a class=\"struct\" href=\"competitive/math/polynomial/struct.Polynomial.html\" title=\"struct competitive::math::polynomial::Polynomial\">Polynomial</a>&gt; for &amp;'_ <a class=\"struct\" href=\"competitive/math/polynomial/struct.Polynomial.html\" title=\"struct competitive::math::polynomial::Polynomial\">Polynomial</a>","synthetic":false,"types":["competitive::math::polynomial::Polynomial"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/num/complex/struct.Complex.html\" title=\"struct competitive::num::complex::Complex\">Complex</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"competitive/num/complex/struct.Complex.html\" title=\"struct competitive::num::complex::Complex\">Complex</a>&lt;T&gt;","synthetic":false,"types":["competitive::num::complex::Complex"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for <a class=\"struct\" href=\"competitive/num/complex/struct.Complex.html\" title=\"struct competitive::num::complex::Complex\">Complex</a>&lt;T&gt;","synthetic":false,"types":["competitive::num::complex::Complex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/num/quad_double/struct.QuadDouble.html\" title=\"struct competitive::num::quad_double::QuadDouble\">QuadDouble</a>&gt; for <a class=\"struct\" href=\"competitive/num/quad_double/struct.QuadDouble.html\" title=\"struct competitive::num::quad_double::QuadDouble\">QuadDouble</a>","synthetic":false,"types":["competitive::num::quad_double::QuadDouble"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()