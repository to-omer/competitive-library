(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl&lt;T, Multiplier&gt; Neg for FormalPowerSeries&lt;T, Multiplier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: FormalPowerSeriesCoefficient,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, Multiplier&gt; Neg for &amp;FormalPowerSeries&lt;T, Multiplier&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: FormalPowerSeriesCoefficient,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Neg&lt;Output = T&gt;&gt; Neg for Complex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;M&gt; Neg for MInt&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: MIntBase,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;M&gt; Neg for &amp;MInt&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: MIntBase,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Neg for QuadDouble","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()