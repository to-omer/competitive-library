(function() {
    var type_impls = Object.fromEntries([["competitive",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#349\">Source</a><a href=\"#impl-Add%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#349\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#349\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#182-191\">Source</a><a href=\"#impl-Add-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#186\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#188-190\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#390\">Source</a><a href=\"#impl-AddAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#390\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#390\">Source</a><a href=\"#impl-AddAssign-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#390\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#92-100\">Source</a><a href=\"#impl-Clone-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#97-99\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#102-109\">Source</a><a href=\"#impl-Debug-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#106-108\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#110-118\">Source</a><a href=\"#impl-Default-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#115-117\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#268-276\">Source</a><a href=\"#impl-Display-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#273-275\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#352\">Source</a><a href=\"#impl-Div%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#352\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#352\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#212-221\">Source</a><a href=\"#impl-Div-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#216\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#218-220\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#393\">Source</a><a href=\"#impl-DivAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#393\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#393\">Source</a><a href=\"#impl-DivAssign-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#393\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FormalPowerSeriesCoefficientSqrt-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#62-69\">Source</a><a href=\"#impl-FormalPowerSeriesCoefficientSqrt-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/math/trait.FormalPowerSeriesCoefficientSqrt.html\" title=\"trait competitive::math::FormalPowerSeriesCoefficientSqrt\">FormalPowerSeriesCoefficientSqrt</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.sqrt_coefficient\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#66-68\">Source</a><a href=\"#method.sqrt_coefficient\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/math/trait.FormalPowerSeriesCoefficientSqrt.html#tymethod.sqrt_coefficient\" class=\"fn\">sqrt_coefficient</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></div></details>","FormalPowerSeriesCoefficientSqrt","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Ci128%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i128>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Ci16%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i16>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Ci32%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Ci64%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Ci8%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cisize%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cisize%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<isize>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cu128%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cu16%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cu32%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cu64%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cu8%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#impl-From%3Cusize%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160-162\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#277-287\">Source</a><a href=\"#impl-FromStr-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#282\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = &lt;&lt;M as <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>&gt;::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#284-286\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#129-137\">Source</a><a href=\"#impl-Hash-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#134-136\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IterScan-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#288-298\">Source</a><a href=\"#impl-IterScan-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/tools/trait.IterScan.html\" title=\"trait competitive::tools::IterScan\">IterScan</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#293\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/tools/trait.IterScan.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section><section id=\"method.scan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#295-297\">Source</a><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.IterScan.html#tymethod.scan\" class=\"fn\">scan</a>&lt;'a, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;(iter: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"competitive/tools/trait.IterScan.html#associatedtype.Output\" title=\"type competitive::tools::IterScan::Output\">Output</a>&gt;</h4></section></div></details>","IterScan","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/mod_sqrt.rs.html#4-78\">Source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/math/mod_sqrt.rs.html#8-77\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example expanded\" data-locs=\"[[[1,1],&#34;src/competitive/math/formal_power_series/mod.rs.html#67&#34;,&#34;line 67&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/formal_power_series/mod.rs (<a href=\"src/competitive/math/formal_power_series/mod.rs.html#67\">line 67</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>66</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sqrt_coefficient(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"self\">Self</span>&gt; {\n<span data-nosnippet>67</span>        <span class=\"self\">self</span>.<span class=\"highlight focus\">sqrt</span>()\n<span data-nosnippet>68</span>    }</code></pre></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example\" data-locs=\"[[[6,6],&#34;src/library_checker/number_theory/sqrt_mod.rs.html#12&#34;,&#34;line 12&#34;]]\"><div class=\"scraped-example-title\">crates/library_checker/src/number_theory/sqrt_mod.rs (<a href=\"src/library_checker/number_theory/sqrt_mod.rs.html#12\">line 12</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>6</span><span class=\"kw\">pub fn </span><a href=\"tools/scanner.rs.html#391\">sqrt_mod(reader: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Read, </a><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">writer: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Write) {\n<span data-nosnippet>7</span>    </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">s = read_all_unchecked(reader);\n<span data-nosnippet>8</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">scanner = Scanner::new(</a><span class=\"kw-2\">&amp;</span><a href=\"tools/scanner.rs.html#391\">s);\n<span data-nosnippet>9</span>    </a><span class=\"macro\">scan!</span><a href=\"tools/scanner.rs.html#391\">(scanner, q, yp: [(u32, u32)]);\n<span data-nosnippet>10</span>    </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">(y, p) </a><span class=\"kw\">in </span><a href=\"tools/scanner.rs.html#391\">yp.take(q) {\n<span data-nosnippet>11</span>        DynMIntU32::set_mod(p);\n<span data-nosnippet>12</span>        </a><span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span><a href=\"tools/scanner.rs.html#391\">(x) = DynMIntU32::from(y).</a><span class=\"highlight focus\">sqrt</span>() {\n<span data-nosnippet>13</span>            <span class=\"macro\">writeln!</span><a href=\"tools/scanner.rs.html#391\">(writer, </a><span class=\"string\">\"{}\"</span><a href=\"tools/scanner.rs.html#391\">, x).ok();\n<span data-nosnippet>14</span>        } </a><span class=\"kw\">else </span>{\n<span data-nosnippet>15</span>            <span class=\"macro\">writeln!</span><a href=\"tools/scanner.rs.html#391\">(writer, </a><span class=\"string\">\"-1\"</span><a href=\"tools/scanner.rs.html#391\">).ok();\n<span data-nosnippet>16</span>        }\n<span data-nosnippet>17</span>    }\n<span data-nosnippet>18</span>}</a></code></pre></div></div></div></details></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#54-62\">Source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#59-61\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.new\" class=\"fn\">new</a>(x: M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example\" data-locs=\"[[[7,7],&#34;src/library_checker/number_theory/sum_of_totient_function.rs.html#19&#34;,&#34;line 19&#34;]]\"><div class=\"scraped-example-title\">crates/library_checker/src/number_theory/sum_of_totient_function.rs (<a href=\"src/library_checker/number_theory/sum_of_totient_function.rs.html#19\">line 19</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>12</span><span class=\"kw\">pub fn </span><a href=\"tools/scanner.rs.html#391\">sum_of_totient_function(reader: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Read, </a><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">writer: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Write) {\n<span data-nosnippet>13</span>    </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">s = read_all_unchecked(reader);\n<span data-nosnippet>14</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">scanner = Scanner::new(</a><span class=\"kw-2\">&amp;</span><a href=\"tools/scanner.rs.html#391\">s);\n<span data-nosnippet>15</span>    </a><span class=\"macro\">scan!</span><a href=\"tools/scanner.rs.html#391\">(scanner, n: u64);\n<span data-nosnippet>16</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">s = </a><span class=\"number\">1</span>;\n<span data-nosnippet>17</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">pp = </a><span class=\"number\">0</span>;\n<span data-nosnippet>18</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">pc = </a><span class=\"number\">0</span>;\n<span data-nosnippet>19</span>    <span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">inv2 = </a><span class=\"highlight focus\">M::new</span>(<span class=\"number\">2</span><a href=\"tools/scanner.rs.html#391\">).inv();\n<span data-nosnippet>20</span>    </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">qa = QuotientArray::from_fn(n, |i| [M::from(i), M::from(i) * M::from(i + </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">) * inv2])\n<span data-nosnippet>21</span>        .map(|[x, y]| [x - M::one(), y - M::one()])\n<span data-nosnippet>22</span>        .lucy_dp::&lt;ArrayOperation&lt;AdditiveOperation&lt;</a><span class=\"kw\">_</span>&gt;, <span class=\"number\">2</span><a href=\"tools/scanner.rs.html#391\">&gt;&gt;(|[x, y], p| [x, y * M::from(p)])\n<span data-nosnippet>23</span>        .map(|[x, y]| y - x)\n<span data-nosnippet>24</span>        .min_25_sieve::&lt;AddMulOperation&lt;</a><span class=\"kw\">_</span><a href=\"tools/scanner.rs.html#391\">&gt;&gt;(|p, c| {\n<span data-nosnippet>25</span>            </a><span class=\"kw\">if </span><a href=\"tools/scanner.rs.html#391\">pp != p || pc &gt; c {\n<span data-nosnippet>26</span>                pp = p;\n<span data-nosnippet>27</span>                pc = </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">;\n<span data-nosnippet>28</span>                s = p - </a><span class=\"number\">1</span>;\n<span data-nosnippet>29</span>            }\n<span data-nosnippet>30</span>            <span class=\"kw\">while </span><a href=\"tools/scanner.rs.html#391\">pc &lt; c {\n<span data-nosnippet>31</span>                pc += </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">;\n<span data-nosnippet>32</span>                s </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= p;\n<span data-nosnippet>33</span>            }\n<span data-nosnippet>34</span>            M::from(s)\n<span data-nosnippet>35</span>        });\n<span data-nosnippet>36</span>    </a><span class=\"macro\">writeln!</span><a href=\"tools/scanner.rs.html#391\">(writer, </a><span class=\"string\">\"{}\"</span><a href=\"tools/scanner.rs.html#391\">, qa[n]).ok();\n<span data-nosnippet>37</span>}</a></code></pre></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example\" data-locs=\"[[[1,1],&#34;src/competitive/math/number_theoretic_transform.rs.html#369&#34;,&#34;line 369&#34;],[[3,3],&#34;src/competitive/math/number_theoretic_transform.rs.html#371&#34;,&#34;line 371&#34;],[[4,4],&#34;src/competitive/math/number_theoretic_transform.rs.html#372&#34;,&#34;line 372&#34;],[[13,13],&#34;src/competitive/math/number_theoretic_transform.rs.html#381&#34;,&#34;line 381&#34;],[[13,13],&#34;src/competitive/math/number_theoretic_transform.rs.html#381&#34;,&#34;line 381&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#369\">line 369</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>368</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n<span data-nosnippet>369</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t1 = </a><span class=\"highlight focus\">MInt::&lt;N2&gt;::new</span><a href=\"../tools/scanner.rs.html#391\">(N1::get_mod()).inv();\n<span data-nosnippet>370</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n<span data-nosnippet>371</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1_3 = </a><span class=\"highlight\">MInt::&lt;N3&gt;::new</span><a href=\"../tools/scanner.rs.html#391\">(N1::get_mod());\n<span data-nosnippet>372</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t2 = (m1_3 * </a><span class=\"highlight\">MInt::&lt;N3&gt;::new</span><a href=\"../tools/scanner.rs.html#391\">(N2::get_mod())).inv();\n<span data-nosnippet>373</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m2 = m1 * MInt::&lt;<a href=\"#318\">M</a>&gt;::from(N2::get_mod());\n<span data-nosnippet>374</span>        Convolve::&lt;N1&gt;::inverse_transform(f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">, len)\n<span data-nosnippet>375</span>            .into_iter()\n<span data-nosnippet>376</span>            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>377</span>            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>378</span>            .map(|((c1, c2), c3)| {\n<span data-nosnippet>379</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d1 = c1.inner();\n<span data-nosnippet>380</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d2 = ((c2 - <a href=\"../num/zero_one.rs.html#1-14\">MInt</a>::&lt;N2&gt;::from(d1)) * t1).inner();\n<span data-nosnippet>381</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">x = </a><span class=\"highlight\">MInt::&lt;N3&gt;::new</span><a href=\"../tools/scanner.rs.html#391\">(d1) + </a><span class=\"highlight\">MInt::&lt;N3&gt;::new</span><a href=\"../tools/scanner.rs.html#391\">(d2) * m1_3;\n<span data-nosnippet>382</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d3 = ((c3 - x) * t2).inner();\n<span data-nosnippet>383</span>                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n<span data-nosnippet>384</span>            })\n<span data-nosnippet>385</span>            .collect()\n<span data-nosnippet>386</span>    }</a></code></pre></div></div></div></details></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#63-90\">Source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#68-73\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"competitive/num/struct.MInt.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(x: M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example\" data-locs=\"[[[1,1],&#34;src/competitive/num/mint/mint_base.rs.html#60&#34;,&#34;line 60&#34;],[[21,21],&#34;src/competitive/num/mint/mint_base.rs.html#80&#34;,&#34;line 80&#34;],[[25,25],&#34;src/competitive/num/mint/mint_base.rs.html#84&#34;,&#34;line 84&#34;],[[110,110],&#34;src/competitive/num/mint/mint_base.rs.html#169&#34;,&#34;line 169&#34;],[[119,119],&#34;src/competitive/num/mint/mint_base.rs.html#178&#34;,&#34;line 178&#34;],[[130,130],&#34;src/competitive/num/mint/mint_base.rs.html#189&#34;,&#34;line 189&#34;],[[140,140],&#34;src/competitive/num/mint/mint_base.rs.html#199&#34;,&#34;line 199&#34;],[[150,150],&#34;src/competitive/num/mint/mint_base.rs.html#209&#34;,&#34;line 209&#34;],[[160,160],&#34;src/competitive/num/mint/mint_base.rs.html#219&#34;,&#34;line 219&#34;],[[170,170],&#34;src/competitive/num/mint/mint_base.rs.html#229&#34;,&#34;line 229&#34;],[[253,253],&#34;src/competitive/num/mint/mint_base.rs.html#312&#34;,&#34;line 312&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/num/mint/mint_base.rs (<a href=\"src/competitive/num/mint/mint_base.rs.html#60\">line 60</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>59</span>    <span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">new(x: M::Inner) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>60</span>        <span class=\"highlight focus\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;M::Inner&gt;&gt;::from(x))\n<span data-nosnippet>61</span>    }\n<span data-nosnippet>62</span>}\n<span data-nosnippet>63</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; MInt&lt;M&gt;\n<span data-nosnippet>64</span></a><span class=\"kw\">where\n<span data-nosnippet>65</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>66</span>{\n<span data-nosnippet>67</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>68</span>    </span><span class=\"kw\">pub const fn </span><a href=\"../tools/scanner.rs.html#391\">new_unchecked(x: M::Inner) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>69</span>        <a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>70</span>            x,\n<span data-nosnippet>71</span>            _marker: PhantomData,\n<span data-nosnippet>72</span>        }\n<span data-nosnippet>73</span>    }\n<span data-nosnippet>74</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>75</span>    </span><span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">get_mod() -&gt; M::Inner {\n<span data-nosnippet>76</span>        M::get_mod()\n<span data-nosnippet>77</span>    }\n<span data-nosnippet>78</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>79</span>    </span><span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">pow(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, y: usize) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>80</span>        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_pow(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, y))\n<span data-nosnippet>81</span>    }\n<span data-nosnippet>82</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>83</span>    </span><span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">inv(</a><span class=\"self\">self</span>) -&gt; <a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>84</span>        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_inv(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x))\n<span data-nosnippet>85</span>    }\n<span data-nosnippet>86</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>87</span>    </span><span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">inner(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; M::Inner {\n<span data-nosnippet>88</span>        M::mod_inner(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x)\n<span data-nosnippet>89</span>    }\n<span data-nosnippet>90</span>}\n<span data-nosnippet>91</span>\n<span data-nosnippet>92</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Clone </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>93</span></a><span class=\"kw\">where\n<span data-nosnippet>94</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>95</span>{\n<span data-nosnippet>96</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>97</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">clone(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>98</span>        <span class=\"kw-2\">*</span><a class=\"self\" href=\"../tools/scanner.rs.html#391\">self\n<span data-nosnippet>99</span>    </a>}\n<span data-nosnippet>100</span>}\n<span data-nosnippet>101</span><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Copy </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt; </a><span class=\"kw\">where </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase {}\n<span data-nosnippet>102</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Debug </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>103</span></a><span class=\"kw\">where\n<span data-nosnippet>104</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>105</span>{\n<span data-nosnippet>106</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, f: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">fmt::Formatter&lt;</a><span class=\"lifetime\">'_</span><a href=\"../tools/scanner.rs.html#391\">&gt;) -&gt; fmt::Result {\n<span data-nosnippet>107</span>        Debug::fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.inner(), f)\n<span data-nosnippet>108</span>    }\n<span data-nosnippet>109</span>}\n<span data-nosnippet>110</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Default </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>111</span></a><span class=\"kw\">where\n<span data-nosnippet>112</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>113</span>{\n<span data-nosnippet>114</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>115</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">default() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>116</span>        &lt;<a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero()\n<span data-nosnippet>117</span>    }\n<span data-nosnippet>118</span>}\n<span data-nosnippet>119</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; PartialEq </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>120</span></a><span class=\"kw\">where\n<span data-nosnippet>121</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>122</span>{\n<span data-nosnippet>123</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>124</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">eq(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, other: </a><span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; bool {\n<span data-nosnippet>125</span>        PartialEq::eq(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">other.x)\n<span data-nosnippet>126</span>    }\n<span data-nosnippet>127</span>}\n<span data-nosnippet>128</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Eq </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt; </a><span class=\"kw\">where </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase {}\n<span data-nosnippet>129</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Hash </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>130</span></a><span class=\"kw\">where\n<span data-nosnippet>131</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>132</span>{\n<span data-nosnippet>133</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>134</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">hash&lt;H: Hasher&gt;(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, state: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">H) {\n<span data-nosnippet>135</span>        Hash::hash(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, state)\n<span data-nosnippet>136</span>    }\n<span data-nosnippet>137</span>}\n<span data-nosnippet>138</span></a><span class=\"macro\">macro_rules!</span><a href=\"../tools/scanner.rs.html#391\"> impl_mint_from {\n<span data-nosnippet>139</span>    ($(</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">:ty),</a><span class=\"kw-2\">*</span>) =&gt; {\n<span data-nosnippet>140</span>        $(<span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; From&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt; <span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>141</span>        </a><span class=\"kw\">where\n<span data-nosnippet>142</span>            </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt;,\n<span data-nosnippet>143</span>        {\n<span data-nosnippet>144</span>            <span class=\"attr\">#[inline]\n<span data-nosnippet>145</span>            </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from(x: </a><span class=\"macro-nonterminal\">$t</span>) -&gt; <a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>146</span>                <span class=\"self\">Self</span>::new_unchecked(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;::from(x))\n<span data-nosnippet>147</span>            }\n<span data-nosnippet>148</span>        }\n<span data-nosnippet>149</span>        </a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; From&lt;MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><span class=\"macro-nonterminal\">$t\n<span data-nosnippet>150</span>        </span><span class=\"kw\">where\n<span data-nosnippet>151</span>            </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt;,\n<span data-nosnippet>152</span>        {\n<span data-nosnippet>153</span>            <span class=\"attr\">#[inline]\n<span data-nosnippet>154</span>            </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from(x: MInt&lt;M&gt;) -&gt; </a><span class=\"macro-nonterminal\">$t </span><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>155</span>                &lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;::into(x.x)\n<span data-nosnippet>156</span>            }\n<span data-nosnippet>157</span>        })*\n<span data-nosnippet>158</span>    };\n<span data-nosnippet>159</span>}\n<span data-nosnippet>160</span></a><span class=\"macro\">impl_mint_from!</span><a href=\"../tools/scanner.rs.html#391\">(\n<span data-nosnippet>161</span>    u8, u16, u32, u64, u128, usize, i8, i16, i32, i64, i128, isize\n<span data-nosnippet>162</span>);\n<span data-nosnippet>163</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Zero </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>164</span></a><span class=\"kw\">where\n<span data-nosnippet>165</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>166</span>{\n<span data-nosnippet>167</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>168</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">zero() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>169</span>        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_zero())\n<span data-nosnippet>170</span>    }\n<span data-nosnippet>171</span>}\n<span data-nosnippet>172</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; One </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>173</span></a><span class=\"kw\">where\n<span data-nosnippet>174</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>175</span>{\n<span data-nosnippet>176</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>177</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">one() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>178</span>        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_one())\n<span data-nosnippet>179</span>    }\n<span data-nosnippet>180</span>}\n<span data-nosnippet>181</span>\n<span data-nosnippet>182</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Add </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>183</span></a><span class=\"kw\">where\n<span data-nosnippet>184</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>185</span>{\n<span data-nosnippet>186</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>187</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>188</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">add(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>189</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_add(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>190</span>    }\n<span data-nosnippet>191</span>}\n<span data-nosnippet>192</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Sub </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>193</span></a><span class=\"kw\">where\n<span data-nosnippet>194</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>195</span>{\n<span data-nosnippet>196</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>197</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>198</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sub(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>199</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_sub(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>200</span>    }\n<span data-nosnippet>201</span>}\n<span data-nosnippet>202</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Mul </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>203</span></a><span class=\"kw\">where\n<span data-nosnippet>204</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>205</span>{\n<span data-nosnippet>206</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>207</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>208</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">mul(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>209</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_mul(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>210</span>    }\n<span data-nosnippet>211</span>}\n<span data-nosnippet>212</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Div </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>213</span></a><span class=\"kw\">where\n<span data-nosnippet>214</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>215</span>{\n<span data-nosnippet>216</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>217</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>218</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">div(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>219</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_div(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>220</span>    }\n<span data-nosnippet>221</span>}\n<span data-nosnippet>222</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Neg </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>223</span></a><span class=\"kw\">where\n<span data-nosnippet>224</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>225</span>{\n<span data-nosnippet>226</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>227</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>228</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">neg(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>229</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::mod_neg(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x))\n<span data-nosnippet>230</span>    }\n<span data-nosnippet>231</span>}\n<span data-nosnippet>232</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Sum </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>233</span></a><span class=\"kw\">where\n<span data-nosnippet>234</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>235</span>{\n<span data-nosnippet>236</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>237</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sum&lt;I: Iterator&lt;Item = </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>238</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero(), Add::add)\n<span data-nosnippet>239</span>    }\n<span data-nosnippet>240</span>}\n<span data-nosnippet>241</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Product </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>242</span></a><span class=\"kw\">where\n<span data-nosnippet>243</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>244</span>{\n<span data-nosnippet>245</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>246</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">product&lt;I: Iterator&lt;Item = </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>247</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">One&gt;::one(), Mul::mul)\n<span data-nosnippet>248</span>    }\n<span data-nosnippet>249</span>}\n<span data-nosnippet>250</span></a><span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, M: </a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">&gt; Sum&lt;</a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>251</span></a><span class=\"kw\">where\n<span data-nosnippet>252</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>253</span>{\n<span data-nosnippet>254</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>255</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sum&lt;I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>256</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero(), Add::add)\n<span data-nosnippet>257</span>    }\n<span data-nosnippet>258</span>}\n<span data-nosnippet>259</span></a><span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, M: </a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">&gt; Product&lt;</a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>260</span></a><span class=\"kw\">where\n<span data-nosnippet>261</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>262</span>{\n<span data-nosnippet>263</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>264</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">product&lt;I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>265</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">One&gt;::one(), Mul::mul)\n<span data-nosnippet>266</span>    }\n<span data-nosnippet>267</span>}\n<span data-nosnippet>268</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Display </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>269</span></a><span class=\"kw\">where\n<span data-nosnippet>270</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>271</span>    M::Inner: Display,\n<span data-nosnippet>272</span>{\n<span data-nosnippet>273</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, f: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">fmt::Formatter&lt;</a><span class=\"lifetime\">'_</span>&gt;) -&gt; <span class=\"prelude-ty\">Result</span><a href=\"../tools/scanner.rs.html#391\">&lt;(), fmt::Error&gt; {\n<span data-nosnippet>274</span>        </a><span class=\"macro\">write!</span><a href=\"../tools/scanner.rs.html#391\">(f, </a><span class=\"string\">\"{}\"</span>, <span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.inner())\n<span data-nosnippet>275</span>    }\n<span data-nosnippet>276</span>}\n<span data-nosnippet>277</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; FromStr </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>278</span></a><span class=\"kw\">where\n<span data-nosnippet>279</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert,\n<span data-nosnippet>280</span>    M::Inner: FromStr,\n<span data-nosnippet>281</span>{\n<span data-nosnippet>282</span>    </a><span class=\"kw\">type </span><span class=\"prelude-val\">Err </span><a href=\"../tools/scanner.rs.html#391\">= &lt;M::Inner </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">FromStr&gt;::Err;\n<span data-nosnippet>283</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>284</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from_str(s: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">str) -&gt; </a><span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">, <span class=\"self\">Self</span>::Err&gt; {\n<span data-nosnippet>285</span>        s.parse::&lt;M::Inner&gt;().map(<span class=\"self\">Self</span>::new)\n<span data-nosnippet>286</span>    }\n<span data-nosnippet>287</span>}\n<span data-nosnippet>288</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; IterScan </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>289</span></a><span class=\"kw\">where\n<span data-nosnippet>290</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert,\n<span data-nosnippet>291</span>    M::Inner: FromStr,\n<span data-nosnippet>292</span>{\n<span data-nosnippet>293</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>294</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>295</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">scan&lt;</a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">str&gt;&gt;(iter: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">I) -&gt; </a><span class=\"prelude-ty\">Option</span><a href=\"../tools/scanner.rs.html#391\">&lt;<span class=\"self\">Self</span>::Output&gt; {\n<span data-nosnippet>296</span>        iter.next()</a><span class=\"question-mark\">?</span><a href=\"../tools/scanner.rs.html#391\">.parse::&lt;MInt&lt;M&gt;&gt;().ok()\n<span data-nosnippet>297</span>    }\n<span data-nosnippet>298</span>}\n<span data-nosnippet>299</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; SerdeByteStr </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>300</span></a><span class=\"kw\">where\n<span data-nosnippet>301</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>302</span>    M::Inner: SerdeByteStr,\n<span data-nosnippet>303</span>{\n<span data-nosnippet>304</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">serialize(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, buf: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">Vec&lt;u8&gt;) {\n<span data-nosnippet>305</span>        </a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.inner().serialize(buf)\n<span data-nosnippet>306</span>    }\n<span data-nosnippet>307</span>\n<span data-nosnippet>308</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">deserialize&lt;I&gt;(iter: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self\n<span data-nosnippet>309</span>    </a><span class=\"kw\">where\n<span data-nosnippet>310</span>        </span><a href=\"../tools/scanner.rs.html#391\">I: Iterator&lt;Item = u8&gt;,\n<span data-nosnippet>311</span>    {\n<span data-nosnippet>312</span>        </a><span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span><a href=\"../tools/scanner.rs.html#391\">(M::Inner::deserialize(iter))\n<span data-nosnippet>313</span>    }</a></code></pre></div></div></div></details><section id=\"method.get_mod\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#75-77\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.get_mod\" class=\"fn\">get_mod</a>() -&gt; M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#79-81\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-1\"><a href=\"#scraped-examples-1\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example expanded\" data-locs=\"[[[4,4],&#34;src/competitive/algorithm/chromatic_number.rs.html#40&#34;,&#34;line 40&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/algorithm/chromatic_number.rs (<a href=\"src/competitive/algorithm/chromatic_number.rs.html#40\">line 40</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>36</span>    <span class=\"kw\">pub fn </span><a href=\"tools/scanner.rs.html#391\">k_colorable(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">, k: usize) -&gt; bool {\n<span data-nosnippet>37</span>        !</a><a class=\"self\" href=\"tools/scanner.rs.html#391\">self\n<span data-nosnippet>38</span>            </a><a href=\"tools/scanner.rs.html#391\">.ind\n<span data-nosnippet>39</span>            .iter()\n<span data-nosnippet>40</span>            .map(|d| d.</a><span class=\"highlight focus\">pow</span><a href=\"tools/scanner.rs.html#391\">(k))\n<span data-nosnippet>41</span>            .enumerate()\n<span data-nosnippet>42</span>            .map(|(s, d)| </a><span class=\"kw\">if </span><a href=\"tools/scanner.rs.html#391\">s.count_ones() % </a><span class=\"number\">2 </span>== <span class=\"number\">0 </span><a href=\"tools/scanner.rs.html#391\">{ d } </a><span class=\"kw\">else </span><a href=\"tools/scanner.rs.html#391\">{ -d })\n<span data-nosnippet>43</span>            .sum::&lt;MInt&lt;M&gt;&gt;()\n<span data-nosnippet>44</span>            .is_zero()\n<span data-nosnippet>45</span>    }</a></code></pre></div></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#83-85\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.inv\" class=\"fn\">inv</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-2\"><a href=\"#scraped-examples-2\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example\" data-locs=\"[[[3,3],&#34;src/competitive/math/number_theoretic_transform.rs.html#287&#34;,&#34;line 287&#34;],[[85,85],&#34;src/competitive/math/number_theoretic_transform.rs.html#369&#34;,&#34;line 369&#34;],[[88,88],&#34;src/competitive/math/number_theoretic_transform.rs.html#372&#34;,&#34;line 372&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#287\">line 287</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>284</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">inverse_transform(</a><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n<span data-nosnippet>285</span>        intt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f);\n<span data-nosnippet>286</span>        f.truncate(len);\n<span data-nosnippet>287</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">inv = MInt::from(len.max(</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">).next_power_of_two() </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">u32).</a><span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>288</span>        <span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">f </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">f.iter_mut() {\n<span data-nosnippet>289</span>            </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">f </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">= inv;\n<span data-nosnippet>290</span>        }\n<span data-nosnippet>291</span>        f\n<span data-nosnippet>292</span>    }\n<span data-nosnippet>293</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">multiply(f: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\"><span class=\"self\">Self</span>::F, g: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\"><span class=\"self\">Self</span>::F) {\n<span data-nosnippet>294</span>        </a><span class=\"macro\">assert_eq!</span><a href=\"../tools/scanner.rs.html#391\">(f.len(), g.len());\n<span data-nosnippet>295</span>        </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">(f, g) </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">f.iter_mut().zip(g.iter()) {\n<span data-nosnippet>296</span>            </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">f </a><span class=\"kw-2\">*</span>= <span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">g;\n<span data-nosnippet>297</span>        }\n<span data-nosnippet>298</span>    }\n<span data-nosnippet>299</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">convolve(</a><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">a: <span class=\"self\">Self</span>::T, </a><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">b: <span class=\"self\">Self</span>::T) -&gt; <span class=\"self\">Self</span>::T {\n<span data-nosnippet>300</span>        </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\"><span class=\"self\">Self</span>::length(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">a).min(<span class=\"self\">Self</span>::length(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">b)) &lt;= </a><span class=\"number\">60 </span>{\n<span data-nosnippet>301</span>            <span class=\"kw\">return </span><a href=\"../tools/scanner.rs.html#391\">convolve_naive(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">a, </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">b);\n<span data-nosnippet>302</span>        }\n<span data-nosnippet>303</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">len = (<span class=\"self\">Self</span>::length(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">a) + <span class=\"self\">Self</span>::length(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\"><a href=\"#218\">b</a>)).saturating_sub(</a><span class=\"number\">1</span>);\n<span data-nosnippet>304</span>        <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">size = len.max(</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">).next_power_of_two();\n<span data-nosnippet>305</span>        </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">len &lt;= size / </a><span class=\"number\">2 </span>+ <span class=\"number\">2 </span>{\n<span data-nosnippet>306</span>            <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">xa = a.pop().unwrap();\n<span data-nosnippet>307</span>            </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">xb = b.pop().unwrap();\n<span data-nosnippet>308</span>            </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">c = </a><span class=\"macro\">vec!</span><a href=\"../tools/scanner.rs.html#391\">[MInt::&lt;M&gt;::zero(); len];\n<span data-nosnippet>309</span>            </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">c.last_mut().unwrap() = xa * xb;\n<span data-nosnippet>310</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">(a, c) </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">a.iter().zip(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">c[b.len()..]) {\n<span data-nosnippet>311</span>                </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">c += </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">a * xb;\n<span data-nosnippet>312</span>            }\n<span data-nosnippet>313</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">(b, c) </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">b.iter().zip(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">c[a.len()..]) {\n<span data-nosnippet>314</span>                </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">c += </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">b * xa;\n<span data-nosnippet>315</span>            }\n<span data-nosnippet>316</span>            </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d = <span class=\"self\">Self</span>::convolve(a, b);\n<span data-nosnippet>317</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">(d, c) </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">d.into_iter().zip(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">c) {\n<span data-nosnippet>318</span>                </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">c += d;\n<span data-nosnippet>319</span>            }\n<span data-nosnippet>320</span>            </a><span class=\"kw\">return </span><a href=\"../tools/scanner.rs.html#391\"><a href=\"#239\">c</a>;\n<span data-nosnippet>321</span>        }\n<span data-nosnippet>322</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">same = a == b;\n<span data-nosnippet>323</span>        </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">a = <span class=\"self\">Self</span>::transform(a, len);\n<span data-nosnippet>324</span>        </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">same {\n<span data-nosnippet>325</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">a </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">a.iter_mut() {\n<span data-nosnippet>326</span>                </a><span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">a </a><span class=\"kw-2\">*</span>= <span class=\"kw-2\">*</span><a href=\"../tools/scanner.rs.html#391\">a;\n<span data-nosnippet>327</span>            }\n<span data-nosnippet>328</span>        } </a><span class=\"kw\">else </span>{\n<span data-nosnippet>329</span>            <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">b = <span class=\"self\">Self</span>::transform(b, len);\n<span data-nosnippet>330</span>            <span class=\"self\">Self</span>::multiply(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">a, </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">b);\n<span data-nosnippet>331</span>        }\n<span data-nosnippet>332</span>        <span class=\"self\">Self</span>::inverse_transform(a, len)\n<span data-nosnippet>333</span>    }\n<span data-nosnippet>334</span>}\n<span data-nosnippet>335</span></a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">MVec&lt;M&gt; = Vec&lt;MInt&lt;M&gt;&gt;;\n<span data-nosnippet>336</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M, N1, N2, N3&gt; ConvolveSteps </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">Convolve&lt;(M, (N1, N2, N3))&gt;\n<span data-nosnippet>337</span></a><span class=\"kw\">where\n<span data-nosnippet>338</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert + MIntConvert&lt;u32&gt;,\n<span data-nosnippet>339</span>    N1: Montgomery32NttModulus,\n<span data-nosnippet>340</span>    N2: Montgomery32NttModulus,\n<span data-nosnippet>341</span>    N3: Montgomery32NttModulus,\n<span data-nosnippet>342</span>{\n<span data-nosnippet>343</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">T = MVec&lt;M&gt;;\n<span data-nosnippet>344</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">F = (MVec&lt;N1&gt;, MVec&lt;N2&gt;, MVec&lt;N3&gt;);\n<span data-nosnippet>345</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">length(<a href=\"#264\">t</a>: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\"><span class=\"self\">Self</span>::T) -&gt; usize {\n<span data-nosnippet>346</span>        t.len()\n<span data-nosnippet>347</span>    }\n<span data-nosnippet>348</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">transform(t: <span class=\"self\">Self</span>::T, len: usize) -&gt; <span class=\"self\">Self</span>::F {\n<span data-nosnippet>349</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">npot = len.max(</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">).next_power_of_two();\n<span data-nosnippet>350</span>        </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">f = (\n<span data-nosnippet>351</span>            MVec::&lt;N1&gt;::with_capacity(npot),\n<span data-nosnippet>352</span>            MVec::&lt;N2&gt;::with_capacity(npot),\n<span data-nosnippet>353</span>            MVec::&lt;N3&gt;::with_capacity(npot),\n<span data-nosnippet>354</span>        );\n<span data-nosnippet>355</span>        </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">t </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">t {\n<span data-nosnippet>356</span>            f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n<span data-nosnippet>357</span>            f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n<span data-nosnippet>358</span>            f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n<span data-nosnippet>359</span>        }\n<span data-nosnippet>360</span>        f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>361</span>        f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>362</span>        f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>363</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>364</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>365</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>366</span>        f\n<span data-nosnippet>367</span>    }\n<span data-nosnippet>368</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n<span data-nosnippet>369</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t1 = MInt::&lt;N2&gt;::new(N1::get_mod()).</a><span class=\"highlight\">inv</span>();\n<span data-nosnippet>370</span>        <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n<span data-nosnippet>371</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1_3 = MInt::&lt;N3&gt;::new(N1::get_mod());\n<span data-nosnippet>372</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t2 = (m1_3 * MInt::&lt;N3&gt;::new(N2::get_mod())).</a><span class=\"highlight\">inv</span>();\n<span data-nosnippet>373</span>        <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m2 = m1 * MInt::&lt;<a href=\"#318\">M</a>&gt;::from(N2::get_mod());\n<span data-nosnippet>374</span>        Convolve::&lt;N1&gt;::inverse_transform(f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">, len)\n<span data-nosnippet>375</span>            .into_iter()\n<span data-nosnippet>376</span>            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>377</span>            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>378</span>            .map(|((c1, c2), c3)| {\n<span data-nosnippet>379</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d1 = c1.inner();\n<span data-nosnippet>380</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d2 = ((c2 - <a href=\"../num/zero_one.rs.html#1-14\">MInt</a>::&lt;N2&gt;::from(d1)) * t1).inner();\n<span data-nosnippet>381</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">x = MInt::&lt;N3&gt;::new(d1) + MInt::&lt;N3&gt;::new(d2) * m1_3;\n<span data-nosnippet>382</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d3 = ((c3 - x) * t2).inner();\n<span data-nosnippet>383</span>                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n<span data-nosnippet>384</span>            })\n<span data-nosnippet>385</span>            .collect()\n<span data-nosnippet>386</span>    }</a></code></pre></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example\" data-locs=\"[[[6,6],&#34;src/competitive/math/factorial.rs.html#22&#34;,&#34;line 22&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/factorial.rs (<a href=\"src/competitive/math/factorial.rs.html#22\">line 22</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>16</span>    <span class=\"kw\">pub fn </span><a href=\"tools/scanner.rs.html#391\">new(max_n: usize) -&gt; </a><a class=\"self\" href=\"tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>17</span>        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">fact = </a><span class=\"macro\">vec!</span><a href=\"tools/scanner.rs.html#391\">[MInt::one(); max_n + </a><span class=\"number\">1</span>];\n<span data-nosnippet>18</span>        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">inv_fact = </a><span class=\"macro\">vec!</span><a href=\"tools/scanner.rs.html#391\">[MInt::one(); max_n + </a><span class=\"number\">1</span>];\n<span data-nosnippet>19</span>        <span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">i </a><span class=\"kw\">in </span><span class=\"number\">2</span><a href=\"tools/scanner.rs.html#391\">..=max_n {\n<span data-nosnippet>20</span>            fact[i] = fact[i - </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">] * MInt::from(i);\n<span data-nosnippet>21</span>        }\n<span data-nosnippet>22</span>        inv_fact[max_n] = fact[max_n].</a><span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>23</span>        <span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">i </a><span class=\"kw\">in </span>(<span class=\"number\">3</span><a href=\"tools/scanner.rs.html#391\">..=max_n).rev() {\n<span data-nosnippet>24</span>            inv_fact[i - </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">] = inv_fact[i] * MInt::from(i);\n<span data-nosnippet>25</span>        }\n<span data-nosnippet>26</span>        </a><a class=\"self\" href=\"tools/scanner.rs.html#391\">Self </a><a href=\"tools/scanner.rs.html#391\">{ fact, inv_fact }\n<span data-nosnippet>27</span>    }</a></code></pre></div></div><div class=\"scraped-example\" data-locs=\"[[[11,11],&#34;src/competitive/math/black_box_matrix.rs.html#292&#34;,&#34;line 292&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/black_box_matrix.rs (<a href=\"src/competitive/math/black_box_matrix.rs.html#292\">line 292</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>281</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">black_box_linear_equation(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, <span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">b: Vec&lt;MInt&lt;M&gt;&gt;) -&gt; </a><span class=\"prelude-ty\">Option</span><a href=\"../tools/scanner.rs.html#391\">&lt;Vec&lt;MInt&lt;M&gt;&gt;&gt;\n<span data-nosnippet>282</span>    </a><span class=\"kw\">where\n<span data-nosnippet>283</span>        </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert&lt;u64&gt;,\n<span data-nosnippet>284</span>    {\n<span data-nosnippet>285</span>        </a><span class=\"macro\">assert_eq!</span>(<span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.shape().</a><span class=\"number\">0</span>, <span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.shape().</a><span class=\"number\">1</span>);\n<span data-nosnippet>286</span>        <span class=\"macro\">assert_eq!</span>(<span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.shape().</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">, b.len());\n<span data-nosnippet>287</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">n = </a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.shape().</a><span class=\"number\">0</span>;\n<span data-nosnippet>288</span>        <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">p = </a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.minimal_polynomial();\n<span data-nosnippet>289</span>        </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">p.is_empty() || p[</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">].is_zero() {\n<span data-nosnippet>290</span>            </a><span class=\"kw\">return </span><span class=\"prelude-val\">None</span>;\n<span data-nosnippet>291</span>        }\n<span data-nosnippet>292</span>        <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">p0_inv = p[</a><span class=\"number\">0</span>].<span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>293</span>        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">x = </a><span class=\"macro\">vec!</span><a href=\"../tools/scanner.rs.html#391\">[MInt::zero(); n];\n<span data-nosnippet>294</span>        </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">p </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">p.into_iter().skip(</a><span class=\"number\">1</span>) {\n<span data-nosnippet>295</span>            <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">p = -p * p0_inv;\n<span data-nosnippet>296</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">i </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>297</span>                x[i] += p * b[i];\n<span data-nosnippet>298</span>            }\n<span data-nosnippet>299</span>            b = </a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.apply(</a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">b);\n<span data-nosnippet>300</span>        }\n<span data-nosnippet>301</span>        </a><span class=\"prelude-val\">Some</span><a href=\"../tools/scanner.rs.html#391\">(x)\n<span data-nosnippet>302</span>    }</a></code></pre></div></div><div class=\"scraped-example\" data-locs=\"[[[7,7],&#34;src/library_checker/number_theory/sum_of_totient_function.rs.html#19&#34;,&#34;line 19&#34;]]\"><div class=\"scraped-example-title\">crates/library_checker/src/number_theory/sum_of_totient_function.rs (<a href=\"src/library_checker/number_theory/sum_of_totient_function.rs.html#19\">line 19</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>12</span><span class=\"kw\">pub fn </span><a href=\"tools/scanner.rs.html#391\">sum_of_totient_function(reader: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Read, </a><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">writer: </a><span class=\"kw\">impl </span><a href=\"tools/scanner.rs.html#391\">Write) {\n<span data-nosnippet>13</span>    </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">s = read_all_unchecked(reader);\n<span data-nosnippet>14</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">scanner = Scanner::new(</a><span class=\"kw-2\">&amp;</span><a href=\"tools/scanner.rs.html#391\">s);\n<span data-nosnippet>15</span>    </a><span class=\"macro\">scan!</span><a href=\"tools/scanner.rs.html#391\">(scanner, n: u64);\n<span data-nosnippet>16</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">s = </a><span class=\"number\">1</span>;\n<span data-nosnippet>17</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">pp = </a><span class=\"number\">0</span>;\n<span data-nosnippet>18</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">pc = </a><span class=\"number\">0</span>;\n<span data-nosnippet>19</span>    <span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">inv2 = M::new(</a><span class=\"number\">2</span>).<span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>20</span>    <span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">qa = QuotientArray::from_fn(n, |i| [M::from(i), M::from(i) * M::from(i + </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">) * inv2])\n<span data-nosnippet>21</span>        .map(|[x, y]| [x - M::one(), y - M::one()])\n<span data-nosnippet>22</span>        .lucy_dp::&lt;ArrayOperation&lt;AdditiveOperation&lt;</a><span class=\"kw\">_</span>&gt;, <span class=\"number\">2</span><a href=\"tools/scanner.rs.html#391\">&gt;&gt;(|[x, y], p| [x, y * M::from(p)])\n<span data-nosnippet>23</span>        .map(|[x, y]| y - x)\n<span data-nosnippet>24</span>        .min_25_sieve::&lt;AddMulOperation&lt;</a><span class=\"kw\">_</span><a href=\"tools/scanner.rs.html#391\">&gt;&gt;(|p, c| {\n<span data-nosnippet>25</span>            </a><span class=\"kw\">if </span><a href=\"tools/scanner.rs.html#391\">pp != p || pc &gt; c {\n<span data-nosnippet>26</span>                pp = p;\n<span data-nosnippet>27</span>                pc = </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">;\n<span data-nosnippet>28</span>                s = p - </a><span class=\"number\">1</span>;\n<span data-nosnippet>29</span>            }\n<span data-nosnippet>30</span>            <span class=\"kw\">while </span><a href=\"tools/scanner.rs.html#391\">pc &lt; c {\n<span data-nosnippet>31</span>                pc += </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">;\n<span data-nosnippet>32</span>                s </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= p;\n<span data-nosnippet>33</span>            }\n<span data-nosnippet>34</span>            M::from(s)\n<span data-nosnippet>35</span>        });\n<span data-nosnippet>36</span>    </a><span class=\"macro\">writeln!</span><a href=\"tools/scanner.rs.html#391\">(writer, </a><span class=\"string\">\"{}\"</span><a href=\"tools/scanner.rs.html#391\">, qa[n]).ok();\n<span data-nosnippet>37</span>}</a></code></pre></div></div><div class=\"scraped-example\" data-locs=\"[[[28,28],&#34;src/competitive/math/lagrange_interpolation.rs.html#78&#34;,&#34;line 78&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/lagrange_interpolation.rs (<a href=\"src/competitive/math/lagrange_interpolation.rs.html#78\">line 78</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>50</span><span class=\"kw\">pub fn </span><a href=\"../tools/scanner.rs.html#391\">lagrange_interpolation_polynomial&lt;M&gt;(x: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">[MInt&lt;M&gt;], y: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">[MInt&lt;M&gt;]) -&gt; Vec&lt;MInt&lt;M&gt;&gt;\n<span data-nosnippet>51</span></a><span class=\"kw\">where\n<span data-nosnippet>52</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>53</span>{\n<span data-nosnippet>54</span>    </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">n = x.len() - </a><span class=\"number\">1</span>;\n<span data-nosnippet>55</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">dp = </a><span class=\"macro\">vec!</span><a href=\"../tools/scanner.rs.html#391\">[MInt::zero(); n + </a><span class=\"number\">2</span>];\n<span data-nosnippet>56</span>    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">ndp = </a><span class=\"macro\">vec!</span><a href=\"../tools/scanner.rs.html#391\">[MInt::zero(); n + </a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">];\n<span data-nosnippet>57</span>    dp[</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">] = -x[</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">];\n<span data-nosnippet>58</span>    dp[</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">] = MInt::one();\n<span data-nosnippet>59</span>    </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">x </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">x.iter().skip(</a><span class=\"number\">1</span>) {\n<span data-nosnippet>60</span>        <span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">j </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..=n + </a><span class=\"number\">1 </span><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>61</span>            ndp[j] = -dp[j] * x + </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">j &gt;= </a><span class=\"number\">1 </span><a href=\"../tools/scanner.rs.html#391\">{ dp[j - </a><span class=\"number\">1</span>] } <span class=\"kw\">else </span><a href=\"../tools/scanner.rs.html#391\">{ MInt::zero() };\n<span data-nosnippet>62</span>        }\n<span data-nosnippet>63</span>        std::mem::swap(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">dp, </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">ndp);\n<span data-nosnippet>64</span>    }\n<span data-nosnippet>65</span>    </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">res = </a><span class=\"macro\">vec!</span><a href=\"../tools/scanner.rs.html#391\">[MInt::zero(); n + </a><span class=\"number\">1</span>];\n<span data-nosnippet>66</span>    <span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">i </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..=n {\n<span data-nosnippet>67</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t = y[i]\n<span data-nosnippet>68</span>            / (</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..=n)\n<span data-nosnippet>69</span>                .map(|j| </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">i != j { x[i] - x[j] } </a><span class=\"kw\">else </span><a href=\"../tools/scanner.rs.html#391\">{ MInt::one() })\n<span data-nosnippet>70</span>                .product::&lt;MInt&lt;M&gt;&gt;();\n<span data-nosnippet>71</span>        </a><span class=\"kw\">if </span><a href=\"../tools/scanner.rs.html#391\">t.is_zero() {\n<span data-nosnippet>72</span>            </a><span class=\"kw\">continue</span>;\n<span data-nosnippet>73</span>        } <span class=\"kw\">else if </span><a href=\"../tools/scanner.rs.html#391\">x[i].is_zero() {\n<span data-nosnippet>74</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">j </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..=n {\n<span data-nosnippet>75</span>                res[j] += dp[j + </a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">] * t;\n<span data-nosnippet>76</span>            }\n<span data-nosnippet>77</span>        } </a><span class=\"kw\">else </span>{\n<span data-nosnippet>78</span>            <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">xinv = x[i].</a><span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>79</span>            <span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">pre = MInt::zero();\n<span data-nosnippet>80</span>            </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">j </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">..=n {\n<span data-nosnippet>81</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d = -(dp[j] - pre) * xinv;\n<span data-nosnippet>82</span>                res[j] += d * t;\n<span data-nosnippet>83</span>                pre = d;\n<span data-nosnippet>84</span>            }\n<span data-nosnippet>85</span>        }\n<span data-nosnippet>86</span>    }\n<span data-nosnippet>87</span>    res\n<span data-nosnippet>88</span>}</a></code></pre></div></div><div class=\"scraped-example\" data-locs=\"[[[14,14],&#34;src/competitive/math/mint_matrix.rs.html#55&#34;,&#34;line 55&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/mint_matrix.rs (<a href=\"src/competitive/math/mint_matrix.rs.html#55\">line 55</a>)</div><div class=\"example-wrap digits-2\"><pre class=\"rust\"><code><span data-nosnippet>41</span>    <span class=\"kw\">fn </span><a href=\"tools/scanner.rs.html#391\">determinant_linear_non_singular(</a><span class=\"kw-2\">mut </span><span class=\"self\">self</span>, <span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">other: </a><span class=\"self\">Self</span>) -&gt; <span class=\"prelude-ty\">Option</span><a href=\"tools/scanner.rs.html#391\">&lt;Vec&lt;MInt&lt;M&gt;&gt;&gt;\n<span data-nosnippet>42</span>    </a><span class=\"kw\">where\n<span data-nosnippet>43</span>        </span><a href=\"tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>44</span>    {\n<span data-nosnippet>45</span>        </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">n = </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">.data.len();\n<span data-nosnippet>46</span>        </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">f = MInt::one();\n<span data-nosnippet>47</span>        </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">d </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>48</span>            </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">i = other.data.iter().position(|other| !other[d].is_zero())</a><span class=\"question-mark\">?</span>;\n<span data-nosnippet>49</span>            <span class=\"kw\">if </span><a href=\"tools/scanner.rs.html#391\">i != d {\n<span data-nosnippet>50</span>                </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">.data.swap(i, d);\n<span data-nosnippet>51</span>                other.data.swap(i, d);\n<span data-nosnippet>52</span>                f = -f;\n<span data-nosnippet>53</span>            }\n<span data-nosnippet>54</span>            f </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= other[d][d];\n<span data-nosnippet>55</span>            </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">r = other[d][d].</a><span class=\"highlight focus\">inv</span>();\n<span data-nosnippet>56</span>            <span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">j </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>57</span>                </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[d][j] </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= r;\n<span data-nosnippet>58</span>                other[d][j] </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= r;\n<span data-nosnippet>59</span>            }\n<span data-nosnippet>60</span>            </a><span class=\"macro\">assert!</span><a href=\"tools/scanner.rs.html#391\">(other[d][d].is_one());\n<span data-nosnippet>61</span>            </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">i </a><span class=\"kw\">in </span><a href=\"tools/scanner.rs.html#391\">d + </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>62</span>                </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">a = other[i][d];\n<span data-nosnippet>63</span>                </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">k </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>64</span>                    </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[i][k] = </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[i][k] - a * </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[d][k];\n<span data-nosnippet>65</span>                    other[i][k] = other[i][k] - a * other[d][k];\n<span data-nosnippet>66</span>                }\n<span data-nosnippet>67</span>            }\n<span data-nosnippet>68</span>            </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">j </a><span class=\"kw\">in </span><a href=\"tools/scanner.rs.html#391\">d + </a><span class=\"number\">1</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>69</span>                </a><span class=\"kw\">let </span><a href=\"tools/scanner.rs.html#391\">a = other[d][j];\n<span data-nosnippet>70</span>                </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">k </a><span class=\"kw\">in </span><span class=\"number\">0</span><a href=\"tools/scanner.rs.html#391\">..n {\n<span data-nosnippet>71</span>                    </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[k][j] = </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[k][j] - a * </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">[k][d];\n<span data-nosnippet>72</span>                    other[k][j] = other[k][j] - a * other[k][d];\n<span data-nosnippet>73</span>                }\n<span data-nosnippet>74</span>            }\n<span data-nosnippet>75</span>        }\n<span data-nosnippet>76</span>        </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">s </a><span class=\"kw\">in </span><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">.data.iter_mut() {\n<span data-nosnippet>77</span>            </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">s </a><span class=\"kw\">in </span><a href=\"tools/scanner.rs.html#391\">s.iter_mut() {\n<span data-nosnippet>78</span>                </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">s = -</a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">s;\n<span data-nosnippet>79</span>            }\n<span data-nosnippet>80</span>        }\n<span data-nosnippet>81</span>        </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"tools/scanner.rs.html#391\">p = </a><span class=\"self\">self</span><a href=\"tools/scanner.rs.html#391\">.characteristic_polynomial();\n<span data-nosnippet>82</span>        </a><span class=\"kw\">for </span><a href=\"tools/scanner.rs.html#391\">p </a><span class=\"kw\">in </span><a href=\"tools/scanner.rs.html#391\"><a href=\"algebra/action.rs.html#14\">p</a>.iter_mut() {\n<span data-nosnippet>83</span>            </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">p </a><span class=\"kw-2\">*</span><a href=\"tools/scanner.rs.html#391\">= f;\n<span data-nosnippet>84</span>        }\n<span data-nosnippet>85</span>        </a><span class=\"prelude-val\">Some</span><a href=\"tools/scanner.rs.html#391\">(p)\n<span data-nosnippet>86</span>    }</a></code></pre></div></div></div></details></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#87-89\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.inner\" class=\"fn\">inner</a>(self) -&gt; M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a></h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-3\"><a href=\"#scraped-examples-3\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example\" data-locs=\"[[[1,1],&#34;src/competitive/num/mint/mint_base.rs.html#107&#34;,&#34;line 107&#34;],[[168,168],&#34;src/competitive/num/mint/mint_base.rs.html#274&#34;,&#34;line 274&#34;],[[199,199],&#34;src/competitive/num/mint/mint_base.rs.html#305&#34;,&#34;line 305&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/num/mint/mint_base.rs (<a href=\"src/competitive/num/mint/mint_base.rs.html#107\">line 107</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>106</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, f: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">fmt::Formatter&lt;</a><span class=\"lifetime\">'_</span><a href=\"../tools/scanner.rs.html#391\">&gt;) -&gt; fmt::Result {\n<span data-nosnippet>107</span>        Debug::fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.<span class=\"highlight focus\">inner</span><a href=\"../tools/scanner.rs.html#391\">(), f)\n<span data-nosnippet>108</span>    }\n<span data-nosnippet>109</span>}\n<span data-nosnippet>110</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Default </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>111</span></a><span class=\"kw\">where\n<span data-nosnippet>112</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>113</span>{\n<span data-nosnippet>114</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>115</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">default() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a>{\n<span data-nosnippet>116</span>        &lt;<a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero()\n<span data-nosnippet>117</span>    }\n<span data-nosnippet>118</span>}\n<span data-nosnippet>119</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; PartialEq </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>120</span></a><span class=\"kw\">where\n<span data-nosnippet>121</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>122</span>{\n<span data-nosnippet>123</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>124</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">eq(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, other: </a><span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; bool {\n<span data-nosnippet>125</span>        PartialEq::eq(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">other.x)\n<span data-nosnippet>126</span>    }\n<span data-nosnippet>127</span>}\n<span data-nosnippet>128</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Eq </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt; </a><span class=\"kw\">where </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase {}\n<span data-nosnippet>129</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Hash </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>130</span></a><span class=\"kw\">where\n<span data-nosnippet>131</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>132</span>{\n<span data-nosnippet>133</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>134</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">hash&lt;H: Hasher&gt;(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, state: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">H) {\n<span data-nosnippet>135</span>        Hash::hash(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, state)\n<span data-nosnippet>136</span>    }\n<span data-nosnippet>137</span>}\n<span data-nosnippet>138</span></a><span class=\"macro\">macro_rules!</span><a href=\"../tools/scanner.rs.html#391\"> impl_mint_from {\n<span data-nosnippet>139</span>    ($(</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">:ty),</a><span class=\"kw-2\">*</span>) =&gt; {\n<span data-nosnippet>140</span>        $(<span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; From&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt; <span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>141</span>        </a><span class=\"kw\">where\n<span data-nosnippet>142</span>            </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt;,\n<span data-nosnippet>143</span>        {\n<span data-nosnippet>144</span>            <span class=\"attr\">#[inline]\n<span data-nosnippet>145</span>            </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from(x: </a><span class=\"macro-nonterminal\">$t</span>) -&gt; <a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>146</span>                <span class=\"self\">Self</span>::new_unchecked(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;::from(x))\n<span data-nosnippet>147</span>            }\n<span data-nosnippet>148</span>        }\n<span data-nosnippet>149</span>        </a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; From&lt;MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><span class=\"macro-nonterminal\">$t\n<span data-nosnippet>150</span>        </span><span class=\"kw\">where\n<span data-nosnippet>151</span>            </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span>&gt;,\n<span data-nosnippet>152</span>        {\n<span data-nosnippet>153</span>            <span class=\"attr\">#[inline]\n<span data-nosnippet>154</span>            </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from(x: MInt&lt;M&gt;) -&gt; </a><span class=\"macro-nonterminal\">$t </span><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>155</span>                &lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;</a><span class=\"macro-nonterminal\">$t</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;::into(x.x)\n<span data-nosnippet>156</span>            }\n<span data-nosnippet>157</span>        })*\n<span data-nosnippet>158</span>    };\n<span data-nosnippet>159</span>}\n<span data-nosnippet>160</span></a><span class=\"macro\">impl_mint_from!</span><a href=\"../tools/scanner.rs.html#391\">(\n<span data-nosnippet>161</span>    u8, u16, u32, u64, u128, usize, i8, i16, i32, i64, i128, isize\n<span data-nosnippet>162</span>);\n<span data-nosnippet>163</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Zero </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>164</span></a><span class=\"kw\">where\n<span data-nosnippet>165</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>166</span>{\n<span data-nosnippet>167</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>168</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">zero() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>169</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_zero())\n<span data-nosnippet>170</span>    }\n<span data-nosnippet>171</span>}\n<span data-nosnippet>172</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; One </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>173</span></a><span class=\"kw\">where\n<span data-nosnippet>174</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>175</span>{\n<span data-nosnippet>176</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>177</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">one() -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>178</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_one())\n<span data-nosnippet>179</span>    }\n<span data-nosnippet>180</span>}\n<span data-nosnippet>181</span>\n<span data-nosnippet>182</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Add </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>183</span></a><span class=\"kw\">where\n<span data-nosnippet>184</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>185</span>{\n<span data-nosnippet>186</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>187</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>188</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">add(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>189</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_add(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>190</span>    }\n<span data-nosnippet>191</span>}\n<span data-nosnippet>192</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Sub </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>193</span></a><span class=\"kw\">where\n<span data-nosnippet>194</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>195</span>{\n<span data-nosnippet>196</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>197</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>198</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sub(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>199</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_sub(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>200</span>    }\n<span data-nosnippet>201</span>}\n<span data-nosnippet>202</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Mul </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>203</span></a><span class=\"kw\">where\n<span data-nosnippet>204</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>205</span>{\n<span data-nosnippet>206</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>207</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>208</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">mul(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>209</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_mul(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>210</span>    }\n<span data-nosnippet>211</span>}\n<span data-nosnippet>212</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Div </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>213</span></a><span class=\"kw\">where\n<span data-nosnippet>214</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>215</span>{\n<span data-nosnippet>216</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>217</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>218</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">div(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, rhs: </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>219</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_div(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x, rhs.x))\n<span data-nosnippet>220</span>    }\n<span data-nosnippet>221</span>}\n<span data-nosnippet>222</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Neg </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>223</span></a><span class=\"kw\">where\n<span data-nosnippet>224</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>225</span>{\n<span data-nosnippet>226</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>227</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>228</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">neg(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">) -&gt; <span class=\"self\">Self</span>::Output {\n<span data-nosnippet>229</span>        <span class=\"self\">Self</span>::new_unchecked(M::mod_neg(</a><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">.x))\n<span data-nosnippet>230</span>    }\n<span data-nosnippet>231</span>}\n<span data-nosnippet>232</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Sum </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>233</span></a><span class=\"kw\">where\n<span data-nosnippet>234</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>235</span>{\n<span data-nosnippet>236</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>237</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sum&lt;I: Iterator&lt;Item = </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>238</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero(), Add::add)\n<span data-nosnippet>239</span>    }\n<span data-nosnippet>240</span>}\n<span data-nosnippet>241</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Product </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>242</span></a><span class=\"kw\">where\n<span data-nosnippet>243</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>244</span>{\n<span data-nosnippet>245</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>246</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">product&lt;I: Iterator&lt;Item = </a><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>247</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">One&gt;::one(), Mul::mul)\n<span data-nosnippet>248</span>    }\n<span data-nosnippet>249</span>}\n<span data-nosnippet>250</span></a><span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, M: </a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">&gt; Sum&lt;</a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>251</span></a><span class=\"kw\">where\n<span data-nosnippet>252</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>253</span>{\n<span data-nosnippet>254</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>255</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">sum&lt;I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>256</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">Zero&gt;::zero(), Add::add)\n<span data-nosnippet>257</span>    }\n<span data-nosnippet>258</span>}\n<span data-nosnippet>259</span></a><span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, M: </a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">&gt; Product&lt;</a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;&gt; </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>260</span></a><span class=\"kw\">where\n<span data-nosnippet>261</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>262</span>{\n<span data-nosnippet>263</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>264</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">product&lt;I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">&gt;&gt;(iter: I) -&gt; </a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><a href=\"../tools/scanner.rs.html#391\">{\n<span data-nosnippet>265</span>        iter.fold(&lt;</a><a class=\"self\" href=\"../tools/scanner.rs.html#391\">Self </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">One&gt;::one(), Mul::mul)\n<span data-nosnippet>266</span>    }\n<span data-nosnippet>267</span>}\n<span data-nosnippet>268</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; Display </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>269</span></a><span class=\"kw\">where\n<span data-nosnippet>270</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>271</span>    M::Inner: Display,\n<span data-nosnippet>272</span>{\n<span data-nosnippet>273</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">fmt(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, f: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">fmt::Formatter&lt;</a><span class=\"lifetime\">'_</span>&gt;) -&gt; <span class=\"prelude-ty\">Result</span><a href=\"../tools/scanner.rs.html#391\">&lt;(), fmt::Error&gt; {\n<span data-nosnippet>274</span>        </a><span class=\"macro\">write!</span><a href=\"../tools/scanner.rs.html#391\">(f, </a><span class=\"string\">\"{}\"</span>, <span class=\"self\">self</span>.<span class=\"highlight\">inner</span>())\n<span data-nosnippet>275</span>    }\n<span data-nosnippet>276</span>}\n<span data-nosnippet>277</span><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; FromStr </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>278</span></a><span class=\"kw\">where\n<span data-nosnippet>279</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert,\n<span data-nosnippet>280</span>    M::Inner: FromStr,\n<span data-nosnippet>281</span>{\n<span data-nosnippet>282</span>    </a><span class=\"kw\">type </span><span class=\"prelude-val\">Err </span><a href=\"../tools/scanner.rs.html#391\">= &lt;M::Inner </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">FromStr&gt;::Err;\n<span data-nosnippet>283</span>    </a><span class=\"attr\">#[inline]\n<span data-nosnippet>284</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">from_str(s: </a><span class=\"kw-2\">&amp;</span><a href=\"../tools/scanner.rs.html#391\">str) -&gt; </a><span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span><a href=\"../tools/scanner.rs.html#391\">, <span class=\"self\">Self</span>::Err&gt; {\n<span data-nosnippet>285</span>        s.parse::&lt;M::Inner&gt;().map(<span class=\"self\">Self</span>::new)\n<span data-nosnippet>286</span>    }\n<span data-nosnippet>287</span>}\n<span data-nosnippet>288</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; IterScan </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>289</span></a><span class=\"kw\">where\n<span data-nosnippet>290</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntConvert,\n<span data-nosnippet>291</span>    M::Inner: FromStr,\n<span data-nosnippet>292</span>{\n<span data-nosnippet>293</span>    </a><span class=\"kw\">type </span><a href=\"../tools/scanner.rs.html#391\">Output = </a><span class=\"self\">Self</span>;\n<span data-nosnippet>294</span>    <span class=\"attr\">#[inline]\n<span data-nosnippet>295</span>    </span><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">scan&lt;</a><span class=\"lifetime\">'a</span><a href=\"../tools/scanner.rs.html#391\">, I: Iterator&lt;Item = </a><span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'a </span><a href=\"../tools/scanner.rs.html#391\">str&gt;&gt;(iter: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">I) -&gt; </a><span class=\"prelude-ty\">Option</span><a href=\"../tools/scanner.rs.html#391\">&lt;<span class=\"self\">Self</span>::Output&gt; {\n<span data-nosnippet>296</span>        iter.next()</a><span class=\"question-mark\">?</span><a href=\"../tools/scanner.rs.html#391\">.parse::&lt;MInt&lt;M&gt;&gt;().ok()\n<span data-nosnippet>297</span>    }\n<span data-nosnippet>298</span>}\n<span data-nosnippet>299</span></a><span class=\"kw\">impl</span><a href=\"../tools/scanner.rs.html#391\">&lt;M&gt; SerdeByteStr </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">MInt&lt;M&gt;\n<span data-nosnippet>300</span></a><span class=\"kw\">where\n<span data-nosnippet>301</span>    </span><a href=\"../tools/scanner.rs.html#391\">M: MIntBase,\n<span data-nosnippet>302</span>    M::Inner: SerdeByteStr,\n<span data-nosnippet>303</span>{\n<span data-nosnippet>304</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">serialize(</a><span class=\"kw-2\">&amp;</span><span class=\"self\">self</span><a href=\"../tools/scanner.rs.html#391\">, buf: </a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">Vec&lt;u8&gt;) {\n<span data-nosnippet>305</span>        </a><span class=\"self\">self</span>.<span class=\"highlight\">inner</span><a href=\"../tools/scanner.rs.html#391\">().serialize(buf)\n<span data-nosnippet>306</span>    }</a></code></pre></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example\" data-locs=\"[[[8,8],&#34;src/competitive/math/number_theoretic_transform.rs.html#356&#34;,&#34;line 356&#34;],[[9,9],&#34;src/competitive/math/number_theoretic_transform.rs.html#357&#34;,&#34;line 357&#34;],[[10,10],&#34;src/competitive/math/number_theoretic_transform.rs.html#358&#34;,&#34;line 358&#34;],[[31,31],&#34;src/competitive/math/number_theoretic_transform.rs.html#379&#34;,&#34;line 379&#34;],[[32,32],&#34;src/competitive/math/number_theoretic_transform.rs.html#380&#34;,&#34;line 380&#34;],[[34,34],&#34;src/competitive/math/number_theoretic_transform.rs.html#382&#34;,&#34;line 382&#34;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#356\">line 356</a>)</div><div class=\"example-wrap digits-3\"><pre class=\"rust\"><code><span data-nosnippet>348</span>    <span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">transform(t: <span class=\"self\">Self</span>::T, len: usize) -&gt; <span class=\"self\">Self</span>::F {\n<span data-nosnippet>349</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">npot = len.max(</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">).next_power_of_two();\n<span data-nosnippet>350</span>        </a><span class=\"kw\">let </span><span class=\"kw-2\">mut </span><a href=\"../tools/scanner.rs.html#391\">f = (\n<span data-nosnippet>351</span>            MVec::&lt;N1&gt;::with_capacity(npot),\n<span data-nosnippet>352</span>            MVec::&lt;N2&gt;::with_capacity(npot),\n<span data-nosnippet>353</span>            MVec::&lt;N3&gt;::with_capacity(npot),\n<span data-nosnippet>354</span>        );\n<span data-nosnippet>355</span>        </a><span class=\"kw\">for </span><a href=\"../tools/scanner.rs.html#391\">t </a><span class=\"kw\">in </span><a href=\"../tools/scanner.rs.html#391\">t {\n<span data-nosnippet>356</span>            f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.</a><span class=\"highlight focus\">inner</span><a href=\"../tools/scanner.rs.html#391\">()).into());\n<span data-nosnippet>357</span>            f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.</a><span class=\"highlight\">inner</span><a href=\"../tools/scanner.rs.html#391\">()).into());\n<span data-nosnippet>358</span>            f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">.push(&lt;M </a><span class=\"kw\">as </span><a href=\"../tools/scanner.rs.html#391\">MIntConvert&lt;u32&gt;&gt;::into(t.</a><span class=\"highlight\">inner</span><a href=\"../tools/scanner.rs.html#391\">()).into());\n<span data-nosnippet>359</span>        }\n<span data-nosnippet>360</span>        f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>361</span>        f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>362</span>        f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">.resize_with(npot, Zero::zero);\n<span data-nosnippet>363</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>364</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>365</span>        ntt(</a><span class=\"kw-2\">&amp;mut </span><a href=\"../tools/scanner.rs.html#391\">f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">);\n<span data-nosnippet>366</span>        f\n<span data-nosnippet>367</span>    }\n<span data-nosnippet>368</span>    </a><span class=\"kw\">fn </span><a href=\"../tools/scanner.rs.html#391\">inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n<span data-nosnippet>369</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t1 = MInt::&lt;N2&gt;::new(N1::get_mod()).inv();\n<span data-nosnippet>370</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n<span data-nosnippet>371</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m1_3 = MInt::&lt;N3&gt;::new(N1::get_mod());\n<span data-nosnippet>372</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">t2 = (m1_3 * MInt::&lt;N3&gt;::new(N2::get_mod())).inv();\n<span data-nosnippet>373</span>        </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">m2 = m1 * MInt::&lt;<a href=\"#318\">M</a>&gt;::from(N2::get_mod());\n<span data-nosnippet>374</span>        Convolve::&lt;N1&gt;::inverse_transform(f.</a><span class=\"number\">0</span><a href=\"../tools/scanner.rs.html#391\">, len)\n<span data-nosnippet>375</span>            .into_iter()\n<span data-nosnippet>376</span>            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.</a><span class=\"number\">1</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>377</span>            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.</a><span class=\"number\">2</span><a href=\"../tools/scanner.rs.html#391\">, len))\n<span data-nosnippet>378</span>            .map(|((c1, c2), c3)| {\n<span data-nosnippet>379</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d1 = c1.</a><span class=\"highlight\">inner</span>();\n<span data-nosnippet>380</span>                <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d2 = ((c2 - <a href=\"../num/zero_one.rs.html#1-14\">MInt</a>::&lt;N2&gt;::from(d1)) * t1).</a><span class=\"highlight\">inner</span>();\n<span data-nosnippet>381</span>                <span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">x = MInt::&lt;N3&gt;::new(d1) + MInt::&lt;N3&gt;::new(d2) * m1_3;\n<span data-nosnippet>382</span>                </a><span class=\"kw\">let </span><a href=\"../tools/scanner.rs.html#391\">d3 = ((c3 - x) * t2).</a><span class=\"highlight\">inner</span><a href=\"../tools/scanner.rs.html#391\">();\n<span data-nosnippet>383</span>                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n<span data-nosnippet>384</span>            })\n<span data-nosnippet>385</span>            .collect()\n<span data-nosnippet>386</span>    }</a></code></pre></div></div></div></details></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#351\">Source</a><a href=\"#impl-Mul%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#351\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#351\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#202-211\">Source</a><a href=\"#impl-Mul-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#206\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#208-210\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#392\">Source</a><a href=\"#impl-MulAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#392\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#392\">Source</a><a href=\"#impl-MulAssign-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#392\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#222-231\">Source</a><a href=\"#impl-Neg-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#226\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#228-230\">Source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#172-180\">Source</a><a href=\"#impl-One-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/num/trait.One.html\" title=\"trait competitive::num::One\">One</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#177-179\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#18-23\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#25-27\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></div></details>","One","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#119-127\">Source</a><a href=\"#impl-PartialEq-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#124-126\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#259-267\">Source</a><a href=\"#impl-Product%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#264-266\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product<&'a MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#241-249\">Source</a><a href=\"#impl-Product-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#246-248\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerdeByteStr-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#299-314\">Source</a><a href=\"#impl-SerdeByteStr-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/tools/trait.SerdeByteStr.html\" title=\"trait competitive::tools::SerdeByteStr\">SerdeByteStr</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"competitive/tools/trait.SerdeByteStr.html\" title=\"trait competitive::tools::SerdeByteStr\">SerdeByteStr</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#304-306\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.SerdeByteStr.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;)</h4></section><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#308-313\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.SerdeByteStr.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;I&gt;(iter: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section><section id=\"method.serialize_bytestr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/tools/coding.rs.html#358-363\">Source</a><a href=\"#method.serialize_bytestr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.SerdeByteStr.html#method.serialize_bytestr\" class=\"fn\">serialize_bytestr</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.deserialize_from_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/tools/coding.rs.html#365-372\">Source</a><a href=\"#method.deserialize_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.SerdeByteStr.html#method.deserialize_from_bytes\" class=\"fn\">deserialize_from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></div></details>","SerdeByteStr","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#350\">Source</a><a href=\"#impl-Sub%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#350\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#350\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#192-201\">Source</a><a href=\"#impl-Sub-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#196\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#198-200\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#391\">Source</a><a href=\"#impl-SubAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#391\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#391\">Source</a><a href=\"#impl-SubAssign-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#391\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#250-258\">Source</a><a href=\"#impl-Sum%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a> + 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#255-257\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#232-240\">Source</a><a href=\"#impl-Sum-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#237-239\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#163-171\">Source</a><a href=\"#impl-Zero-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/num/trait.Zero.html\" title=\"trait competitive::num::Zero\">Zero</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#168-170\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#4-9\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#method.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#11-13\">Source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></div></details>","Zero","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-Copy-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#101\">Source</a><a href=\"#impl-Copy-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section>","Copy","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-Eq-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#128\">Source</a><a href=\"#impl-Eq-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</div></h3></section>","Eq","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-FormalPowerSeriesCoefficient-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#56\">Source</a><a href=\"#impl-FormalPowerSeriesCoefficient-for-MInt%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/math/trait.FormalPowerSeriesCoefficient.html\" title=\"trait competitive::math::FormalPowerSeriesCoefficient\">FormalPowerSeriesCoefficient</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h3></section>","FormalPowerSeriesCoefficient","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[250473]}