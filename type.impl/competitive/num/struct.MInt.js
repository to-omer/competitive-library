(function() {var type_impls = {
"competitive":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/mod_sqrt.rs.html#4-78\">source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/math/mod_sqrt.rs.html#8-77\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.sqrt\" class=\"fn\">sqrt</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example expanded\" data-locs=\"[[[1,1],&quot;src/competitive/math/formal_power_series/mod.rs.html#67&quot;,&quot;line 67&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/formal_power_series/mod.rs (<a href=\"src/competitive/math/formal_power_series/mod.rs.html#67\">line 67</a>)</div><div class=\"code-wrapper\"><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>66</span>\n<span>67</span>\n<span>68</span>\n</pre></div><pre class=\"rust\"><code>    <span class=\"kw\">fn </span>sqrt_coefficient(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <span class=\"prelude-ty\">Option</span>&lt;<span class=\"self\">Self</span>&gt; {\n        <span class=\"self\">self</span>.<span class=\"highlight focus\">sqrt</span>()\n    }</code></pre></div></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example \" data-locs=\"[[[6,6],&quot;src/library_checker/math/sqrt_mod.rs.html#12&quot;,&quot;line 12&quot;]]\"><div class=\"scraped-example-title\">crates/library_checker/src/math/sqrt_mod.rs (<a href=\"src/library_checker/math/sqrt_mod.rs.html#12\">line 12</a>)</div><div class=\"code-wrapper\"><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>6</span>\n<span>7</span>\n<span>8</span>\n<span>9</span>\n<span>10</span>\n<span>11</span>\n<span>12</span>\n<span>13</span>\n<span>14</span>\n<span>15</span>\n<span>16</span>\n<span>17</span>\n<span>18</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button><span class=\"kw\">pub fn </span>sqrt_mod(reader: <span class=\"kw\">impl </span>Read, <span class=\"kw-2\">mut </span>writer: <span class=\"kw\">impl </span>Write) {\n    <span class=\"kw\">let </span>s = read_all_unchecked(reader);\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>scanner = Scanner::new(<span class=\"kw-2\">&amp;</span>s);\n    <span class=\"macro\">scan!</span>(scanner, q, yp: [(u32, u32)]);\n    <span class=\"kw\">for </span>(y, p) <span class=\"kw\">in </span>yp.take(q) {\n        DynMIntU32::set_mod(p);\n        <span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(x) = DynMIntU32::from(y).<span class=\"highlight focus\">sqrt</span>() {\n            <span class=\"macro\">writeln!</span>(writer, <span class=\"string\">&quot;{}&quot;</span>, x).ok();\n        } <span class=\"kw\">else </span>{\n            <span class=\"macro\">writeln!</span>(writer, <span class=\"string\">&quot;-1&quot;</span>).ok();\n        }\n    }\n}</code></pre></div></div></div></div></details></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#54-62\">source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#59-61\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.new\" class=\"fn\">new</a>(x: M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example \" data-locs=\"[[[1,1],&quot;src/competitive/math/number_theoretic_transform.rs.html#368&quot;,&quot;line 368&quot;],[[3,3],&quot;src/competitive/math/number_theoretic_transform.rs.html#370&quot;,&quot;line 370&quot;],[[4,4],&quot;src/competitive/math/number_theoretic_transform.rs.html#371&quot;,&quot;line 371&quot;],[[13,13],&quot;src/competitive/math/number_theoretic_transform.rs.html#380&quot;,&quot;line 380&quot;],[[13,13],&quot;src/competitive/math/number_theoretic_transform.rs.html#380&quot;,&quot;line 380&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#368\">line 368</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>367</span>\n<span>368</span>\n<span>369</span>\n<span>370</span>\n<span>371</span>\n<span>372</span>\n<span>373</span>\n<span>374</span>\n<span>375</span>\n<span>376</span>\n<span>377</span>\n<span>378</span>\n<span>379</span>\n<span>380</span>\n<span>381</span>\n<span>382</span>\n<span>383</span>\n<span>384</span>\n<span>385</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">fn </span>inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n        <span class=\"kw\">let </span>t1 = <span class=\"highlight focus\">MInt::&lt;N2&gt;::new</span>(N1::get_mod()).inv();\n        <span class=\"kw\">let </span>m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n        <span class=\"kw\">let </span>m1_3 = <span class=\"highlight\">MInt::&lt;N3&gt;::new</span>(N1::get_mod());\n        <span class=\"kw\">let </span>t2 = (m1_3 * <span class=\"highlight\">MInt::&lt;N3&gt;::new</span>(N2::get_mod())).inv();\n        <span class=\"kw\">let </span>m2 = m1 * MInt::&lt;M&gt;::from(N2::get_mod());\n        Convolve::&lt;N1&gt;::inverse_transform(f.<span class=\"number\">0</span>, len)\n            .into_iter()\n            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.<span class=\"number\">1</span>, len))\n            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.<span class=\"number\">2</span>, len))\n            .map(|((c1, c2), c3)| {\n                <span class=\"kw\">let </span>d1 = c1.inner();\n                <span class=\"kw\">let </span>d2 = ((c2 - MInt::&lt;N2&gt;::from(d1)) * t1).inner();\n                <span class=\"kw\">let </span>x = <span class=\"highlight\">MInt::&lt;N3&gt;::new</span>(d1) + <span class=\"highlight\">MInt::&lt;N3&gt;::new</span>(d2) * m1_3;\n                <span class=\"kw\">let </span>d3 = ((c3 - x) * t2).inner();\n                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n            })\n            .collect()\n    }</code></pre></div></div></div></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#63-90\">source</a><a href=\"#impl-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#68-73\">source</a><h4 class=\"code-header\">pub const fn <a href=\"competitive/num/struct.MInt.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(x: M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples\"><a href=\"#scraped-examples\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example \" data-locs=\"[[[1,1],&quot;src/competitive/num/mint/mint_base.rs.html#60&quot;,&quot;line 60&quot;],[[21,21],&quot;src/competitive/num/mint/mint_base.rs.html#80&quot;,&quot;line 80&quot;],[[25,25],&quot;src/competitive/num/mint/mint_base.rs.html#84&quot;,&quot;line 84&quot;],[[108,108],&quot;src/competitive/num/mint/mint_base.rs.html#167&quot;,&quot;line 167&quot;],[[117,117],&quot;src/competitive/num/mint/mint_base.rs.html#176&quot;,&quot;line 176&quot;],[[128,128],&quot;src/competitive/num/mint/mint_base.rs.html#187&quot;,&quot;line 187&quot;],[[138,138],&quot;src/competitive/num/mint/mint_base.rs.html#197&quot;,&quot;line 197&quot;],[[148,148],&quot;src/competitive/num/mint/mint_base.rs.html#207&quot;,&quot;line 207&quot;],[[158,158],&quot;src/competitive/num/mint/mint_base.rs.html#217&quot;,&quot;line 217&quot;],[[168,168],&quot;src/competitive/num/mint/mint_base.rs.html#227&quot;,&quot;line 227&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/num/mint/mint_base.rs (<a href=\"src/competitive/num/mint/mint_base.rs.html#60\">line 60</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>59</span>\n<span>60</span>\n<span>61</span>\n<span>62</span>\n<span>63</span>\n<span>64</span>\n<span>65</span>\n<span>66</span>\n<span>67</span>\n<span>68</span>\n<span>69</span>\n<span>70</span>\n<span>71</span>\n<span>72</span>\n<span>73</span>\n<span>74</span>\n<span>75</span>\n<span>76</span>\n<span>77</span>\n<span>78</span>\n<span>79</span>\n<span>80</span>\n<span>81</span>\n<span>82</span>\n<span>83</span>\n<span>84</span>\n<span>85</span>\n<span>86</span>\n<span>87</span>\n<span>88</span>\n<span>89</span>\n<span>90</span>\n<span>91</span>\n<span>92</span>\n<span>93</span>\n<span>94</span>\n<span>95</span>\n<span>96</span>\n<span>97</span>\n<span>98</span>\n<span>99</span>\n<span>100</span>\n<span>101</span>\n<span>102</span>\n<span>103</span>\n<span>104</span>\n<span>105</span>\n<span>106</span>\n<span>107</span>\n<span>108</span>\n<span>109</span>\n<span>110</span>\n<span>111</span>\n<span>112</span>\n<span>113</span>\n<span>114</span>\n<span>115</span>\n<span>116</span>\n<span>117</span>\n<span>118</span>\n<span>119</span>\n<span>120</span>\n<span>121</span>\n<span>122</span>\n<span>123</span>\n<span>124</span>\n<span>125</span>\n<span>126</span>\n<span>127</span>\n<span>128</span>\n<span>129</span>\n<span>130</span>\n<span>131</span>\n<span>132</span>\n<span>133</span>\n<span>134</span>\n<span>135</span>\n<span>136</span>\n<span>137</span>\n<span>138</span>\n<span>139</span>\n<span>140</span>\n<span>141</span>\n<span>142</span>\n<span>143</span>\n<span>144</span>\n<span>145</span>\n<span>146</span>\n<span>147</span>\n<span>148</span>\n<span>149</span>\n<span>150</span>\n<span>151</span>\n<span>152</span>\n<span>153</span>\n<span>154</span>\n<span>155</span>\n<span>156</span>\n<span>157</span>\n<span>158</span>\n<span>159</span>\n<span>160</span>\n<span>161</span>\n<span>162</span>\n<span>163</span>\n<span>164</span>\n<span>165</span>\n<span>166</span>\n<span>167</span>\n<span>168</span>\n<span>169</span>\n<span>170</span>\n<span>171</span>\n<span>172</span>\n<span>173</span>\n<span>174</span>\n<span>175</span>\n<span>176</span>\n<span>177</span>\n<span>178</span>\n<span>179</span>\n<span>180</span>\n<span>181</span>\n<span>182</span>\n<span>183</span>\n<span>184</span>\n<span>185</span>\n<span>186</span>\n<span>187</span>\n<span>188</span>\n<span>189</span>\n<span>190</span>\n<span>191</span>\n<span>192</span>\n<span>193</span>\n<span>194</span>\n<span>195</span>\n<span>196</span>\n<span>197</span>\n<span>198</span>\n<span>199</span>\n<span>200</span>\n<span>201</span>\n<span>202</span>\n<span>203</span>\n<span>204</span>\n<span>205</span>\n<span>206</span>\n<span>207</span>\n<span>208</span>\n<span>209</span>\n<span>210</span>\n<span>211</span>\n<span>212</span>\n<span>213</span>\n<span>214</span>\n<span>215</span>\n<span>216</span>\n<span>217</span>\n<span>218</span>\n<span>219</span>\n<span>220</span>\n<span>221</span>\n<span>222</span>\n<span>223</span>\n<span>224</span>\n<span>225</span>\n<span>226</span>\n<span>227</span>\n<span>228</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">pub fn </span>new(x: M::Inner) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"highlight focus\"><span class=\"self\">Self</span>::new_unchecked</span>(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;M::Inner&gt;&gt;::from(x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub const fn </span>new_unchecked(x: M::Inner) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self </span>{\n            x,\n            _marker: PhantomData,\n        }\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>get_mod() -&gt; M::Inner {\n        M::get_mod()\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>pow(<span class=\"self\">self</span>, y: usize) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_pow(<span class=\"self\">self</span>.x, y))\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>inv(<span class=\"self\">self</span>) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_inv(<span class=\"self\">self</span>.x))\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>inner(<span class=\"self\">self</span>) -&gt; M::Inner {\n        M::mod_inner(<span class=\"self\">self</span>.x)\n    }\n}\n\n<span class=\"kw\">impl</span>&lt;M&gt; Clone <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>clone(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"kw-2\">*</span><span class=\"self\">self\n    </span>}\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Copy <span class=\"kw\">for </span>MInt&lt;M&gt; <span class=\"kw\">where </span>M: MIntBase {}\n<span class=\"kw\">impl</span>&lt;M&gt; Debug <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">&#39;_</span>&gt;) -&gt; fmt::Result {\n        Debug::fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.inner(), f)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Default <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>default() -&gt; <span class=\"self\">Self </span>{\n        &lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>Zero&gt;::zero()\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; PartialEq <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>eq(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, other: <span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span>) -&gt; bool {\n        PartialEq::eq(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.x, <span class=\"kw-2\">&amp;</span>other.x)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Eq <span class=\"kw\">for </span>MInt&lt;M&gt; <span class=\"kw\">where </span>M: MIntBase {}\n<span class=\"kw\">impl</span>&lt;M&gt; Hash <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>hash&lt;H: Hasher&gt;(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, state: <span class=\"kw-2\">&amp;mut </span>H) {\n        Hash::hash(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.x, state)\n    }\n}\n<span class=\"macro\">macro_rules! </span>impl_mint_from {\n    ($(<span class=\"macro-nonterminal\">$t</span>:ty),<span class=\"kw-2\">*</span>) =&gt; {\n        $(<span class=\"kw\">impl</span>&lt;M&gt; From&lt;<span class=\"macro-nonterminal\">$t</span>&gt; <span class=\"kw\">for </span>MInt&lt;M&gt;\n        <span class=\"kw\">where\n            </span>M: MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;,\n        {\n            <span class=\"attr\">#[inline]\n            </span><span class=\"kw\">fn </span>from(x: <span class=\"macro-nonterminal\">$t</span>) -&gt; <span class=\"self\">Self </span>{\n                <span class=\"self\">Self</span>::new_unchecked(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;&gt;::from(x))\n            }\n        }\n        <span class=\"kw\">impl</span>&lt;M&gt; From&lt;MInt&lt;M&gt;&gt; <span class=\"kw\">for </span><span class=\"macro-nonterminal\">$t\n        </span><span class=\"kw\">where\n            </span>M: MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;,\n        {\n            <span class=\"attr\">#[inline]\n            </span><span class=\"kw\">fn </span>from(x: MInt&lt;M&gt;) -&gt; <span class=\"macro-nonterminal\">$t </span>{\n                &lt;M <span class=\"kw\">as </span>MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;&gt;::into(x.x)\n            }\n        })*\n    };\n}\n<span class=\"macro\">impl_mint_from!</span>(u8, u16, u32, u64, u128, usize, i8, i16, i32, i64, i128, isize);\n<span class=\"kw\">impl</span>&lt;M&gt; Zero <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>zero() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_zero())\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; One <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>one() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_one())\n    }\n}\n\n<span class=\"kw\">impl</span>&lt;M&gt; Add <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>add(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_add(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Sub <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>sub(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_sub(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Mul <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>mul(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_mul(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Div <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>div(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_div(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Neg <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>neg(<span class=\"self\">self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"highlight\"><span class=\"self\">Self</span>::new_unchecked</span>(M::mod_neg(<span class=\"self\">self</span>.x))\n    }</code></pre></div></div></div></div></details><section id=\"method.get_mod\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#75-77\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.get_mod\" class=\"fn\">get_mod</a>() -&gt; M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#79-81\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-1\"><a href=\"#scraped-examples-1\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example expanded\" data-locs=\"[[[4,4],&quot;src/competitive/algorithm/chromatic_number.rs.html#23&quot;,&quot;line 23&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/algorithm/chromatic_number.rs (<a href=\"src/competitive/algorithm/chromatic_number.rs.html#23\">line 23</a>)</div><div class=\"code-wrapper\"><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>19</span>\n<span>20</span>\n<span>21</span>\n<span>22</span>\n<span>23</span>\n<span>24</span>\n<span>25</span>\n<span>26</span>\n<span>27</span>\n<span>28</span>\n</pre></div><pre class=\"rust\"><code>    <span class=\"kw\">pub fn </span>k_colorable(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, k: usize) -&gt; bool {\n        !<span class=\"self\">self\n            </span>.ind\n            .iter()\n            .map(|d| d.<span class=\"highlight focus\">pow</span>(k))\n            .enumerate()\n            .map(|(s, d)| <span class=\"kw\">if </span>s.count_ones() % <span class=\"number\">2 </span>== <span class=\"number\">0 </span>{ d } <span class=\"kw\">else </span>{ -d })\n            .sum::&lt;MInt&lt;M&gt;&gt;()\n            .is_zero()\n    }</code></pre></div></div></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inv\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#83-85\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.inv\" class=\"fn\">inv</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-2\"><a href=\"#scraped-examples-2\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example \" data-locs=\"[[[3,3],&quot;src/competitive/math/number_theoretic_transform.rs.html#286&quot;,&quot;line 286&quot;],[[85,85],&quot;src/competitive/math/number_theoretic_transform.rs.html#368&quot;,&quot;line 368&quot;],[[88,88],&quot;src/competitive/math/number_theoretic_transform.rs.html#371&quot;,&quot;line 371&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#286\">line 286</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>283</span>\n<span>284</span>\n<span>285</span>\n<span>286</span>\n<span>287</span>\n<span>288</span>\n<span>289</span>\n<span>290</span>\n<span>291</span>\n<span>292</span>\n<span>293</span>\n<span>294</span>\n<span>295</span>\n<span>296</span>\n<span>297</span>\n<span>298</span>\n<span>299</span>\n<span>300</span>\n<span>301</span>\n<span>302</span>\n<span>303</span>\n<span>304</span>\n<span>305</span>\n<span>306</span>\n<span>307</span>\n<span>308</span>\n<span>309</span>\n<span>310</span>\n<span>311</span>\n<span>312</span>\n<span>313</span>\n<span>314</span>\n<span>315</span>\n<span>316</span>\n<span>317</span>\n<span>318</span>\n<span>319</span>\n<span>320</span>\n<span>321</span>\n<span>322</span>\n<span>323</span>\n<span>324</span>\n<span>325</span>\n<span>326</span>\n<span>327</span>\n<span>328</span>\n<span>329</span>\n<span>330</span>\n<span>331</span>\n<span>332</span>\n<span>333</span>\n<span>334</span>\n<span>335</span>\n<span>336</span>\n<span>337</span>\n<span>338</span>\n<span>339</span>\n<span>340</span>\n<span>341</span>\n<span>342</span>\n<span>343</span>\n<span>344</span>\n<span>345</span>\n<span>346</span>\n<span>347</span>\n<span>348</span>\n<span>349</span>\n<span>350</span>\n<span>351</span>\n<span>352</span>\n<span>353</span>\n<span>354</span>\n<span>355</span>\n<span>356</span>\n<span>357</span>\n<span>358</span>\n<span>359</span>\n<span>360</span>\n<span>361</span>\n<span>362</span>\n<span>363</span>\n<span>364</span>\n<span>365</span>\n<span>366</span>\n<span>367</span>\n<span>368</span>\n<span>369</span>\n<span>370</span>\n<span>371</span>\n<span>372</span>\n<span>373</span>\n<span>374</span>\n<span>375</span>\n<span>376</span>\n<span>377</span>\n<span>378</span>\n<span>379</span>\n<span>380</span>\n<span>381</span>\n<span>382</span>\n<span>383</span>\n<span>384</span>\n<span>385</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">fn </span>inverse_transform(<span class=\"kw-2\">mut </span>f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n        intt(<span class=\"kw-2\">&amp;mut </span>f);\n        f.truncate(len);\n        <span class=\"kw\">let </span>inv = MInt::from(len.max(<span class=\"number\">2</span>).next_power_of_two() <span class=\"kw\">as </span>u32).<span class=\"highlight focus\">inv</span>();\n        <span class=\"kw\">for </span>f <span class=\"kw\">in </span>f.iter_mut() {\n            <span class=\"kw-2\">*</span>f <span class=\"kw-2\">*</span>= inv;\n        }\n        f\n    }\n    <span class=\"kw\">fn </span>multiply(f: <span class=\"kw-2\">&amp;mut </span><span class=\"self\">Self</span>::F, g: <span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span>::F) {\n        <span class=\"macro\">assert_eq!</span>(f.len(), g.len());\n        <span class=\"kw\">for </span>(f, g) <span class=\"kw\">in </span>f.iter_mut().zip(g.iter()) {\n            <span class=\"kw-2\">*</span>f <span class=\"kw-2\">*</span>= <span class=\"kw-2\">*</span>g;\n        }\n    }\n    <span class=\"kw\">fn </span>convolve(<span class=\"kw-2\">mut </span>a: <span class=\"self\">Self</span>::T, <span class=\"kw-2\">mut </span>b: <span class=\"self\">Self</span>::T) -&gt; <span class=\"self\">Self</span>::T {\n        <span class=\"kw\">if </span><span class=\"self\">Self</span>::length(<span class=\"kw-2\">&amp;</span>a).min(<span class=\"self\">Self</span>::length(<span class=\"kw-2\">&amp;</span>b)) &lt;= <span class=\"number\">60 </span>{\n            <span class=\"kw\">return </span>convolve_naive(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b);\n        }\n        <span class=\"kw\">let </span>len = (<span class=\"self\">Self</span>::length(<span class=\"kw-2\">&amp;</span>a) + <span class=\"self\">Self</span>::length(<span class=\"kw-2\">&amp;</span>b)).saturating_sub(<span class=\"number\">1</span>);\n        <span class=\"kw\">let </span>size = len.max(<span class=\"number\">2</span>).next_power_of_two();\n        <span class=\"kw\">if </span>len &lt;= size / <span class=\"number\">2 </span>+ <span class=\"number\">2 </span>{\n            <span class=\"kw\">let </span>xa = a.pop().unwrap();\n            <span class=\"kw\">let </span>xb = b.pop().unwrap();\n            <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>c = <span class=\"macro\">vec!</span>[MInt::&lt;M&gt;::zero(); len];\n            <span class=\"kw-2\">*</span>c.last_mut().unwrap() = xa * xb;\n            <span class=\"kw\">for </span>(a, c) <span class=\"kw\">in </span>a.iter().zip(<span class=\"kw-2\">&amp;mut </span>c[b.len()..]) {\n                <span class=\"kw-2\">*</span>c += <span class=\"kw-2\">*</span>a * xb;\n            }\n            <span class=\"kw\">for </span>(b, c) <span class=\"kw\">in </span>b.iter().zip(<span class=\"kw-2\">&amp;mut </span>c[a.len()..]) {\n                <span class=\"kw-2\">*</span>c += <span class=\"kw-2\">*</span>b * xa;\n            }\n            <span class=\"kw\">let </span>d = <span class=\"self\">Self</span>::convolve(a, b);\n            <span class=\"kw\">for </span>(d, c) <span class=\"kw\">in </span>d.into_iter().zip(<span class=\"kw-2\">&amp;mut </span>c) {\n                <span class=\"kw-2\">*</span>c += d;\n            }\n            <span class=\"kw\">return </span>c;\n        }\n        <span class=\"kw\">let </span>same = a == b;\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"self\">Self</span>::transform(a, len);\n        <span class=\"kw\">if </span>same {\n            <span class=\"kw\">for </span>a <span class=\"kw\">in </span>a.iter_mut() {\n                <span class=\"kw-2\">*</span>a <span class=\"kw-2\">*</span>= <span class=\"kw-2\">*</span>a;\n            }\n        } <span class=\"kw\">else </span>{\n            <span class=\"kw\">let </span>b = <span class=\"self\">Self</span>::transform(b, len);\n            <span class=\"self\">Self</span>::multiply(<span class=\"kw-2\">&amp;mut </span>a, <span class=\"kw-2\">&amp;</span>b);\n        }\n        <span class=\"self\">Self</span>::inverse_transform(a, len)\n    }\n}\n<span class=\"kw\">type </span>MVec&lt;M&gt; = Vec&lt;MInt&lt;M&gt;&gt;;\n<span class=\"kw\">impl</span>&lt;M, N1, N2, N3&gt; ConvolveSteps <span class=\"kw\">for </span>Convolve&lt;(M, (N1, N2, N3))&gt;\n<span class=\"kw\">where\n    </span>M: MIntConvert + MIntConvert&lt;u32&gt;,\n    N1: Montgomery32NttModulus,\n    N2: Montgomery32NttModulus,\n    N3: Montgomery32NttModulus,\n{\n    <span class=\"kw\">type </span>T = MVec&lt;M&gt;;\n    <span class=\"kw\">type </span>F = (MVec&lt;N1&gt;, MVec&lt;N2&gt;, MVec&lt;N3&gt;);\n    <span class=\"kw\">fn </span>length(t: <span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span>::T) -&gt; usize {\n        t.len()\n    }\n    <span class=\"kw\">fn </span>transform(t: <span class=\"self\">Self</span>::T, len: usize) -&gt; <span class=\"self\">Self</span>::F {\n        <span class=\"kw\">let </span>npot = len.max(<span class=\"number\">2</span>).next_power_of_two();\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>f = (\n            MVec::&lt;N1&gt;::with_capacity(npot),\n            MVec::&lt;N2&gt;::with_capacity(npot),\n            MVec::&lt;N3&gt;::with_capacity(npot),\n        );\n        <span class=\"kw\">for </span>t <span class=\"kw\">in </span>t {\n            f.<span class=\"number\">0</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n            f.<span class=\"number\">1</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n            f.<span class=\"number\">2</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.inner()).into());\n        }\n        f.<span class=\"number\">0</span>.resize_with(npot, Zero::zero);\n        f.<span class=\"number\">1</span>.resize_with(npot, Zero::zero);\n        f.<span class=\"number\">2</span>.resize_with(npot, Zero::zero);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">0</span>);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">1</span>);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">2</span>);\n        f\n    }\n    <span class=\"kw\">fn </span>inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n        <span class=\"kw\">let </span>t1 = MInt::&lt;N2&gt;::new(N1::get_mod()).<span class=\"highlight\">inv</span>();\n        <span class=\"kw\">let </span>m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n        <span class=\"kw\">let </span>m1_3 = MInt::&lt;N3&gt;::new(N1::get_mod());\n        <span class=\"kw\">let </span>t2 = (m1_3 * MInt::&lt;N3&gt;::new(N2::get_mod())).<span class=\"highlight\">inv</span>();\n        <span class=\"kw\">let </span>m2 = m1 * MInt::&lt;M&gt;::from(N2::get_mod());\n        Convolve::&lt;N1&gt;::inverse_transform(f.<span class=\"number\">0</span>, len)\n            .into_iter()\n            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.<span class=\"number\">1</span>, len))\n            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.<span class=\"number\">2</span>, len))\n            .map(|((c1, c2), c3)| {\n                <span class=\"kw\">let </span>d1 = c1.inner();\n                <span class=\"kw\">let </span>d2 = ((c2 - MInt::&lt;N2&gt;::from(d1)) * t1).inner();\n                <span class=\"kw\">let </span>x = MInt::&lt;N3&gt;::new(d1) + MInt::&lt;N3&gt;::new(d2) * m1_3;\n                <span class=\"kw\">let </span>d3 = ((c3 - x) * t2).inner();\n                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n            })\n            .collect()\n    }</code></pre></div></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example \" data-locs=\"[[[6,6],&quot;src/competitive/math/factorial.rs.html#24&quot;,&quot;line 24&quot;],[[81,81],&quot;src/competitive/math/factorial.rs.html#99&quot;,&quot;line 99&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/factorial.rs (<a href=\"src/competitive/math/factorial.rs.html#24\">line 24</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>18</span>\n<span>19</span>\n<span>20</span>\n<span>21</span>\n<span>22</span>\n<span>23</span>\n<span>24</span>\n<span>25</span>\n<span>26</span>\n<span>27</span>\n<span>28</span>\n<span>29</span>\n<span>30</span>\n<span>31</span>\n<span>32</span>\n<span>33</span>\n<span>34</span>\n<span>35</span>\n<span>36</span>\n<span>37</span>\n<span>38</span>\n<span>39</span>\n<span>40</span>\n<span>41</span>\n<span>42</span>\n<span>43</span>\n<span>44</span>\n<span>45</span>\n<span>46</span>\n<span>47</span>\n<span>48</span>\n<span>49</span>\n<span>50</span>\n<span>51</span>\n<span>52</span>\n<span>53</span>\n<span>54</span>\n<span>55</span>\n<span>56</span>\n<span>57</span>\n<span>58</span>\n<span>59</span>\n<span>60</span>\n<span>61</span>\n<span>62</span>\n<span>63</span>\n<span>64</span>\n<span>65</span>\n<span>66</span>\n<span>67</span>\n<span>68</span>\n<span>69</span>\n<span>70</span>\n<span>71</span>\n<span>72</span>\n<span>73</span>\n<span>74</span>\n<span>75</span>\n<span>76</span>\n<span>77</span>\n<span>78</span>\n<span>79</span>\n<span>80</span>\n<span>81</span>\n<span>82</span>\n<span>83</span>\n<span>84</span>\n<span>85</span>\n<span>86</span>\n<span>87</span>\n<span>88</span>\n<span>89</span>\n<span>90</span>\n<span>91</span>\n<span>92</span>\n<span>93</span>\n<span>94</span>\n<span>95</span>\n<span>96</span>\n<span>97</span>\n<span>98</span>\n<span>99</span>\n<span>100</span>\n<span>101</span>\n<span>102</span>\n<span>103</span>\n<span>104</span>\n<span>105</span>\n<span>106</span>\n<span>107</span>\n<span>108</span>\n<span>109</span>\n<span>110</span>\n<span>111</span>\n<span>112</span>\n<span>113</span>\n<span>114</span>\n<span>115</span>\n<span>116</span>\n<span>117</span>\n<span>118</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">pub fn </span>new(max_n: usize) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>fact = <span class=\"macro\">vec!</span>[MInt::one(); max_n + <span class=\"number\">1</span>];\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>inv_fact = <span class=\"macro\">vec!</span>[MInt::one(); max_n + <span class=\"number\">1</span>];\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">2</span>..=max_n {\n            fact[i] = fact[i - <span class=\"number\">1</span>] * MInt::from(i);\n        }\n        inv_fact[max_n] = fact[max_n].<span class=\"highlight focus\">inv</span>();\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span>(<span class=\"number\">3</span>..=max_n).rev() {\n            inv_fact[i - <span class=\"number\">1</span>] = inv_fact[i] * MInt::from(i);\n        }\n        <span class=\"self\">Self </span>{ fact, inv_fact }\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>combination(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize, r: usize) -&gt; MInt&lt;M&gt; {\n        <span class=\"macro\">debug_assert!</span>(n &lt; <span class=\"self\">self</span>.fact.len());\n        <span class=\"kw\">if </span>r &lt;= n {\n            <span class=\"self\">self</span>.fact[n] * <span class=\"self\">self</span>.inv_fact[r] * <span class=\"self\">self</span>.inv_fact[n - r]\n        } <span class=\"kw\">else </span>{\n            MInt::zero()\n        }\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>permutation(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize, r: usize) -&gt; MInt&lt;M&gt; {\n        <span class=\"macro\">debug_assert!</span>(n &lt; <span class=\"self\">self</span>.fact.len());\n        <span class=\"kw\">if </span>r &lt;= n {\n            <span class=\"self\">self</span>.fact[n] * <span class=\"self\">self</span>.inv_fact[n - r]\n        } <span class=\"kw\">else </span>{\n            MInt::zero()\n        }\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>homogeneous_product(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize, r: usize) -&gt; MInt&lt;M&gt; {\n        <span class=\"macro\">debug_assert!</span>(n + r &lt; <span class=\"self\">self</span>.fact.len() + <span class=\"number\">1</span>);\n        <span class=\"kw\">if </span>n == <span class=\"number\">0 </span>&amp;&amp; r == <span class=\"number\">0 </span>{\n            MInt::one()\n        } <span class=\"kw\">else </span>{\n            <span class=\"self\">self</span>.combination(n + r - <span class=\"number\">1</span>, r)\n        }\n    }\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">pub fn </span>inv(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize) -&gt; MInt&lt;M&gt; {\n        <span class=\"macro\">debug_assert!</span>(n &lt; <span class=\"self\">self</span>.fact.len());\n        <span class=\"macro\">debug_assert!</span>(n &gt; <span class=\"number\">0</span>);\n        <span class=\"self\">self</span>.inv_fact[n] * <span class=\"self\">self</span>.fact[n - <span class=\"number\">1</span>]\n    }\n}\n\n<span class=\"attr\">#[codesnip::entry(<span class=\"string\">&quot;SmallModMemorizedFactorial&quot;</span>, include(<span class=\"string\">&quot;MIntBase&quot;</span>, <span class=\"string\">&quot;prime_factors&quot;</span>))]\n#[derive(Clone, Debug)]\n</span><span class=\"kw\">pub struct </span>SmallModMemorizedFactorial&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntConvert&lt;usize&gt;,\n{\n    p: u32,\n    c: u32,\n    fact: Vec&lt;MInt&lt;M&gt;&gt;,\n    inv_fact: Vec&lt;MInt&lt;M&gt;&gt;,\n    pow: Vec&lt;MInt&lt;M&gt;&gt;,\n}\n<span class=\"attr\">#[codesnip::entry(<span class=\"string\">&quot;SmallModMemorizedFactorial&quot;</span>)]\n</span><span class=\"kw\">impl</span>&lt;M&gt; Default <span class=\"kw\">for </span>SmallModMemorizedFactorial&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntConvert&lt;usize&gt;,\n{\n    <span class=\"kw\">fn </span>default() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"kw\">let </span>m = M::mod_into();\n        <span class=\"kw\">let </span>pf = prime_factors(m <span class=\"kw\">as _</span>);\n        <span class=\"macro\">assert!</span>(pf.len() &lt;= <span class=\"number\">1</span>);\n        <span class=\"kw\">let </span>p = pf[<span class=\"number\">0</span>].<span class=\"number\">0 </span><span class=\"kw\">as </span>u32;\n        <span class=\"kw\">let </span>c = pf[<span class=\"number\">0</span>].<span class=\"number\">1</span>;\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>fact = <span class=\"macro\">vec!</span>[MInt::one(); m];\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>inv_fact = <span class=\"macro\">vec!</span>[MInt::one(); m];\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>pow = <span class=\"macro\">vec!</span>[MInt::one(); c <span class=\"kw\">as </span>usize];\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">2</span>..m {\n            fact[i] = fact[i - <span class=\"number\">1</span>]\n                * <span class=\"kw\">if </span>i <span class=\"kw\">as </span>u32 % p != <span class=\"number\">0 </span>{\n                    MInt::from(i)\n                } <span class=\"kw\">else </span>{\n                    MInt::one()\n                };\n        }\n        inv_fact[m - <span class=\"number\">1</span>] = fact[m - <span class=\"number\">1</span>].<span class=\"highlight\">inv</span>();\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span>(<span class=\"number\">3</span>..m).rev() {\n            inv_fact[i - <span class=\"number\">1</span>] = inv_fact[i]\n                * <span class=\"kw\">if </span>i <span class=\"kw\">as </span>u32 % p != <span class=\"number\">0 </span>{\n                    MInt::from(i)\n                } <span class=\"kw\">else </span>{\n                    MInt::one()\n                };\n        }\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">1</span>..c <span class=\"kw\">as </span>usize {\n            pow[i] = pow[i - <span class=\"number\">1</span>] * MInt::from(p <span class=\"kw\">as </span>usize);\n        }\n        <span class=\"self\">Self </span>{\n            p,\n            c,\n            fact,\n            inv_fact,\n            pow,\n        }\n    }</code></pre></div></div></div><div class=\"scraped-example \" data-locs=\"[[[28,28],&quot;src/competitive/math/lagrange_interpolation.rs.html#78&quot;,&quot;line 78&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/lagrange_interpolation.rs (<a href=\"src/competitive/math/lagrange_interpolation.rs.html#78\">line 78</a>)</div><div class=\"code-wrapper\"><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>50</span>\n<span>51</span>\n<span>52</span>\n<span>53</span>\n<span>54</span>\n<span>55</span>\n<span>56</span>\n<span>57</span>\n<span>58</span>\n<span>59</span>\n<span>60</span>\n<span>61</span>\n<span>62</span>\n<span>63</span>\n<span>64</span>\n<span>65</span>\n<span>66</span>\n<span>67</span>\n<span>68</span>\n<span>69</span>\n<span>70</span>\n<span>71</span>\n<span>72</span>\n<span>73</span>\n<span>74</span>\n<span>75</span>\n<span>76</span>\n<span>77</span>\n<span>78</span>\n<span>79</span>\n<span>80</span>\n<span>81</span>\n<span>82</span>\n<span>83</span>\n<span>84</span>\n<span>85</span>\n<span>86</span>\n<span>87</span>\n<span>88</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button><span class=\"kw\">pub fn </span>lagrange_interpolation_polynomial&lt;M&gt;(x: <span class=\"kw-2\">&amp;</span>[MInt&lt;M&gt;], y: <span class=\"kw-2\">&amp;</span>[MInt&lt;M&gt;]) -&gt; Vec&lt;MInt&lt;M&gt;&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">let </span>n = x.len() - <span class=\"number\">1</span>;\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>dp = <span class=\"macro\">vec!</span>[MInt::zero(); n + <span class=\"number\">2</span>];\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>ndp = <span class=\"macro\">vec!</span>[MInt::zero(); n + <span class=\"number\">2</span>];\n    dp[<span class=\"number\">0</span>] = -x[<span class=\"number\">0</span>];\n    dp[<span class=\"number\">1</span>] = MInt::one();\n    <span class=\"kw\">for </span>x <span class=\"kw\">in </span>x.iter().skip(<span class=\"number\">1</span>) {\n        <span class=\"kw\">for </span>j <span class=\"kw\">in </span><span class=\"number\">0</span>..=n + <span class=\"number\">1 </span>{\n            ndp[j] = -dp[j] * x + <span class=\"kw\">if </span>j &gt;= <span class=\"number\">1 </span>{ dp[j - <span class=\"number\">1</span>] } <span class=\"kw\">else </span>{ MInt::zero() };\n        }\n        std::mem::swap(<span class=\"kw-2\">&amp;mut </span>dp, <span class=\"kw-2\">&amp;mut </span>ndp);\n    }\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>res = <span class=\"macro\">vec!</span>[MInt::zero(); n + <span class=\"number\">1</span>];\n    <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..=n {\n        <span class=\"kw\">let </span>t = y[i]\n            / (<span class=\"number\">0</span>..=n)\n                .map(|j| <span class=\"kw\">if </span>i != j { x[i] - x[j] } <span class=\"kw\">else </span>{ MInt::one() })\n                .product::&lt;MInt&lt;M&gt;&gt;();\n        <span class=\"kw\">if </span>t.is_zero() {\n            <span class=\"kw\">continue</span>;\n        } <span class=\"kw\">else if </span>x[i].is_zero() {\n            <span class=\"kw\">for </span>j <span class=\"kw\">in </span><span class=\"number\">0</span>..=n {\n                res[j] += dp[j + <span class=\"number\">1</span>] * t;\n            }\n        } <span class=\"kw\">else </span>{\n            <span class=\"kw\">let </span>xinv = x[i].<span class=\"highlight focus\">inv</span>();\n            <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>pre = MInt::zero();\n            <span class=\"kw\">for </span>j <span class=\"kw\">in </span><span class=\"number\">0</span>..=n {\n                <span class=\"kw\">let </span>d = -(dp[j] - pre) * xinv;\n                res[j] += d * t;\n                pre = d;\n            }\n        }\n    }\n    res\n}</code></pre></div></div></div></div></details></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#87-89\">source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/num/struct.MInt.html#tymethod.inner\" class=\"fn\">inner</a>(self) -&gt; M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a></h4></section></summary><div class=\"docblock scraped-example-list\"><span></span><h5 id=\"scraped-examples-3\"><a href=\"#scraped-examples-3\">Examples found in repository</a><a class=\"scrape-help\" href=\"scrape-examples-help.html\">?</a></h5><div class=\"scraped-example \" data-locs=\"[[[1,1],&quot;src/competitive/num/mint/mint_base.rs.html#107&quot;,&quot;line 107&quot;],[[166,166],&quot;src/competitive/num/mint/mint_base.rs.html#272&quot;,&quot;line 272&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/num/mint/mint_base.rs (<a href=\"src/competitive/num/mint/mint_base.rs.html#107\">line 107</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>106</span>\n<span>107</span>\n<span>108</span>\n<span>109</span>\n<span>110</span>\n<span>111</span>\n<span>112</span>\n<span>113</span>\n<span>114</span>\n<span>115</span>\n<span>116</span>\n<span>117</span>\n<span>118</span>\n<span>119</span>\n<span>120</span>\n<span>121</span>\n<span>122</span>\n<span>123</span>\n<span>124</span>\n<span>125</span>\n<span>126</span>\n<span>127</span>\n<span>128</span>\n<span>129</span>\n<span>130</span>\n<span>131</span>\n<span>132</span>\n<span>133</span>\n<span>134</span>\n<span>135</span>\n<span>136</span>\n<span>137</span>\n<span>138</span>\n<span>139</span>\n<span>140</span>\n<span>141</span>\n<span>142</span>\n<span>143</span>\n<span>144</span>\n<span>145</span>\n<span>146</span>\n<span>147</span>\n<span>148</span>\n<span>149</span>\n<span>150</span>\n<span>151</span>\n<span>152</span>\n<span>153</span>\n<span>154</span>\n<span>155</span>\n<span>156</span>\n<span>157</span>\n<span>158</span>\n<span>159</span>\n<span>160</span>\n<span>161</span>\n<span>162</span>\n<span>163</span>\n<span>164</span>\n<span>165</span>\n<span>166</span>\n<span>167</span>\n<span>168</span>\n<span>169</span>\n<span>170</span>\n<span>171</span>\n<span>172</span>\n<span>173</span>\n<span>174</span>\n<span>175</span>\n<span>176</span>\n<span>177</span>\n<span>178</span>\n<span>179</span>\n<span>180</span>\n<span>181</span>\n<span>182</span>\n<span>183</span>\n<span>184</span>\n<span>185</span>\n<span>186</span>\n<span>187</span>\n<span>188</span>\n<span>189</span>\n<span>190</span>\n<span>191</span>\n<span>192</span>\n<span>193</span>\n<span>194</span>\n<span>195</span>\n<span>196</span>\n<span>197</span>\n<span>198</span>\n<span>199</span>\n<span>200</span>\n<span>201</span>\n<span>202</span>\n<span>203</span>\n<span>204</span>\n<span>205</span>\n<span>206</span>\n<span>207</span>\n<span>208</span>\n<span>209</span>\n<span>210</span>\n<span>211</span>\n<span>212</span>\n<span>213</span>\n<span>214</span>\n<span>215</span>\n<span>216</span>\n<span>217</span>\n<span>218</span>\n<span>219</span>\n<span>220</span>\n<span>221</span>\n<span>222</span>\n<span>223</span>\n<span>224</span>\n<span>225</span>\n<span>226</span>\n<span>227</span>\n<span>228</span>\n<span>229</span>\n<span>230</span>\n<span>231</span>\n<span>232</span>\n<span>233</span>\n<span>234</span>\n<span>235</span>\n<span>236</span>\n<span>237</span>\n<span>238</span>\n<span>239</span>\n<span>240</span>\n<span>241</span>\n<span>242</span>\n<span>243</span>\n<span>244</span>\n<span>245</span>\n<span>246</span>\n<span>247</span>\n<span>248</span>\n<span>249</span>\n<span>250</span>\n<span>251</span>\n<span>252</span>\n<span>253</span>\n<span>254</span>\n<span>255</span>\n<span>256</span>\n<span>257</span>\n<span>258</span>\n<span>259</span>\n<span>260</span>\n<span>261</span>\n<span>262</span>\n<span>263</span>\n<span>264</span>\n<span>265</span>\n<span>266</span>\n<span>267</span>\n<span>268</span>\n<span>269</span>\n<span>270</span>\n<span>271</span>\n<span>272</span>\n<span>273</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">&#39;_</span>&gt;) -&gt; fmt::Result {\n        Debug::fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.<span class=\"highlight focus\">inner</span>(), f)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Default <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>default() -&gt; <span class=\"self\">Self </span>{\n        &lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>Zero&gt;::zero()\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; PartialEq <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>eq(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, other: <span class=\"kw-2\">&amp;</span><span class=\"self\">Self</span>) -&gt; bool {\n        PartialEq::eq(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.x, <span class=\"kw-2\">&amp;</span>other.x)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Eq <span class=\"kw\">for </span>MInt&lt;M&gt; <span class=\"kw\">where </span>M: MIntBase {}\n<span class=\"kw\">impl</span>&lt;M&gt; Hash <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>hash&lt;H: Hasher&gt;(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, state: <span class=\"kw-2\">&amp;mut </span>H) {\n        Hash::hash(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>.x, state)\n    }\n}\n<span class=\"macro\">macro_rules! </span>impl_mint_from {\n    ($(<span class=\"macro-nonterminal\">$t</span>:ty),<span class=\"kw-2\">*</span>) =&gt; {\n        $(<span class=\"kw\">impl</span>&lt;M&gt; From&lt;<span class=\"macro-nonterminal\">$t</span>&gt; <span class=\"kw\">for </span>MInt&lt;M&gt;\n        <span class=\"kw\">where\n            </span>M: MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;,\n        {\n            <span class=\"attr\">#[inline]\n            </span><span class=\"kw\">fn </span>from(x: <span class=\"macro-nonterminal\">$t</span>) -&gt; <span class=\"self\">Self </span>{\n                <span class=\"self\">Self</span>::new_unchecked(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;&gt;::from(x))\n            }\n        }\n        <span class=\"kw\">impl</span>&lt;M&gt; From&lt;MInt&lt;M&gt;&gt; <span class=\"kw\">for </span><span class=\"macro-nonterminal\">$t\n        </span><span class=\"kw\">where\n            </span>M: MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;,\n        {\n            <span class=\"attr\">#[inline]\n            </span><span class=\"kw\">fn </span>from(x: MInt&lt;M&gt;) -&gt; <span class=\"macro-nonterminal\">$t </span>{\n                &lt;M <span class=\"kw\">as </span>MIntConvert&lt;<span class=\"macro-nonterminal\">$t</span>&gt;&gt;::into(x.x)\n            }\n        })*\n    };\n}\n<span class=\"macro\">impl_mint_from!</span>(u8, u16, u32, u64, u128, usize, i8, i16, i32, i64, i128, isize);\n<span class=\"kw\">impl</span>&lt;M&gt; Zero <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>zero() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_zero())\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; One <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>one() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_one())\n    }\n}\n\n<span class=\"kw\">impl</span>&lt;M&gt; Add <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>add(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_add(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Sub <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>sub(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_sub(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Mul <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>mul(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_mul(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Div <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>div(<span class=\"self\">self</span>, rhs: <span class=\"self\">Self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_div(<span class=\"self\">self</span>.x, rhs.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Neg <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"kw\">type </span>Output = <span class=\"self\">Self</span>;\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>neg(<span class=\"self\">self</span>) -&gt; <span class=\"self\">Self</span>::Output {\n        <span class=\"self\">Self</span>::new_unchecked(M::mod_neg(<span class=\"self\">self</span>.x))\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Sum <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>sum&lt;I: Iterator&lt;Item = <span class=\"self\">Self</span>&gt;&gt;(iter: I) -&gt; <span class=\"self\">Self </span>{\n        iter.fold(&lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>Zero&gt;::zero(), Add::add)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Product <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>product&lt;I: Iterator&lt;Item = <span class=\"self\">Self</span>&gt;&gt;(iter: I) -&gt; <span class=\"self\">Self </span>{\n        iter.fold(&lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>One&gt;::one(), Mul::mul)\n    }\n}\n<span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">&#39;a</span>, M: <span class=\"lifetime\">&#39;a</span>&gt; Sum&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">&#39;a </span>MInt&lt;M&gt;&gt; <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>sum&lt;I: Iterator&lt;Item = <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">&#39;a </span><span class=\"self\">Self</span>&gt;&gt;(iter: I) -&gt; <span class=\"self\">Self </span>{\n        iter.fold(&lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>Zero&gt;::zero(), Add::add)\n    }\n}\n<span class=\"kw\">impl</span>&lt;<span class=\"lifetime\">&#39;a</span>, M: <span class=\"lifetime\">&#39;a</span>&gt; Product&lt;<span class=\"kw-2\">&amp;</span><span class=\"lifetime\">&#39;a </span>MInt&lt;M&gt;&gt; <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n{\n    <span class=\"attr\">#[inline]\n    </span><span class=\"kw\">fn </span>product&lt;I: Iterator&lt;Item = <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">&#39;a </span><span class=\"self\">Self</span>&gt;&gt;(iter: I) -&gt; <span class=\"self\">Self </span>{\n        iter.fold(&lt;<span class=\"self\">Self </span><span class=\"kw\">as </span>One&gt;::one(), Mul::mul)\n    }\n}\n<span class=\"kw\">impl</span>&lt;M&gt; Display <span class=\"kw\">for </span>MInt&lt;M&gt;\n<span class=\"kw\">where\n    </span>M: MIntBase,\n    M::Inner: Display,\n{\n    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">&#39;_</span>&gt;) -&gt; <span class=\"prelude-ty\">Result</span>&lt;(), fmt::Error&gt; {\n        <span class=\"macro\">write!</span>(f, <span class=\"string\">&quot;{}&quot;</span>, <span class=\"self\">self</span>.<span class=\"highlight\">inner</span>())\n    }</code></pre></div></div></div><details class=\"toggle more-examples-toggle\"><summary class=\"hideme\"><span>More examples</span></summary><div class=\"hide-more\">Hide additional examples</div><div class=\"more-scraped-examples\"><div class=\"toggle-line\"><div class=\"toggle-line-inner\"></div></div><div class=\"scraped-example \" data-locs=\"[[[8,8],&quot;src/competitive/math/number_theoretic_transform.rs.html#355&quot;,&quot;line 355&quot;],[[9,9],&quot;src/competitive/math/number_theoretic_transform.rs.html#356&quot;,&quot;line 356&quot;],[[10,10],&quot;src/competitive/math/number_theoretic_transform.rs.html#357&quot;,&quot;line 357&quot;],[[31,31],&quot;src/competitive/math/number_theoretic_transform.rs.html#378&quot;,&quot;line 378&quot;],[[32,32],&quot;src/competitive/math/number_theoretic_transform.rs.html#379&quot;,&quot;line 379&quot;],[[34,34],&quot;src/competitive/math/number_theoretic_transform.rs.html#381&quot;,&quot;line 381&quot;]]\"><div class=\"scraped-example-title\">crates/competitive/src/math/number_theoretic_transform.rs (<a href=\"src/competitive/math/number_theoretic_transform.rs.html#355\">line 355</a>)</div><div class=\"code-wrapper\"><button class=\"prev\">&pr;</button> <button class=\"next\">&sc;</button><div class=\"example-wrap\"><div data-nosnippet><pre class=\"src-line-numbers\"><span>347</span>\n<span>348</span>\n<span>349</span>\n<span>350</span>\n<span>351</span>\n<span>352</span>\n<span>353</span>\n<span>354</span>\n<span>355</span>\n<span>356</span>\n<span>357</span>\n<span>358</span>\n<span>359</span>\n<span>360</span>\n<span>361</span>\n<span>362</span>\n<span>363</span>\n<span>364</span>\n<span>365</span>\n<span>366</span>\n<span>367</span>\n<span>368</span>\n<span>369</span>\n<span>370</span>\n<span>371</span>\n<span>372</span>\n<span>373</span>\n<span>374</span>\n<span>375</span>\n<span>376</span>\n<span>377</span>\n<span>378</span>\n<span>379</span>\n<span>380</span>\n<span>381</span>\n<span>382</span>\n<span>383</span>\n<span>384</span>\n<span>385</span>\n</pre></div><pre class=\"rust\"><code><button class=\"expand\">&varr;</button>    <span class=\"kw\">fn </span>transform(t: <span class=\"self\">Self</span>::T, len: usize) -&gt; <span class=\"self\">Self</span>::F {\n        <span class=\"kw\">let </span>npot = len.max(<span class=\"number\">2</span>).next_power_of_two();\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>f = (\n            MVec::&lt;N1&gt;::with_capacity(npot),\n            MVec::&lt;N2&gt;::with_capacity(npot),\n            MVec::&lt;N3&gt;::with_capacity(npot),\n        );\n        <span class=\"kw\">for </span>t <span class=\"kw\">in </span>t {\n            f.<span class=\"number\">0</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.<span class=\"highlight focus\">inner</span>()).into());\n            f.<span class=\"number\">1</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.<span class=\"highlight\">inner</span>()).into());\n            f.<span class=\"number\">2</span>.push(&lt;M <span class=\"kw\">as </span>MIntConvert&lt;u32&gt;&gt;::into(t.<span class=\"highlight\">inner</span>()).into());\n        }\n        f.<span class=\"number\">0</span>.resize_with(npot, Zero::zero);\n        f.<span class=\"number\">1</span>.resize_with(npot, Zero::zero);\n        f.<span class=\"number\">2</span>.resize_with(npot, Zero::zero);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">0</span>);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">1</span>);\n        ntt(<span class=\"kw-2\">&amp;mut </span>f.<span class=\"number\">2</span>);\n        f\n    }\n    <span class=\"kw\">fn </span>inverse_transform(f: <span class=\"self\">Self</span>::F, len: usize) -&gt; <span class=\"self\">Self</span>::T {\n        <span class=\"kw\">let </span>t1 = MInt::&lt;N2&gt;::new(N1::get_mod()).inv();\n        <span class=\"kw\">let </span>m1 = MInt::&lt;M&gt;::from(N1::get_mod());\n        <span class=\"kw\">let </span>m1_3 = MInt::&lt;N3&gt;::new(N1::get_mod());\n        <span class=\"kw\">let </span>t2 = (m1_3 * MInt::&lt;N3&gt;::new(N2::get_mod())).inv();\n        <span class=\"kw\">let </span>m2 = m1 * MInt::&lt;M&gt;::from(N2::get_mod());\n        Convolve::&lt;N1&gt;::inverse_transform(f.<span class=\"number\">0</span>, len)\n            .into_iter()\n            .zip(Convolve::&lt;N2&gt;::inverse_transform(f.<span class=\"number\">1</span>, len))\n            .zip(Convolve::&lt;N3&gt;::inverse_transform(f.<span class=\"number\">2</span>, len))\n            .map(|((c1, c2), c3)| {\n                <span class=\"kw\">let </span>d1 = c1.<span class=\"highlight\">inner</span>();\n                <span class=\"kw\">let </span>d2 = ((c2 - MInt::&lt;N2&gt;::from(d1)) * t1).<span class=\"highlight\">inner</span>();\n                <span class=\"kw\">let </span>x = MInt::&lt;N3&gt;::new(d1) + MInt::&lt;N3&gt;::new(d2) * m1_3;\n                <span class=\"kw\">let </span>d3 = ((c3 - x) * t2).<span class=\"highlight\">inner</span>();\n                MInt::&lt;M&gt;::from(d1) + MInt::&lt;M&gt;::from(d2) * m1 + MInt::&lt;M&gt;::from(d3) * m2\n            })\n            .collect()\n    }</code></pre></div></div></div></div></details></div></details></div></details>",0,"competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#372\">source</a><a href=\"#impl-AddAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#372\">source</a><a href=\"#method.add_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cu8%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u8>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#92-100\">source</a><a href=\"#impl-Clone-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#97-99\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#257-265\">source</a><a href=\"#impl-Product%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a> + 'a,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#262-264\">source</a><a href=\"#method.product\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a Self</a>&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cu128%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#373\">source</a><a href=\"#impl-SubAssign-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#373\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#239-247\">source</a><a href=\"#impl-Product-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#244-246\">source</a><a href=\"#method.product\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cu16%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#332\">source</a><a href=\"#impl-Sub%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#332\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#374\">source</a><a href=\"#impl-MulAssign-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#374\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#119-127\">source</a><a href=\"#impl-PartialEq-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#124-126\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cusize%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cisize%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cisize%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<isize>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#110-118\">source</a><a href=\"#impl-Default-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#115-117\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci8%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Ci8%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i8>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-Eq-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#128\">source</a><a href=\"#impl-Eq-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section>","Eq","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#180-189\">source</a><a href=\"#impl-Add-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#186-188\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#373\">source</a><a href=\"#impl-SubAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#373\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#375\">source</a><a href=\"#impl-DivAssign-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#375\">source</a><a href=\"#method.div_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#102-109\">source</a><a href=\"#impl-Debug-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#106-108\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-Copy-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#101\">source</a><a href=\"#impl-Copy-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section>","Copy","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#129-137\">source</a><a href=\"#impl-Hash-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#134-136\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#331\">source</a><a href=\"#impl-Add%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#331\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cu64%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#200-209\">source</a><a href=\"#impl-Mul-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#206-208\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#210-219\">source</a><a href=\"#impl-Div-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#216-218\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#375\">source</a><a href=\"#impl-DivAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#375\">source</a><a href=\"#method.div_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Ci32%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i32>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci128%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Ci128%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i128>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#161-169\">source</a><a href=\"#impl-Zero-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/num/trait.Zero.html\" title=\"trait competitive::num::Zero\">Zero</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#166-168\">source</a><a href=\"#method.zero\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#4-9\">source</a><a href=\"#method.is_zero\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#method.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h4></section><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#11-13\">source</a><a href=\"#method.set_zero\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></div></details>","Zero","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci64%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Ci64%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i64>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#170-178\">source</a><a href=\"#impl-One-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/num/trait.One.html\" title=\"trait competitive::num::One\">One</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#175-177\">source</a><a href=\"#method.one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#18-23\">source</a><a href=\"#method.is_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h4></section><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/zero_one.rs.html#25-27\">source</a><a href=\"#method.set_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/num/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></div></details>","One","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci16%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Ci16%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<i16>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FormalPowerSeriesCoefficientSqrt-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#62-69\">source</a><a href=\"#impl-FormalPowerSeriesCoefficientSqrt-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/math/trait.FormalPowerSeriesCoefficientSqrt.html\" title=\"trait competitive::math::FormalPowerSeriesCoefficientSqrt\">FormalPowerSeriesCoefficientSqrt</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; + <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.sqrt_coefficient\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#66-68\">source</a><a href=\"#method.sqrt_coefficient\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/math/trait.FormalPowerSeriesCoefficientSqrt.html#tymethod.sqrt_coefficient\" class=\"fn\">sqrt_coefficient</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></div></details>","FormalPowerSeriesCoefficientSqrt","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<section id=\"impl-FormalPowerSeriesCoefficient-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/math/formal_power_series/mod.rs.html#56\">source</a><a href=\"#impl-FormalPowerSeriesCoefficient-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/math/trait.FormalPowerSeriesCoefficient.html\" title=\"trait competitive::math::FormalPowerSeriesCoefficient\">FormalPowerSeriesCoefficient</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</span></h3></section>","FormalPowerSeriesCoefficient","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#230-238\">source</a><a href=\"#impl-Sum-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#235-237\">source</a><a href=\"#method.sum\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nโsumming upโ the items.</div></details></div></details>","Sum","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#275-285\">source</a><a href=\"#impl-FromStr-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = &lt;&lt;M as <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>&gt;::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#282-284\">source</a><a href=\"#method.from_str\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#248-256\">source</a><a href=\"#impl-Sum%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a> + 'a,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#253-255\">source</a><a href=\"#method.sum\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a Self</a>&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nโsumming upโ the items.</div></details></div></details>","Sum<&'a MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#impl-From%3Cu32%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#160\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u32>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#333\">source</a><a href=\"#impl-Mul%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#333\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#334\">source</a><a href=\"#impl-Div%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#334\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;) -&gt; &lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#372\">source</a><a href=\"#impl-AddAssign-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#372\">source</a><a href=\"#method.add_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#190-199\">source</a><a href=\"#impl-Sub-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#196-198\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IterScan-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#286-296\">source</a><a href=\"#impl-IterScan-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"competitive/tools/trait.IterScan.html\" title=\"trait competitive::tools::IterScan\">IterScan</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntConvert.html\" title=\"trait competitive::num::MIntConvert\">MIntConvert</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"competitive/tools/trait.IterScan.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section><section id=\"method.scan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#293-295\">source</a><a href=\"#method.scan\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"competitive/tools/trait.IterScan.html#tymethod.scan\" class=\"fn\">scan</a>&lt;'a, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;(iter: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"competitive/tools/trait.IterScan.html#associatedtype.Output\" title=\"type competitive::tools::IterScan::Output\">Output</a>&gt;</h4></section></div></details>","IterScan","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#266-274\">source</a><a href=\"#impl-Display-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/num/trait.MIntBase.html#associatedtype.Inner\" title=\"type competitive::num::MIntBase::Inner\">Inner</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#271-273\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#220-229\">source</a><a href=\"#impl-Neg-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#226-228\">source</a><a href=\"#method.neg\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#374\">source</a><a href=\"#impl-MulAssign%3C%26MInt%3CM%3E%3E-for-MInt%3CM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;&gt; for <a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"competitive/num/trait.MIntBase.html\" title=\"trait competitive::num::MIntBase\">MIntBase</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/num/mint/mint_base.rs.html#374\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"competitive/num/struct.MInt.html\" title=\"struct competitive::num::MInt\">MInt</a>&lt;M&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&MInt<M>>","competitive::num::mint::mint_basic::MInt998244353","competitive::num::mint::mint_basic::MInt1000000007","competitive::num::mint::mint_basic::MInt1000000009","competitive::num::mint::mint_basic::DynMIntU32","competitive::num::mint::mint_basic::DynMIntU64","competitive::num::mint::mint_basic::MInt2","competitive::num::mint::montgomery::MInt998244353","competitive::num::mint::montgomery::MInt2113929217","competitive::num::mint::montgomery::MInt1811939329","competitive::num::mint::montgomery::MInt2013265921"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()