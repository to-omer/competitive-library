(function() {
    var type_impls = Object.fromEntries([["competitive",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#23-42\">Source</a><a href=\"#impl-Clone-for-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, M, P, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, M, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, M, P&gt;&gt;,\n    U::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html#associatedtype.Info\" title=\"type competitive::data_structure::union_find::UnionStrategy::Info\">Info</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html#associatedtype.Data\" title=\"type competitive::data_structure::union_find::UfMergeSpec::Data\">Data</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html#associatedtype.History\" title=\"type competitive::data_structure::union_find::UndoStrategy::History\">History</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#34-41\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::MergingUnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#44-62\">Source</a><a href=\"#impl-Debug-for-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, M, P, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, M, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, M, P&gt;&gt;,\n    U::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html#associatedtype.Info\" title=\"type competitive::data_structure::union_find::UnionStrategy::Info\">Info</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    M::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html#associatedtype.Data\" title=\"type competitive::data_structure::union_find::UfMergeSpec::Data\">Data</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    P::<a class=\"associatedtype\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    H::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html#associatedtype.History\" title=\"type competitive::data_structure::union_find::UndoStrategy::History\">History</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#56-61\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::MergingUnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CU,+(),+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#491-501\">Source</a><a href=\"#impl-UnionFindBase%3CU,+(),+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, M, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, M, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, M, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.undo\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#498-500\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.undo\" class=\"fn\">undo</a>(&amp;mut self)</h4></section></div></details>",0,"competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CU,+F,+(),+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#268-289\">Source</a><a href=\"#impl-UnionFindBase%3CU,+F,+(),+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#275-285\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#286-288\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self)</h4></section></div></details>",0,"competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CU,+F,+FnMerger%3CT,+Merge%3E,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#291-313\">Source</a><a href=\"#impl-UnionFindBase%3CU,+F,+FnMerger%3CT,+Merge%3E,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, T, Merge, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.FnMerger.html\" title=\"struct competitive::data_structure::union_find::FnMerger\">FnMerger</a>&lt;T, Merge&gt;, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    Merge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>),\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.FnMerger.html\" title=\"struct competitive::data_structure::union_find::FnMerger\">FnMerger</a>&lt;T, Merge&gt;, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new_with_merger\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#299-312\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.new_with_merger\" class=\"fn\">new_with_merger</a>(\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    init: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T,\n    merge: Merge,\n) -&gt; Self</h4></section></div></details>",0,"competitive::data_structure::union_find::MergingUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#328-436\">Source</a><a href=\"#impl-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, M, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, M, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, M, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.same\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#350-352\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.same\" class=\"fn\">same</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.merge_data\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#354-360\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.merge_data\" class=\"fn\">merge_data</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;M::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html#associatedtype.Data\" title=\"type competitive::data_structure::union_find::UfMergeSpec::Data\">Data</a></h4></section><section id=\"method.merge_data_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#362-368\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.merge_data_mut\" class=\"fn\">merge_data_mut</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;mut M::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html#associatedtype.Data\" title=\"type competitive::data_structure::union_find::UfMergeSpec::Data\">Data</a></h4></section><section id=\"method.roots\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#370-372\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.roots\" class=\"fn\">roots</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; + '_</h4></section><section id=\"method.all_group_members\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#374-381\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.all_group_members\" class=\"fn\">all_group_members</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section><section id=\"method.find\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#383-397\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.find\" class=\"fn\">find</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, P::<a class=\"associatedtype\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>)</h4></section><section id=\"method.find_root\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#399-416\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.find_root\" class=\"fn\">find_root</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.unite_noninv\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#418-435\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.unite_noninv\" class=\"fn\">unite_noninv</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, potential: P::<a class=\"associatedtype\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::MergingUnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#438-489\">Source</a><a href=\"#impl-UnionFindBase%3CU,+F,+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, F, M, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;U, F, M, P, H&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>,\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Group.html\" title=\"trait competitive::algebra::Group\">Group</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;U, M, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#446-454\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.difference\" class=\"fn\">difference</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P::<a class=\"associatedtype\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>&gt;</h4></section><section id=\"method.unite_with\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#456-484\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.unite_with\" class=\"fn\">unite_with</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, potential: P::<a class=\"associatedtype\" href=\"competitive/algebra/trait.Magma.html#associatedtype.T\" title=\"type competitive::algebra::Magma::T\">T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.unite\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#486-488\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.unite\" class=\"fn\">unite</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::MergingUnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFindBase%3CUnionBySize,+F,+M,+P,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#315-326\">Source</a><a href=\"#impl-UnionFindBase%3CUnionBySize,+F,+M,+P,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, M, P, H&gt; <a class=\"struct\" href=\"competitive/data_structure/union_find/struct.UnionFindBase.html\" title=\"struct competitive::data_structure::union_find::UnionFindBase\">UnionFindBase</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UnionBySize.html\" title=\"enum competitive::data_structure::union_find::UnionBySize\">UnionBySize</a>, F, M, P, H&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.FindStrategy.html\" title=\"trait competitive::data_structure::union_find::FindStrategy\">FindStrategy</a>,\n    M: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UfMergeSpec.html\" title=\"trait competitive::data_structure::union_find::UfMergeSpec\">UfMergeSpec</a>,\n    P: <a class=\"trait\" href=\"competitive/algebra/trait.Monoid.html\" title=\"trait competitive::algebra::Monoid\">Monoid</a>,\n    H: <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UndoStrategy.html\" title=\"trait competitive::data_structure::union_find::UndoStrategy\">UndoStrategy</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UfCell.html\" title=\"enum competitive::data_structure::union_find::UfCell\">UfCell</a>&lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UnionBySize.html\" title=\"enum competitive::data_structure::union_find::UnionBySize\">UnionBySize</a>, M, P&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.size\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/data_structure/union_find.rs.html#322-325\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/data_structure/union_find/struct.UnionFindBase.html#tymethod.size\" class=\"fn\">size</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"enum\" href=\"competitive/data_structure/union_find/enum.UnionBySize.html\" title=\"enum competitive::data_structure::union_find::UnionBySize\">UnionBySize</a> as <a class=\"trait\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html\" title=\"trait competitive::data_structure::union_find::UnionStrategy\">UnionStrategy</a>&gt;::<a class=\"associatedtype\" href=\"competitive/data_structure/union_find/trait.UnionStrategy.html#associatedtype.Info\" title=\"type competitive::data_structure::union_find::UnionStrategy::Info\">Info</a></h4></section></div></details>",0,"competitive::data_structure::union_find::UnionFind","competitive::data_structure::union_find::MergingUnionFind","competitive::data_structure::union_find::PotentializedUnionFind","competitive::data_structure::union_find::UndoableUnionFind"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[31819]}