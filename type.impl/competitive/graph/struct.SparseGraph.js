(function() {
    var type_impls = Object.fromEntries([["competitive",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Adjacencies-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#304-315\">Source</a><a href=\"#impl-Adjacencies-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.Adjacencies.html\" title=\"trait competitive::graph::Adjacencies\">Adjacencies</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.AIndex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#305\">Source</a><a href=\"#associatedtype.AIndex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.Adjacencies.html#associatedtype.AIndex\" class=\"associatedtype\">AIndex</a> = <a class=\"struct\" href=\"competitive/graph/struct.Adjacency.html\" title=\"struct competitive::graph::Adjacency\">Adjacency</a></h4></section><section id=\"associatedtype.AIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#306-309\">Source</a><a href=\"#associatedtype.AIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.Adjacencies.html#associatedtype.AIter\" class=\"associatedtype\">AIter</a>&lt;'g&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'g, <a class=\"struct\" href=\"competitive/graph/struct.Adjacency.html\" title=\"struct competitive::graph::Adjacency\">Adjacency</a>&gt;&gt;\n<span class=\"where\">where\n    D: 'g</span></h4></section><section id=\"method.adjacencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#310-314\">Source</a><a href=\"#method.adjacencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.Adjacencies.html#tymethod.adjacencies\" class=\"fn\">adjacencies</a>(&amp;self, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.Adjacencies.html#associatedtype.AIter\" title=\"type competitive::graph::Adjacencies::AIter\">AIter</a>&lt;'_&gt;</h4></section></div></details>","Adjacencies","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdjacenciesWithEindex-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#316-327\">Source</a><a href=\"#impl-AdjacenciesWithEindex-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.AdjacenciesWithEindex.html\" title=\"trait competitive::graph::AdjacenciesWithEindex\">AdjacenciesWithEindex</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.AIndex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#317\">Source</a><a href=\"#associatedtype.AIndex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.AdjacenciesWithEindex.html#associatedtype.AIndex\" class=\"associatedtype\">AIndex</a> = <a class=\"struct\" href=\"competitive/graph/struct.Adjacency.html\" title=\"struct competitive::graph::Adjacency\">Adjacency</a></h4></section><section id=\"associatedtype.AIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#318-321\">Source</a><a href=\"#associatedtype.AIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.AdjacenciesWithEindex.html#associatedtype.AIter\" class=\"associatedtype\">AIter</a>&lt;'g&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'g, <a class=\"struct\" href=\"competitive/graph/struct.Adjacency.html\" title=\"struct competitive::graph::Adjacency\">Adjacency</a>&gt;&gt;\n<span class=\"where\">where\n    D: 'g</span></h4></section><section id=\"method.adjacencies_with_eindex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#322-326\">Source</a><a href=\"#method.adjacencies_with_eindex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.AdjacenciesWithEindex.html#tymethod.adjacencies_with_eindex\" class=\"fn\">adjacencies_with_eindex</a>(&amp;self, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.AdjacenciesWithEindex.html#associatedtype.AIter\" title=\"type competitive::graph::AdjacenciesWithEindex::AIter\">AIter</a>&lt;'_&gt;</h4></section></div></details>","AdjacenciesWithEindex","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdjacencyView%3C'a,+M,+T%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#420-433\">Source</a><a href=\"#impl-AdjacencyView%3C'a,+M,+T%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, D, M, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.AdjacencyView.html\" title=\"trait competitive::graph::AdjacencyView\">AdjacencyView</a>&lt;'a, M, T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"competitive/graph/trait.AdjacenciesWithEindex.html\" title=\"trait competitive::graph::AdjacenciesWithEindex\">AdjacenciesWithEindex</a> + <a class=\"trait\" href=\"competitive/graph/trait.EdgeView.html\" title=\"trait competitive::graph::EdgeView\">EdgeView</a>&lt;M, T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: 'a,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.AViewIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#426-429\">Source</a><a href=\"#associatedtype.AViewIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.AdjacencyView.html#associatedtype.AViewIter\" class=\"associatedtype\">AViewIter</a>&lt;'g&gt; = <a class=\"struct\" href=\"competitive/graph/struct.AdjacencyViewIterFromEindex.html\" title=\"struct competitive::graph::AdjacencyViewIterFromEindex\">AdjacencyViewIterFromEindex</a>&lt;'g, 'a, <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;, M, T&gt;\n<span class=\"where\">where\n    D: 'g</span></h4></section><section id=\"method.aviews\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#430-432\">Source</a><a href=\"#method.aviews\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.AdjacencyView.html#tymethod.aviews\" class=\"fn\">aviews</a>&lt;'g&gt;(&amp;'g self, map: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a M</a>, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.AdjacencyView.html#associatedtype.AViewIter\" title=\"type competitive::graph::AdjacencyView::AViewIter\">AViewIter</a>&lt;'g&gt;</h4></section></div></details>","AdjacencyView<'a, M, T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#28\">Source</a><a href=\"#impl-Clone-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#28\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#28\">Source</a><a href=\"#impl-Debug-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#28\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EIndexedGraph-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#280-282\">Source</a><a href=\"#impl-EIndexedGraph-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.EIndexedGraph.html\" title=\"trait competitive::graph::EIndexedGraph\">EIndexedGraph</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.EIndex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#281\">Source</a><a href=\"#associatedtype.EIndex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" class=\"associatedtype\">EIndex</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","EIndexedGraph","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeMap%3CT%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#379-399\">Source</a><a href=\"#impl-EdgeMap%3CT%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.EdgeMap.html\" title=\"trait competitive::graph::EdgeMap\">EdgeMap</a>&lt;T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Emap\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#380\">Source</a><a href=\"#associatedtype.Emap\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.EdgeMap.html#associatedtype.Emap\" class=\"associatedtype\">Emap</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section><section id=\"method.construct_emap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#381-388\">Source</a><a href=\"#method.construct_emap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeMap.html#tymethod.construct_emap\" class=\"fn\">construct_emap</a>&lt;F&gt;(&amp;self, f: F) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EdgeMap.html#associatedtype.Emap\" title=\"type competitive::graph::EdgeMap::Emap\">Emap</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,</div></h4></section><section id=\"method.emap_get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#389-393\">Source</a><a href=\"#method.emap_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeMap.html#tymethod.emap_get\" class=\"fn\">emap_get</a>&lt;'a&gt;(&amp;self, map: &amp;'a Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EdgeMap.html#associatedtype.Emap\" title=\"type competitive::graph::EdgeMap::Emap\">Emap</a>, eid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" title=\"type competitive::graph::EIndexedGraph::EIndex\">EIndex</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"method.emap_get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#394-398\">Source</a><a href=\"#method.emap_get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeMap.html#tymethod.emap_get_mut\" class=\"fn\">emap_get_mut</a>&lt;'a&gt;(\n    &amp;self,\n    map: &amp;'a mut Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EdgeMap.html#associatedtype.Emap\" title=\"type competitive::graph::EdgeMap::Emap\">Emap</a>,\n    eid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" title=\"type competitive::graph::EIndexedGraph::EIndex\">EIndex</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"method.emap_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/graph_base.rs.html#242-244\">Source</a><a href=\"#method.emap_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeMap.html#method.emap_set\" class=\"fn\">emap_set</a>(&amp;self, map: &amp;mut Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EdgeMap.html#associatedtype.Emap\" title=\"type competitive::graph::EdgeMap::Emap\">Emap</a>, eid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" title=\"type competitive::graph::EIndexedGraph::EIndex\">EIndex</a>, x: T)</h4></section></div></details>","EdgeMap<T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeSize-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#289-293\">Source</a><a href=\"#impl-EdgeSize-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.EdgeSize.html\" title=\"trait competitive::graph::EdgeSize\">EdgeSize</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.esize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#290-292\">Source</a><a href=\"#method.esize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeSize.html#tymethod.esize\" class=\"fn\">esize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","EdgeSize","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeView%3C%5BT%5D,+T%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#409-418\">Source</a><a href=\"#impl-EdgeView%3C%5BT%5D,+T%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.EdgeView.html\" title=\"trait competitive::graph::EdgeView\">EdgeView</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.eview\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#413-417\">Source</a><a href=\"#method.eview\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeView.html#tymethod.eview\" class=\"fn\">eview</a>(&amp;self, map: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, eid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" title=\"type competitive::graph::EIndexedGraph::EIndex\">EIndex</a>) -&gt; T</h4></section></div></details>","EdgeView<[T], T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeView%3CVec%3CT%3E,+T%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#400-407\">Source</a><a href=\"#impl-EdgeView%3CVec%3CT%3E,+T%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.EdgeView.html\" title=\"trait competitive::graph::EdgeView\">EdgeView</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.eview\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#404-406\">Source</a><a href=\"#method.eview\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.EdgeView.html#tymethod.eview\" class=\"fn\">eview</a>(&amp;self, map: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, eid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.EIndexedGraph.html#associatedtype.EIndex\" title=\"type competitive::graph::EIndexedGraph::EIndex\">EIndex</a>) -&gt; T</h4></section></div></details>","EdgeView<Vec<T>, T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GraphBase-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#277-279\">Source</a><a href=\"#impl-GraphBase-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.GraphBase.html\" title=\"trait competitive::graph::GraphBase\">GraphBase</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.VIndex\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#278\">Source</a><a href=\"#associatedtype.VIndex\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" class=\"associatedtype\">VIndex</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","GraphBase","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#25-42\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dfs_order\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#26-41\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.dfs_order\" class=\"fn\">dfs_order</a>(&amp;self, root: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#4-22\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.bfs_order\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#5-21\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.bfs_order\" class=\"fn\">bfs_order</a>(&amp;self, root: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#45-62\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dfs_tree\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#46-61\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.dfs_tree\" class=\"fn\">dfs_tree</a>(&amp;self, root: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt;</h4></section></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#65-93\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each_connected_components\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/order.rs.html#67-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.for_each_connected_components\" class=\"fn\">for_each_connected_components</a>&lt;F&gt;(&amp;self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;[(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)]),</div></h4></section></summary><div class=\"docblock\"><p>f: |g, root, ord: [vertex, parent]| {}</p>\n</div></details></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#37-60\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.vertices_size\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#39-41\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.vertices_size\" class=\"fn\">vertices_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of vertices.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edges_size\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#43-45\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.edges_size\" class=\"fn\">edges_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of edges.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.vertices\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#47-49\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.vertices\" class=\"fn\">vertices</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over graph vertices.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.adjacencies\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#51-53\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.adjacencies\" class=\"fn\">adjacencies</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, <a class=\"struct\" href=\"competitive/graph/struct.Adjacency.html\" title=\"struct competitive::graph::Adjacency\">Adjacency</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return a slice of adjacency vertices.</p>\n</div></details><section id=\"method.builder\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#54-56\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.builder\" class=\"fn\">builder</a>&lt;T&gt;(vsize: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraphBuilder.html\" title=\"struct competitive::graph::SparseGraphBuilder\">SparseGraphBuilder</a>&lt;T, D&gt;</h4></section><section id=\"method.builder_with_esize\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#57-59\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.builder_with_esize\" class=\"fn\">builder_with_esize</a>&lt;T&gt;(\n    vsize: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    esize: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraphBuilder.html\" title=\"struct competitive::graph::SparseGraphBuilder\">SparseGraphBuilder</a>&lt;T, D&gt;</h4></section></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#66-74\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"competitive/graph/trait.SparseGraphConstruction.html\" title=\"trait competitive::graph::SparseGraphConstruction\">SparseGraphConstruction</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_edges\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#71-73\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.from_edges\" class=\"fn\">from_edges</a>(vsize: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, edges: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct graph from edges.</p>\n</div></details></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/topological_sort.rs.html#3-25\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.topological_sort\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/graph/topological_sort.rs.html#4-24\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.topological_sort\" class=\"fn\">topological_sort</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/tree/tree_order.rs.html#4-23\">Source</a><a href=\"#impl-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tree_order\" class=\"method\"><a class=\"src rightside\" href=\"src/competitive/tree/tree_order.rs.html#6-22\">Source</a><h4 class=\"code-header\">pub fn <a href=\"competitive/graph/struct.SparseGraph.html#tymethod.tree_order\" class=\"fn\">tree_order</a>(&amp;self, root: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>(order, parents)</p>\n</div></details></div></details>",0,"competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VertexMap%3CT%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#342-360\">Source</a><a href=\"#impl-VertexMap%3CT%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.VertexMap.html\" title=\"trait competitive::graph::VertexMap\">VertexMap</a>&lt;T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Vmap\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#343\">Source</a><a href=\"#associatedtype.Vmap\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.VertexMap.html#associatedtype.Vmap\" class=\"associatedtype\">Vmap</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section><section id=\"method.construct_vmap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#344-351\">Source</a><a href=\"#method.construct_vmap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexMap.html#tymethod.construct_vmap\" class=\"fn\">construct_vmap</a>&lt;F&gt;(&amp;self, f: F) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.VertexMap.html#associatedtype.Vmap\" title=\"type competitive::graph::VertexMap::Vmap\">Vmap</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; T,</div></h4></section><section id=\"method.vmap_get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#352-355\">Source</a><a href=\"#method.vmap_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexMap.html#tymethod.vmap_get\" class=\"fn\">vmap_get</a>&lt;'a&gt;(&amp;self, map: &amp;'a Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.VertexMap.html#associatedtype.Vmap\" title=\"type competitive::graph::VertexMap::Vmap\">Vmap</a>, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"method.vmap_get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#356-359\">Source</a><a href=\"#method.vmap_get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexMap.html#tymethod.vmap_get_mut\" class=\"fn\">vmap_get_mut</a>&lt;'a&gt;(\n    &amp;self,\n    map: &amp;'a mut Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.VertexMap.html#associatedtype.Vmap\" title=\"type competitive::graph::VertexMap::Vmap\">Vmap</a>,\n    vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"method.vmap_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/graph_base.rs.html#225-227\">Source</a><a href=\"#method.vmap_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexMap.html#method.vmap_set\" class=\"fn\">vmap_set</a>(&amp;self, map: &amp;mut Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.VertexMap.html#associatedtype.Vmap\" title=\"type competitive::graph::VertexMap::Vmap\">Vmap</a>, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>, x: T)</h4></section></div></details>","VertexMap<T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VertexSize-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#284-288\">Source</a><a href=\"#impl-VertexSize-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.VertexSize.html\" title=\"trait competitive::graph::VertexSize\">VertexSize</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.vsize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#285-287\">Source</a><a href=\"#method.vsize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexSize.html#tymethod.vsize\" class=\"fn\">vsize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></div></details>","VertexSize","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VertexView%3C%5BT%5D,+T%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#369-377\">Source</a><a href=\"#impl-VertexView%3C%5BT%5D,+T%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.VertexView.html\" title=\"trait competitive::graph::VertexView\">VertexView</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.vview\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#373-376\">Source</a><a href=\"#method.vview\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexView.html#tymethod.vview\" class=\"fn\">vview</a>(&amp;self, map: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; T</h4></section></div></details>","VertexView<[T], T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VertexView%3CVec%3CT%3E,+T%3E-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#361-368\">Source</a><a href=\"#impl-VertexView%3CVec%3CT%3E,+T%3E-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, T&gt; <a class=\"trait\" href=\"competitive/graph/trait.VertexView.html\" title=\"trait competitive::graph::VertexView\">VertexView</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, T&gt; for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.vview\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#365-367\">Source</a><a href=\"#method.vview\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.VertexView.html#tymethod.vview\" class=\"fn\">vview</a>(&amp;self, map: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, vid: Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.GraphBase.html#associatedtype.VIndex\" title=\"type competitive::graph::GraphBase::VIndex\">VIndex</a>) -&gt; T</h4></section></div></details>","VertexView<Vec<T>, T>","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vertices-for-SparseGraph%3CD%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#295-303\">Source</a><a href=\"#impl-Vertices-for-SparseGraph%3CD%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"competitive/graph/trait.Vertices.html\" title=\"trait competitive::graph::Vertices\">Vertices</a> for <a class=\"struct\" href=\"competitive/graph/struct.SparseGraph.html\" title=\"struct competitive::graph::SparseGraph\">SparseGraph</a>&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.VIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#296-299\">Source</a><a href=\"#associatedtype.VIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"competitive/graph/trait.Vertices.html#associatedtype.VIter\" class=\"associatedtype\">VIter</a>&lt;'g&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;\n<span class=\"where\">where\n    D: 'g</span></h4></section><section id=\"method.vertices\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/competitive/graph/sparse_graph.rs.html#300-302\">Source</a><a href=\"#method.vertices\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"competitive/graph/trait.Vertices.html#tymethod.vertices\" class=\"fn\">vertices</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"competitive/graph/trait.Vertices.html#associatedtype.VIter\" title=\"type competitive::graph::Vertices::VIter\">VIter</a>&lt;'_&gt;</h4></section></div></details>","Vertices","competitive::graph::sparse_graph::DirectedSparseGraph","competitive::graph::sparse_graph::UndirectedSparseGraph","competitive::graph::sparse_graph::BidirectionalSparseGraph"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[53329]}