searchState.loadedDescShard("aizu_online_judge", 0, "Verification of <code>competitive</code> crate by Aizu Online Judge\nDiscrete Optimization Problems\nData Sets and Queries\nGraph Algorithms\nIntroduction to Programming I\nCoin Changing Problem\n0-1 Knapsack Problem\nKnapsack Problem\nLongest Increasing Subsequence\nEdit Distance (Levenshtein Distance)\n0-1 Knapsack Problem II\nKnapsack Problem with Limitations\nHuge Knapsack Problem\nKnapsack Problem with Limitations II\nLargest Square\nLargest Rectangle\nLargest Rectangle in a Histogram\n✅  AC  0ms\n✅  AC  0ms\n✅  AC  1ms\n✅  AC  3ms\n✅  AC  5ms\n✅  AC  0ms\n✅  AC  4ms\n✅  AC  36ms\n✅  AC  0ms\n✅  AC  18ms\n✅  AC  12ms\n✅  AC  2ms\nDisjoint Set: Union Find Tree\nWeighted Union Find Trees\nRange Minimum Query (RMQ)\nRange Sum Query\nRange Search (kD Tree)\nRange Update Query (RUQ)\nRange Add Query (RAQ)\nRMQ and RUQ\nRSQ and RAQ\nRMQ and RAQ\nRSQ and RUQ\nThe Smallest Window I\nThe Smallest Window II\nThe Number of Windows\nSliding Minimum Element\nUnion of Rectangles\nThe Maximum Number of Customers\nThe Maximum Number of Overlaps\n✅  AC  4ms\n✅  AC  14ms\n✅  AC  11ms\n✅  AC  11ms\n✅  AC  238ms\n✅  AC  46ms\n✅  AC  23ms\n✅  AC  52ms\n✅  AC  27ms\n✅  AC  26ms\n✅  AC  59ms\n✅  AC  2ms\n✅  AC  1ms\n✅  AC  165ms\n✅  AC  64ms\n✅  AC  30ms\n✅  AC  2ms\n✅  AC  6ms\nSingle Source Shortest Path\nSingle Source Shortest Path (Negative Edges)\nAll Pairs Shortest Path\nMinimum Spanning Tree\nMinimum-Cost Arborescence\nArticulation Points\nBridges\nStrongly Connected Components\nCycle Detection for a Directed Graph\nTopological Sort\nDiameter of a Tree\nHeight of a Tree\nLowest Common Ancestor\nRange Query on a Tree\nRange Query on a Tree II\nMaximum Flow\nMinimum Cost Flow\nBipartite Matching\n✅  AC  46ms\n✅  AC  57ms\n✅  AC  2ms\n✅  AC  3ms\n✅  AC  9ms\n✅  AC  0ms\n✅  AC  1ms\n✅  AC  1ms\n✅  AC  5ms\n✅  AC  0ms\n✅  AC  2ms\n✅  AC  7ms\n✅  AC  2ms\n✅  AC  68ms\n✅  AC  33ms\n✅  AC  112ms\n✅  AC  0ms\n✅  AC  0ms\n✅  AC  0ms\nHello World\n✅  AC  0ms")